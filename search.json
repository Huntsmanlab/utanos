[{"path":"https://huntsmanlab.github.io/utanos/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 utanos authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1. Sample Filtering and Quality Evaluation","text":"utanos package begins relative copy-number (rCN) call genomic data. expects rCN data output tools QDNASeq WiseCondorX. data consists calls (numeric value) ‘bin’ genome. bin artificially defined partitioning genome pieces sufficient size reasonably estimate relative copy-number. shallow sequencing needed sufficient depth present base-pair level resolution. Tabular long-format example: Relative CN-callers QDNAseq sometimes built-QC functionality filtering bins. commonly low-mappability blacklist regions (see paper descriptions). CN-callers also can whole-sample QC evaluation options though vast majority tend manual. require researcher examine every individual sample. vignette cover utanos can used filtering QC evaluation individual group level.","code":"chromosome   start     end sample    CN.call <chr>        <int>   <int> <chr>       <dbl> 1           900001  950000 VOA14948A    1.00 1           950001 1000000 VOA14948A    1.00 1          1000001 1050000 VOA14948A    1.00 1          1050001 1100000 VOA14948A    1.00 1          1100001 1150000 VOA14948A    0.96 1          1150001 1200000 VOA14948A    0.96"},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"i---filtration","dir":"Articles","previous_headings":"","what":"I - Filtration","title":"1. Sample Filtering and Quality Evaluation","text":"Often, order focus CN-aberrations interest, convenient filter just blacklist regions. centromeres? Telomeres? regions genome commonly copy-number aberrant background human population. Perhaps nice mask . Utanos clarifies filtration process. Note: Utanos comes 2 tables common variants (one hg19 hg38). can used filter dataset like . Database Genomic Variants (DGV)associated paper let’s break filtration step using real example dataset. accompanying data package utanos utanosmodellingdata found . Clone repo somewhere convenient common ‘repos’ folder machine read sample data. human endometrial carcinoma sWGS data aligned hg19. sample data relative copy-numbers called QDNAseq. ‘use’ column S4 object indicates bins QDNAseq determines useable. bins ‘FALSE’ . details QDNAseq methods see bioconductor vignette . FilterCNs utanos function adds another two columns featureData table maskgaps maskcomCNVs parameters set TRUE. use, centro.telo.mask, comCNV.mask columns refer ‘masks’, subset columns essentially mask downstream analysis. final note FilterCNs function: using filter_by parameter user can provide regions create mask filter QDNAseq copy-number object. Just pass dataframe locations, one location per row, filter_by parameter. Using maskname parameter user can set name mask. maskname parameter expects character string. Next, can visualize masks using CNSegmentsPlot function.  Clearly visible plot several regions commonly copy-number variant humans coincide copy-number/segmentation change. Depending user’s specific use case regions may may worth excluding. Note: dolog2 parameter set TRUE call see copy-number calls segments log2 transformed centered 0. See documentation function details.","code":"rcn.obj <- readRDS(\"~/Path_to_your_data/a_data_object_aligned_to_hg38.rds\") rcn.obj <- FilterCNs(cnobj = rcn.obj,                      genome = \"hg38\",                      minimum_overlap = 5000,                      removebins = FALSE,                      maskgaps = TRUE,                      maskcomCNVs = TRUE) > library(utanos) > library(magrittr) > rcn.obj <- readRDS(\"~/repos/utanosmodellingdata/sample_copynumber_data/sample_rcn_data.rds\") > rcn.obj <- FilterCNs(cnobj = rcn.obj,                        genome = \"hg19\",                        minimum_overlap = 5000,                        removebins = FALSE,                        maskgaps = TRUE,                        maskcomCNVs = TRUE) > featureData(rcn.obj)@data %>% head(5)                 chromosome  start    end     bases       gc mappability blacklist residual   use 1:1-30000                1      1  30000  66.66667 55.48500    12.39630  3.263333      NaN FALSE 1:30001-60000            1  30001  60000 100.00000 39.75667    28.22070  0.000000      NaN FALSE 1:60001-90000            1  60001  90000 100.00000 36.13000    27.47780  0.000000      NaN FALSE 1:90001-120000           1  90001 120000 100.00000 39.61667     9.05091  0.000000      NaN FALSE 1:120001-150000          1 120001 150000 100.00000 46.52333     7.33796  0.000000      NaN FALSE                 centro.telo.mask comCNV.mask 1:1-30000                  FALSE       FALSE 1:30001-60000               TRUE       FALSE 1:60001-90000               TRUE       FALSE 1:90001-120000              TRUE       FALSE 1:120001-150000             TRUE       FALSE > a <- CNSegmentsPlot(rcn.obj,                       sample = \"CC-CHM-1341\",                       highlight_masks = c('comCNV.mask'),                       point_size = 0.5,                       dolog2 = TRUE,                        def_point_colour = 'grey') > a"},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"ii---sample-quality-evaluation","dir":"Articles","previous_headings":"","what":"II - Sample Quality Evaluation","title":"1. Sample Filtering and Quality Evaluation","text":"Shallowly sequenced whole genome data involves copy-number calling two stages: relative copy-calling (via tools QDNASeq WiseCondorX) absolute copy number calling run relative calls (via tools like rascal). Naturally, accuracy inferences can made downstream analysis depend heavily accuracy copy number calls inferred. However, large projects intensive demand manually evaluate quality hundreds thousands samples. another niche Utanos fills. Use GetSampleQualityDecision function get quality calls sample dataset. QualityPlot function can used visualize samples fall outside thresholds.  default behaviour function make sample-wise decision based thresholds median segment standard deviation total segment count.","code":"> qc_decisions <- GetSampleQualityDecision(rcn.obj) > qc_plot <- QualityPlot(qc_decisions) > qc_decisions %>% head(5)        sample seg_counts  median_sd decision seg_cut    med_cut 1 CC-CHM-1341        204 0.07696209     High   620.3 0.09096386 2 CC-CHM-1347        695 0.07137276      Low   620.3 0.09096386 3 CC-CHM-1353        235 0.06784682     High   620.3 0.09096386 4 CC-CHM-1355        240 0.07509611     High   620.3 0.09096386 5 CC-CHM-1361        529 0.07547814     High   620.3 0.09096386 > qc_plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"ii-1---about-the-metrics-median-segment-variance-and-segment-count","dir":"Articles","previous_headings":"II - Sample Quality Evaluation","what":"II.1 - About the metrics: Median segment variance and segment count","title":"1. Sample Filtering and Quality Evaluation","text":"segment variance calculated sample variance per segment, .e variance log2log_2 ratios bin segment. observed median segment variance sample-wise measure noise, defined median set variances. segment count simply number distinct segments found sample. poor quality samples -segementation frequent indicator. strategy quality evaluation technique consider metrics tandem. work intuition, consider following two copy-number profiles:","code":""},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"sample-2-poorer-quality-copy-number-profile","dir":"Articles","previous_headings":"II - Sample Quality Evaluation > II.1 - About the metrics: Median segment variance and segment count","what":"Sample 2: Poorer quality copy number profile","title":"1. Sample Filtering and Quality Evaluation","text":"key aspects differ two profiles : number segments, length segments, variance within segment log2log_2 ratios, .e see copy number ratios tightly clustered around orange line sample 1 compared sample 2.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/A-samplequality-vignette.html","id":"iii---possible-future-additions-and-ideas-the-copy-number-profile-abnormality-score-penalty","dir":"Articles","previous_headings":"","what":"III - Possible future additions and ideas: The copy-number profile abnormality score penalty","title":"1. Sample Filtering and Quality Evaluation","text":"metric distinguish abnormal healthy copy number profiles. score quantifies deviation segments normal diploid state sample-level. copy-number profile abnormality score can expressed follows: CPA=Σi=1n(|Zsegmenti|*lsegmenti)nCPA \\ = \\ \\frac{\\Sigma^{n}_{=1} (|Z_{segment_i}|* l_{segment_i})}{n} , ZsegmentiZ_{segment_i} represents ZZ-score segment ii. lsegmentl_{segment} represents length segment nn represents number segments. average segment length can represented follows: Σi=1nlsegmentin\\frac{\\Sigma^{n}_{=1}l_{segment_i}}{n} term functions penalty term sample quality, short segments generally observed bad quality truly highly aberrant samples. Thus, calculating penalty addition metrics informative. important note alone metric problematic. Copy-number aberrant expected state biology sample truly chromosomal aberrations. metric tandem others seek find aberration none present. Thus, future workflow classifier (trained test set) features segment sizes, median segment variances, Lilliefor normality statistic, read length, coverage etc.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"i---introduction","dir":"Articles","previous_headings":"","what":"I - Introduction","title":"2. Investigating Copy-Number Diversity","text":"Broadly, vignette seeks demonstrate user answer following three questions using Utanos: dataset, copy-number (CN) gains losses co-occur? extent aberrations co-occur across individual samples? can done relative-CN vs absolute-CN scales? Utanos provides two options find answers questions. 1 - using plots/diagrams visualize differences, 2 - manually examining informative, well-formatted tables. Exclusions: vignette cover data filtration setting masks QDNAseq object detail. vignette titled “Sample Filtering Quality Evaluation” covers filtration QC steps. example dataset use samples found utanosmodellingdata repository found . already done, clone repo somewhere convenient common ‘repos’ folder machine read example data. human endometrial carcinoma sWGS data aligned hg19. associated publication (Jamieson, 2024) published CCR can found .","code":"> library(utanos) > library(QDNAseq) > library(magrittr) > rcn.obj <- readRDS(\"~/repos/utanosmodellingdata/sample_copynumber_data/sample_rcn_data.rds\") > rcn.obj QDNAseqCopyNumbers (storageMode: lockedEnvironment) assayData: 103199 features, 10 samples    element names: copynumber, segmented  protocolData: none phenoData   sampleNames: CC-CHM-1341 CC-CHM-1347 ... CC-HAM-0385 (10 total)   varLabels: name total.reads ... loess.family (6 total)   varMetadata: labelDescription featureData   featureNames: 1:1-30000 1:30001-60000 ... Y:59370001-59373566 (103199 total)   fvarLabels: chromosome start ... comCNV.mask (11 total)   fvarMetadata: labelDescription experimentData: use 'experimentData(object)' Annotation:"},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"ii---call-gains-and-losses-on-relative-copy-number-data","dir":"Articles","previous_headings":"","what":"II - Call gains and losses on relative copy-number data","title":"2. Investigating Copy-Number Diversity","text":"callBins function QDNAseq package can run segmented copy number data determine chromosomal aberrations. function adds gain/loss probability slots input S4 object. hood makes use CGHcall R package. Please refer packages algorithmic details. example first filtering outlined previous vignette. Notes: Depending dataset size callBins() function can take ","code":"> rcn.obj <- FilterCNs(cnobj = rcn.obj, genome = \"hg19\",                         maskcomCNVs = TRUE, removebins = TRUE) > rcn.obj <- callBins(rcn.obj)"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"iii-1---cn-summary-plot","dir":"Articles","previous_headings":"III - Plotting","what":"III.1 - CN-Summary Plot","title":"2. Investigating Copy-Number Diversity","text":"CGHbase R-package provides excellent plot showing gain loss probability across multiple samples. Utanos contains modified version plotting function can generated like …  Notes: ‘maskaberr’ parameter - Default Value: 0.1. parameter filters gains losses across samples CN-change (aberration ) lies value zero. ‘maskprob’ parameter - Default Value: 0.2. parameter filters gain/loss probabilities value. callBins function assigns probability gain/loss bin sample. especially useful analyzing noisy samples. parameters quite similar available allows users mask low probability gain/loss regions without taking account large gain/loss .","code":"> SummaryCNPlot(rcn.obj, maskaberr = 0.1, maskprob = 0.2)"},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"iii-2---relative-cn-diversity-plot","dir":"Articles","previous_headings":"III - Plotting","what":"III.2 - Relative-CN Diversity Plot","title":"2. Investigating Copy-Number Diversity","text":"Alternatively, relative copy-number changes can visualized sample--sample heatmap red signifying relative gain blue loss. just samples, row-wise clustering doesn’t much effect plot, larger cohorts setting cluster parameter TRUE can really help highlight trends data. simple hierarchical clustering.","code":"> rcn.plot <- RCNDiversityPlot(rcn.obj, Xchr = TRUE, cluster = TRUE) > rcn.plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"iv---table-output","dir":"Articles","previous_headings":"","what":"IV - Table Output","title":"2. Investigating Copy-Number Diversity","text":"alternative way understand data displayed plot section III.1 tabular format. allows custom filtering, juxtaposing actual numbers, creating dataset-specific plots. MakeSummaryTable() function can used generate tables copy-number gains losses. desired, user can also generate second table containing just peaks setting find_peaks = TRUE. threshold parameters outlined code section apply generated summary CN aberrations table peaks table. Peaks CN probability data identified using gsignal::findpeaks function. Peaks simply defined local maxima. function port-namesake function Octave package ‘signal’. Alongside copy-number gains losses reported table column genes contained region. convenience checking whether gene--interest contained within copy-number aberration. Just human mouse reference genomes supported point (Ex. ‘mm10’). MakeSummaryTable() function returns list either 1 2 tables (type: tibble). tables can easily saved csvs, tsvs, favourite tabular format perusal different user-friendly application excel.","code":"> library(gsignal)  # Probability of gain or loss threshold - i.e. declare the minimum mean probability of loss or gain across samples # Expl. For region Chr1:2850001-2865000, and probabilities of loss for 10 samples of: # 0.814 0 0 0 0 0.125 0.975 0 0 0 # The mean probability of loss would be 0.1914 > prob_loss <- 0.2 > prob_gain <- 0.2  # Log space mean relative copy number thresholds # To keep things consistent with the plot from the last section, lets use 0.1 > low_threshold <- -0.1 > high_threshold <- 0.1  # Presence threshold - i.e. In what minimum proportion of samples does the gain or loss need to be present? > proportion_threshold <- 0.2  # Run command > output <- MakeSummaryTable(rcn.obj,                               low_threshold, high_threshold,                               prob_loss, prob_gain,                               proportion_threshold,                              find_peaks = TRUE) > output$summary_table %>% head(5) # A tibble: 5 × 16   chromosome    start      end mean_copy_number gain_probability loss_probability gain_count   <chr>         <int>    <int>            <dbl>            <dbl>            <dbl>      <dbl> 1 1           8910001  9060000            0.157            0.244           0.0049          5 2 1           9600001 10230000            0.139            0.252           0.0038          6 3 1          10620001 10740000            0.119            0.222           0.0062          5 4 1          15420001 15630000            0.148            0.292           0.106           3 5 1          15960001 16080000            0.155            0.302           0.106           3 # ℹ 9 more variables: loss_count <dbl>, gain_proportion <dbl>, loss_proportion <dbl>, #   gain_samples <chr>, loss_samples <chr>, bin_count <int>, sum_of_bin_lengths <dbl>, #   coordinates <chr>, features_in_region <chr>"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"v-1---performing-the-scaling","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space","what":"V.1 - Performing the scaling","title":"2. Investigating Copy-Number Diversity","text":"Relative CNs space can useful identifying trends relative gains losses across samples experiment. However, absolute copy-numbers (aCNs) can even useful indicate ploidy place real numbers genomic features high-amplification events. Utanos makes use rascal package scale relative absolute space. , briefly detail options workflow, thorough understanding recommend user read rascal vignette. three major options scaling depending data available: mad/rmsd: Without data/metadata, just copy-numbers, best option. Different ploidy/cellularity combinations assumed, relative CNs scaled absolute, difference value nearest whole-number calculated. difference quantified either mean absolute deviation (mad) root mean squared error (rmsq). Finally, grid search performed determine local minima reported solution(s). several ‘solutions’ nearly equivalent rascal returns several, otherwise single cellularity-ploidy-mad/rmsq distance combo returned. Many options tuning available package discussed . vafs: case variant allele frequencies (vafs) sample, can used identify nearest ploidy-cellularity combination (described 1). two options umbrella. One assume maximum discovered VAF sample appropriate representation tumour fraction. equation describing relationship used select optimal solution grid search. details see vignette rascal github repo. tumourfractioni=aicaic+2(1−c)tumour fraction_i \\ = \\ \\frac{a_i c}{a_i c + 2(1-c)} c=cellularity, ai=copy-number locus c = cellularity \\text{, } a_i = \\text{copy-number locus } use vafs certain genes user identifies. example user expects ‘PTEN’ vafs suggestive tumour fraction can choose scale using just vafs. Known ploidies: case knowing sample ploidies via method (ex. FISH), option simply scale relative copy-numbers sample absolute given ploidies. utanos function documentation contains specifics expected formatting options. Utanos splits aCN scaling two parts. First, likeliest solutions (ploidy/cellularity/distance) calculated using rascal, second values scaled new CN-object made.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"v-1-1---performing-the-scaling-part-1","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.1 - Performing the scaling","what":"V.1.1 - Performing the scaling (part 1)","title":"2. Investigating Copy-Number Diversity","text":"find optimal ploidy cellularity, use FindRascalSolutions() function. first argument mandatory, rest optional. Arguments: cnobj - relative copy-number object ’ve using throughout vignettes. min_ploidy & max_ploidy - Determines range ploidies search . ploidy_step - stepwise increment ploidies along range. min_cellularity & max_cellularity - Determines range cellularities search . cellularity_step - stepwise increment cellularities along range. distance_function - distance function use, “MAD” (mean absolute difference) “RMSD” (root mean square difference). distance_filter_scale_factor - distance threshold solutions discarded multiple solution smallest distance. max_proportion_zero - maximum proportion fitted absolute copy number values zero copy number state. in_proportion_close_to_whole_number - minimum proportion fitted absolute copy number values sufficiently close whole number. max_distance_from_whole_number - maximum distance whole number fitted absolute copy number can considered sufficiently close. solution_proximity_threshold - close two solutions can one filtered; reduces number best fit solutions many minima close proximity. keep_all - TRUE return solutions additional best_fit column indicate local minima acceptable solutions (may useful avoid computing distance grid twice).","code":"> solutions <- FindRascalSolutions(cnobj)"},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"v-1-2---performing-the-scaling-part-2","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.1 - Performing the scaling","what":"V.1.2 - Performing the scaling (part 2)","title":"2. Investigating Copy-Number Diversity","text":"scale samples use CalculateACNs() function. first three arguments mandatory, rest optional depending context. first 4 arguments benefit elaboration, described, provide examples using function. Arguments: cnobj - relative copy-number object ’ve using throughout vignettes. “maxvaf”: Chooses solution aligns maximum detected VAF. assume suggestive cellularity according formula character vector genes pull VAFs, genes assumed order decreasing precedence, ex. c(‘TP53’, ‘KRAS’, ‘PTEN’), “mad”: Chooses solution lowest MAD RMSD score; case tie goes lower ploidy solution. dataframe known ploidies. Scales sample aCN space using plodies. Expects column sample_id - matching rcn.obj, ploidy - numeric value. rascal_sols - third argument expects TSV file data.frame calculated rascal solutions. See part 1 details creation. Example solutions table: variants must must datatable/dataframe required columns : sample_id, chromosome, start, end, gene_name, ref, alt, vaf (exact names, order) row said table must correspond unique variant variant must associated variant allele frequency row must also associated specific sample, sample_id must match Example variants data table: Note: example table information necessary. extraneous columns.  Examples: . Scaling using solution best (lowest) distance: B. Scaling using ‘maxvaf’ option providing variant allele frequencies C. Scaling prioritizing variants certain genes. Note: warning message C provides useful message users case ACN solution samples found rascal.","code":"> solutions <- FindRascalSolutions(cnobj) > head(solutions) ##      sample_id ploidy cellularity distance ## 1: CC-CHM-1341   3.34        0.85    0.166 ## 2: CC-CHM-1341   1.34        0.46    0.166 ## 3: CC-CHM-1341   3.33        0.90    0.166 ## 4: CC-CHM-1341   2.34        0.60    0.166 ## 5: CC-CHM-1341   2.35        0.52    0.174 ## 6: CC-CHM-1341   4.34        1.00    0.176 > variants_path <- \"~/some_path/variants.csv\" > variants <- data.table::fread(file = variants_path, sep = ',') > variants <- variants %>% dplyr::rename(gene_name = gene_symbol) > head(variants[, 1:10]) ##      sample_id chromosome     start       end ref alt gene_name ## 1: CC-CHM-1341          3  30691871  30691872  GA   G    TGFBR2 ## 2: CC-CHM-1341          3 142274739 142274740  AT   A       ATR ## 3: CC-CHM-1341          7 151945071 151945071   G  GT     KMT2C ## 4: CC-CHM-1341         10  90771767  90771767   G   A       FAS ## 5: CC-CHM-1341         16    343635    343635   C   T     AXIN1 ## 6: CC-CHM-1341         17   7577556   7577556   C   T      TP53 ##                       consequence estimated_impact  vafs ## 1:             frameshift_variant             HIGH 0.201 ## 2:             frameshift_variant             HIGH 0.196 ## 3: stop_gained,frameshift_variant             HIGH 0.212 ## 4:               missense_variant         MODERATE 0.301 ## 5:               missense_variant         MODERATE 0.226 ## 6:               missense_variant         MODERATE 0.720 > outputs <- CalculateACNs(rcn.obj,                             acn.method = 'mad',                             rascal_sols = solutions) > outputs <- CalculateACNs(rcn.obj,                             acn.method = 'maxvaf',                             rascal_sols = solutions,                             variants = variants,                             return_sols = TRUE,                             return_S4 = TRUE) Warning message: In ReplaceQDNAseqAssaySlots(cnobj, output[[\"acns\"]], output[[\"acns_segs\"]]) :   Not all samples had ACN solutions.     These samples are excluded from the returned acn object.     The probability of loss/gain values in the returned acn object were calculated using the relative CNs object. > names(outputs) [1] \"rascal_solutions\" \"acn.obj\" > outputs$rascal_solutions %>% head(5)     sample_id ploidy cellularity tumour_fraction   vaf 1 CC-CHM-1341   1.34        0.46           0.365  0.72 2 CC-CHM-1347   3.46        0.32           0.592 0.874 3 CC-CHM-1355      2        0.83           0.828 0.395 4 CC-CHM-1361      2        0.72           0.719 0.313 5 CC-HAM-0369   1.94           1               1 0.872 > outputs <- CalculateACNs(rcn.obj,                             acnmethod = c(\"TP53\", \"KRAS\", \"PTEN\"),                             rascal_sols = solutions,                             variants = variants,                             return_sols = TRUE,                             return_S4 = TRUE) Warning message: In ReplaceQDNAseqAssaySlots(cnobj, output[[\"acns\"]], output[[\"acns_segs\"]]) :   Not all samples had ACN solutions.     These samples are excluded from the returned acn object.     The probability of loss/gain values in the returned acn object were calculated using the relative CNs object."},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"v-2-1---copy-number-segment-plots","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.2 - Plotting","what":"V.2.1 - Copy-Number Segment Plots","title":"2. Investigating Copy-Number Diversity","text":"scaled copy-numbers, absolute copy-numbers (aCNs), can visualized using plotting function mentioned vignette 1. Let’s briefly compare aCNs generated using maxvaf solution compared ‘mad’ solution.   scaling using ‘mad’ set sample ploidy around 4 whereas ‘maxvaf’ option instead preferred ploidy 2.","code":"> maxvaf_outputs <- CalculateACNs(rcn.obj,                                    acn.method = 'maxvaf',                                    rascal_sols = solutions,                                    variants = variants,                                    return_S4 = TRUE) > mad_outputs <- CalculateACNs(rcn.obj,                                 acnmethod = 'mad',                                 rascal_sols = solutions,                                 return_S4 = TRUE) > CNSegmentsPlot(maxvaf_outputs$acn.obj,                   sample = \"CC-CHM-1341\",                   min_copy_number = 0,                   max_copy_number = 12.5,                   copy_number_breaks = c(1:12)) > CNSegmentsPlot(mad_outputs$acn.obj,                   sample = \"CC-CHM-1341\",                   min_copy_number = 0,                   max_copy_number = 12.5,                   copy_number_breaks = c(1:12))"},{"path":"https://huntsmanlab.github.io/utanos/articles/B-cndiversityandscaling-vignette.html","id":"v-2-2---copy-number-diversity-plots","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.2 - Plotting","what":"V.2.2 - Copy-Number Diversity Plots","title":"2. Investigating Copy-Number Diversity","text":"Finally, similarly section III.2, samples can visualized together heatmap. Using strategy, sample--sample similarities differences easily differentiable. datasets larger numbers samples, recommended order samples informative manner. done default ACNDiversityPlot function. ordering found performing hierarchical clustering passed copy-number segments. design, ACNDiversityPlot function expects data long-format. encourage users think bin-size like plot. example, plotting genome 3 billion base pairs long bins 30kb across barely visible eye. bin size 7-inch plot make roughly 7e-05 width. even one-bin amplification, visible heatmap. However, matter lot plotting software. Drawing rectangles many minuscule bins potentially across many samples take long time! TL;DR real point plotting tiny bins plot-type. Instead, re-shape data comfortable bin-size plotting improve speed. found 1e06 2e06 reasonably quick several hundred samples. user interested finding tiny amplification events, filtering examining tabular outputs much better option (ex. outputs$acn_segment_tables).","code":"> outputs <- CalculateACNs(rcn.obj,                             acnmethod = 'mad',                             rascal_sols = solutions) > long_segs <- SegmentsToCopyNumber(outputs$acn_segment_tables,                                      1000000,                                      genome = 'hg19',                                      Xincluded = TRUE) > colnames(long_segs) <- c(\"chromosome\", \"start\", \"end\", \"state\", \"sample_id\") > ACNDiversityPlot(long_segments = long_segs)"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"pre-amble","dir":"Articles","previous_headings":"","what":"Pre-amble","title":"3. Investigating and Creating Copy-Number Signatures","text":"vignette demonstrates use copy-number (CN) abnormalities data, represent imprints distinct mutational processes, either build new CN-Signatures determine existing signatures present dataset. workflow based one described methods section paper published 2018 (Macintyre et al. 2018). published literature thus far focused CN-Signatures absolute copy-number data. say data sample ploidy known. However, CN-Signatures can extracted relative absolute CN data, cases covered . First, vignette cover finding signature exposures new dataset using existing signatures (section III). Second, creation new signatures covered (section IV). either case, begin, set samples segmented copy-number profiles needed. profiles either formatted list named dataframes exist within QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"i---input-data","dir":"Articles","previous_headings":"","what":"I - Input data","title":"3. Investigating and Creating Copy-Number Signatures","text":"earlier vignettes sufficed use just samples demonstrate usage utanos functions. However, order generate new cn-signatures, considerably data needed. Therefore, demonstrate signature exposure calling creation new signatures, Britroc HGSOC (High-Grade Serous Ovarian Carcinoma) cohort used (Macintyre et al. 2018). segmented copy-number data can found paper’s bitbucket repository. step one, download said data/clone repo, read absolute copy-numbers: vignette use just higher-quality samples (2 3 star context paper). list available utanosmodellingdata.","code":"> library(utanos) > library(dplyr) > acn.obj <- readRDS(\"~/repos/cnsignatures/manuscript_Rmarkdown/data/britroc_absolute_copynumber.rds\") > acn.obj QDNAseqCopyNumbers (storageMode: lockedEnvironment) assayData: 103199 features, 280 samples    element names: copynumber, segmented  protocolData: none phenoData   sampleNames: IM_100 IM_101 ... JBLAB-4282 (280 total)   varLabels: name total.reads ... mapTP53cn (10 total)   varMetadata: labelDescription featureData   featureNames: 1:1-30000 1:30001-60000 ... Y:59370001-59373566 (103199 total)   fvarLabels: chromosome start ... use (9 total)   fvarMetadata: labelDescription experimentData: use 'experimentData(object)' Annotation: britroc_samples_subset <- data.table::fread(\"~/repos/utanosmodellingdata/sample_sets/brit117_samples.csv\") acn.obj <- acn.obj[,britroc_samples_subset$x]"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"ii---extract-cn-features","dir":"Articles","previous_headings":"","what":"II - Extract CN-features","title":"3. Investigating and Creating Copy-Number Signatures","text":"Step 2: model copy-number aberrations genome, find trends commonalities (call signatures henceforth), specific features within dataset pulled modeled separately. can extract copy number features using either ExtractCopyNumberFeatures() ExtractRelativeCopyNumberFeatures() functions.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"ii-1---relative-copy-numbers","dir":"Articles","previous_headings":"II - Extract CN-features","what":"II.1 - Relative Copy-Numbers","title":"3. Investigating and Creating Copy-Number Signatures","text":"Section coming soon!","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"ii-2---relative-copy-numbers","dir":"Articles","previous_headings":"II - Extract CN-features","what":"II.2 - Relative Copy-Numbers","title":"3. Investigating and Creating Copy-Number Signatures","text":"Standard features: Absolute copy-numbers genomic bin (copynumbers) magnitude copy number change (changepoints) genomic length (bp) segment (segsizes) number breakpoints per chromosome arm (brchrmarm) number breakpoints per 10 megabases (bp10MB) genomic length (bp) oscillating copy number regions (osCNs) Optional features: Minimum number chromosomes (count) needed account 50% CN changes sample (nc50) Distance base pairs breakpoint centromere (cdist) two CN-Signature sets included utanosmodellingdata (p53abn endometrial HGSOC) use standard features. hundred samples, function run within minutes.","code":"cn_features <- ExtractCopyNumberFeatures(acn.obj,                                           genome = \"hg19\",                                           extra_features = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"iii---determine-cn-signature-exposures","dir":"Articles","previous_headings":"","what":"III - Determine CN-signature exposures","title":"3. Investigating and Creating Copy-Number Signatures","text":"HGSOC CN-Signatures included utanosmodellingdata repository created using 91 samples (highest quality ones). find exposures remaining samples group, subset original object samples used signature creation, calculate exposures. CallSignatureExposures() function utanos runs several computational steps appropriate order convenience. user can run separately want. details see docs ExtractCopyNumberFeatures()/ExtractRelativeCopyNumberFeatures(), GenerateSampleByComponentMatrix(), QuantifySignatures(). exposures can visualized SignatureExposuresPlot() function like :  Alongside plot, SignatureExposuresPlot() function returns sample ordering plot. Given signatures Macintyre et al. 2018 publication, let’s re-order match signature order paper easy comparison:  Interpreting plot, clear sample subset higher exposures signatures 1 4. Referencing (Macintyre et al. 2018), signatures correspond poor overall survival + breakage-fusion bridge events whole-genome duplication + PI3K/AKT signalling inactivation respectively.","code":"hgsoc_sigs <- readRDS(file = \"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\") acn.obj.subset <- acn.obj[,!colnames(acn.obj) %in% colnames(hgsoc_sigs@consensus)] sigexposures <- CallSignatureExposures(copy_numbers_input = acn.obj.subset,                                         component_models = \"~/repos/utanosmodellingdata/component_models/30kb_ovarian/component_models_britroc_aCNs.rds\",                                         signatures = \"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\",                                        refgenome = \"hg19\",                                         relativeCN_data = FALSE) ggp1 <- SignatureExposuresPlot(sigexposures) ggp1$plot reord_britroc <- as.integer(c(2,6,5,4,7,3,1)) ggp1 <- SignatureExposuresPlot(sigexposures[reord_britroc,]) ggp1$plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"iv---create-new-cn-signatures","dir":"Articles","previous_headings":"","what":"IV - Create New CN-Signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"Creating copy-number signatures anew involves steps directly determining exposures existing signatures. process can also iterative given metrics, earlier steps re-run different parameters/inputs. vignette using Britroc cohort samples demonstrate signature creation seeking re-create signatures found 2018 paper exactly. exact replication, user need set parameters exactly seen paper repository run steps without utanos wrappers. reiterate, modelling signatures seen match (Macintyre et al. 2018). expected.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"iv-1---modelling","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.1 - Modelling","title":"3. Investigating and Creating Copy-Number Signatures","text":"First, CN features discussed section II modeled using mixtures gaussians poissons help flexmix R-package (Grün Leisch 2008). Utanos provides wrapper called FitMixtureModels(). , given mixture models CN feature, samples used modelling compared component model sum--posterior probabilities matrix calculated. GenerateSampleByComponentMatrix() utanos function calculates posteriors. detail: copy-number event feature sample, compute posterior probability belonging component said feature. sample, sum posterior event vectors sum--posterior probabilities vector. Combine sum--posterior vectors patient--component sum--posterior probabilities matrix. Finally, given patient--component sum--posterior probabilities matrix, matrix decomposition run many times decide optimal rank two output matrices (sample--signature matrix signature--component matrix). optimal rank optimal number signatures. NMF R-package leveraged matrix decomposition using ChooseNumberSignatures() function (Gaujoux Seoighe 2010). Succinctly, modelling stage involves… Fitting mixture components. Calculating patient--component sum--posterior probabilities matrix. Searching optimal number signatures (interval 3-12 used default), running NMF many times (ex. 1000x) different random seeds signature number. Note 2. returned sample_by_component matrix may components different order components component_models object. components increasing order component_models object. Note 3. Estimating optimal number signatures quite computationally heavy. function takes longest run utanos package. might make sense run function get snack!  dot line plot contains several metrics NMF runs possible ranks aid selection optimal number signatures. Brief heuristics look values metric: detailed discussions metrics consult NMF package documentation sources online. utanos package defaults ChooseNumberSignatures() function include running NMF 100 times rank. keep default run-time manageable. Package users however encouraged experiment iterations run parameter values. (Macintyre et al. 2018) paper instance used 1000 iterations estimating rank (parameters reason plot differs one paper bitbucket repository).","code":"# Model using just the highest quality samples acn.obj.high <- acn.obj[,colnames(acn.obj) %in% colnames(hgsoc_sigs@consensus)] cnfeatures_high <- ExtractCopyNumberFeatures(acn.obj.high,                                               genome = \"hg19\",                                               extra_features = FALSE)  component_models <- FitMixtureModels(cnfeatures_high) sample_by_component <- GenerateSampleByComponentMatrix(CN_features, component_models)  # The next function contains a method that MUST have NMF loaded, this is a known issue with the NMF package library(NMF) rank_estimate_outputs <- ChooseNumberSignatures(sample_by_component) NMF::plot(rank_estimate_outputs$estrank, rank_estimate_outputs$randomized_estrank,           what = c(\"cophenetic\", \"dispersion\", \"sparseness\", \"silhouette\"),           xname = \"Observed\", yname = \"Randomised\", main = \"\")"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"iv-2---evaluation","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.2 - Evaluation","title":"3. Investigating and Creating Copy-Number Signatures","text":"point good idea stop examine modelling done thus far. points consider: metrics provided input matrices appear outperforming randomized matrices, may wish set restrictive demands samples can used input data. ability detect copy number signatures depends heavily whether pattern sufficiently represented data, , signal can obfuscated lower quality samples introduce noise. Finding balance quantity vs. quality important. largest number high-quality samples possible used signature creation () ideal. default utanos suggests using 6 CN features modelling, however may desirable use /others. two can easily used setting extra_features parameter ExtractCopyNumberFeatures() TRUE. Examine sample--component matrix heatmap see major contributions many different samples component. sample--component matrix indicate higher values posteriors least several components per sample case modelling appropriately capturing heterogeneity data. Examine consensus matrices (average connectivity matrix across NMF runs) heatmap form alongside silhouette track (others) see samples cluster together. clear clusters emerge? Visualize sample--component matrix:   consensus matrices across 4 ranks (5,6,7, 8):  Note map corresponding ranks 6 7 look pretty good, samples tend cluster together across runs. Samples tend either dark red dark blue rather lighter shade somewhere . details connectivity/consensus matrices see docs NMF::connectivity(). content modelling clear factorization rank (number signatures) emerges, move next section create signature set.","code":"NMF::aheatmap(sample_by_component, fontsize = 7,                Rowv=FALSE, Colv=FALSE, cexRow = 0, legend = FALSE,               breaks=c(seq(0,199,2),500),                main=\"Component x Sample matrix\") NMF::consensusmap(rank_estimate$fit[c(3:6)], main='Consensus matrix - Cluster stability', treeheight = 0, labCol=NA, labRow=NA, tracks = c(\"silhouette:\"))"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"iv-3---create-cn-signatures","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.3 - Create CN-Signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"GenerateSignatures() function running NMF many times (multiple ranks) therefore takes second-longest run function utanos package. might make sense start function go get snack! GenerateSignatures() function simple, wrapping just single NMF call. provides default parameter values (ex. sets seed = 77777, nmf algorithm used “brunet”) user test many different options use NMF::nmf() function directly.  final step creating new signatures, visualize using NMF package’s various heatmap options: signature--component matrix heatmap (call ‘signature set’ ‘signatures’) sample--sample consensus matrix heatmap (, just one rank) sample--signature matrix heatmap (contribution sample signature)","code":"signatures <- GenerateSignatures(sample_by_component, 7)  # Usually worth stopping and saving the objects just created since re-running can take a while.  # saveRDS(signatures, file = paste0(\"path_to_signatures/signatures_object.rds\")) # saveRDS(component_models, file = paste0(\"path_to_signatures/component_models_object.rds\")) basismap(signatures, Rowv = NA, main = \"Signature x Component matrix\") consensusmap(signatures, main='Consensus matrix - Cluster stability',               treeheight = 0, labRow = NA, labCol = NA) coefmap(signatures, Colv=\"consensus\", tracks=c(\"basis:\"),          main=\"Sample x Signature matrix\", treeheight = 0)"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"section-note","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"Section Note","title":"3. Investigating and Creating Copy-Number Signatures","text":"modelling section utanos provides number wrapping functions flexmix NMF convenience. However, ’s unrealistic user may want flexibility wrappers allow. case quite straightforward grab utanos source code github functions run step individually control.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"v---compare-signature-sets","dir":"Articles","previous_headings":"","what":"V - Compare signature sets","title":"3. Investigating and Creating Copy-Number Signatures","text":"Utanos includes 3 methods compare different signature sets. Using wasserstein distance (heatmap) compare mixture components two CN-features. Compare mixture components two CN-features using shaded line plots Alluvial flow Sankey plots visulalize difference samples cluster given exposures two signature sets. default samples assigned signature maximum exposure. section, comparisons made signatures just created , signatures 2018 MacIntyre paper (HGSOC), 2024 Jamieson paper (p53abn EC). cm_ex = example component models made vignette sigs_ex = example signatures made vignette cm_hgsoc = Component models 2018 Macintyre paper sigs_hgsoc = Signatures 2018 Macintyre paper cm_p53ec = Components models created using samples 2024 Jamieson paper sigs_p53ec = Signatures 2024 Jamieson paper","code":"cm_ex <- component_models sigs_ex <- signatures cm_hgsoc <- readRDS(\"~/repos/utanosmodellingdata/component_models/30kb_ovarian/component_models_britroc_aCNs.rds\") sigs_hgsoc <- readRDS(\"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\") cm_p53ec <- readRDS(\"~/repos/utanosmodellingdata/component_models/30kb_endometrial/component_models_vancouver_aCNs.rds\") sigs_p53ec <- readRDS(\"~/repos/utanosmodellingdata/signatures/30kb_endometrial/component_by_signature_britmodelsvansigs5_aCNs.rds\")"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"v-1---earth-movers-distance","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.1 - Earth-movers distance","title":"3. Investigating and Creating Copy-Number Signatures","text":"One--one sequential comparisons component composing two different signatures difficult. guarantee signature set run one set parameters one input dataset number components another another set parameters input dataset. Therefore, comparisons intrinsically many--many better option. Utanos provides function, WassDistancePlot(), calculates 2-D Wasserstein (earth-movers distance) transform component signature given feature component feature another signature set. higher distance means two components less similar lower distance means opposite. WassDistancePlot() function orders components increasing order colours high-similarity components lightly less similar components darker hue.  earth-movers distance heatmap shows two lowest components example signature’s oscillating CN-feature highly similar first component published signatures. CN-feature ‘copynumber’ heatmap shows typicaly trend lower components much similar one another distributions flatten extend rise value. Note components - c.6 B - c.8 less similar might expect. likely due just 6 components set (example set), value pulled .","code":"library(patchwork) # For easy plotting of multiple figures next to one another cm_ex <- component_models sigs_ex <- signatures ggp2 <- WassDistancePlot(cm_a = cm_ex,                           cm_b = cm_hgsoc,                           component = 'osCN') ggp3 <- WassDistancePlot(cm_a = cm_ex,                           cm_b = cm_hgsoc,                           component = 'copynumber')  ggp2$plot + ggp3$plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"v-2---shaded-line-plots-of-mixture-components","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.2 - Shaded line plots of mixture components","title":"3. Investigating and Creating Copy-Number Signatures","text":"Individual mixture components signature can visualized using shaded line plots. case “segment size” copy-number feature series Gaussians. MixtureModelPlots() function utanos can return plots components compose signature. Additionally, specific components prevalent signature indicated shaded. examples.  briefly mentioned section V.2, CN-feature ‘copynumber’ shows typical trend lower components much similar one another distributions flatten extend rise value reflecting increase variance. easy see shaded line plots.","code":"# Reorder the HGSOC signatures the same way as is done in the paper (keep things easy to compare) sigs_hgsoc_df <- basis(sigs_hgsoc) reord_britroc <- as.integer(c(2,6,5,4,7,3,1)) sigs_hgsoc_df <- sigs_hgsoc_df[,reord_britroc]  mixture_plots <- MixtureModelPlots(sigs_hgsoc_df,                                     cm_hgsoc,                                     sig_of_interest = 7) mixture_plots$copynumber"},{"path":"https://huntsmanlab.github.io/utanos/articles/C-cnsignatures-vignette.html","id":"v-3---alluvial-flow-plots-of-samples-across-signatures","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.3 - Alluvial flow plots of samples across signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"make Alluvial-flow/Sankey plot 2 comparisons needed. Signature exposures sample set signatures: Britroc HGSOC samples -> Britroc HGSOC Sigs Britroc HGSOC samples -> Vancouver p53abn Endometrial Sigs result two matrices signature exposures per sample. utanos function SEAlluvialPlot() takes two matrices signature exposures creates Alluvial plot using easyalluvial R-package. course, samples must matrices. already installed, install easyalluvial package.  Notably, alluvial plot highlights likely similarity signature 1 HGSOC set signature 2 p53abn EC set. Many samples maximum exposure one, also max. exposure . goes A4 B3. past three subsections combination tests significance can help user comparing contrasting copy-number signature sets.","code":"library(easyalluvial) # Pull exposures for the 91 highest quality samples out of the signatures object itself (the coefficients matrix) expo_mat_hq <- NMF::scoef(sigs_hgsoc) expo_mat_hq <- expo_mat_hq[reord_britroc,] expo_mat_hq <- NormaliseMatrix(expo_mat_hq) # Exposures were calculated for the 117-91 samples back in Section 3.  expo_mat_mq <- sigexposures[reord_britroc,] # Combine expo_hgsoc <- cbind(expo_mat_hq, expo_mat_mq)  # Find exposures of HGSOC samples to p53abn EC signatures expo_ec <- CallSignatureExposures(acn.obj,                                   component_models = cm_hgsoc,                                    signatures = sigs_p53ec,                                    refgenome = 'hg19')  # Pass both matrices of signature exposures to the SEAlluvialPlot utanos function alluvial_output <- SEAlluvialPlot(expo_hgsoc, expo_ec) alluvial_output$plot"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/D-shallowhrd-vignette.html","id":"i---introduction-background","dir":"Articles","previous_headings":"","what":"I - Introduction & background","title":"4. Predicting Homologous Recombination Deficiency (HRD)","text":"vignette discusses prediction homologous recombination deficiency (HRD) relative copy-number (rCN) data derived shallow whole-genome sequencing (sWGS). Detecting HRD interest researchers clinicians, particularly ovarian breast cancer, treatment HRD cases poly (ADP-ribose) polymerase inhibitors (PARPis) associated improved progression-free survival (Davies et al. 2017; Callens et al. 2023). HRD tumors partially, entirely, unable repair double-strand breaks (DSBs) via homologous recombination, rely alternative pathways DSB repair. reliance reflected characteristic ‘genomic scars’ HRD tumors, various academic commercial assays attempted use scars, often conjunction mutations key HR-related genes BRCA1/2, identify HRD patient tumors (Davies et al. 2017; Callens et al. 2023). Many existing methods used identify HRD status HRDetect (Davies et al. 2017) commercial Myriad MyChoice assay require variant calling, necessitating deep whole-genome sequencing targeted sequencing conjunction another method CN assessment, sWGS SNP array. Given significantly reduced cost sWGS, desirable predict HRD solely CN data furnished sWGS. 2020 Eeckhoutte et al. devised shallowHRD (Eeckhoutte et al. 2020), tool prediction HRD status CN data derived sWGS, since validated least one follow-study (Guo et al. 2023). updated version shallowHRD since published (Callens et al. 2023), code publicly available. interest streamlining HRD prediction, implemented version one shallowHRD (Eeckhoutte et al. 2020) Utanos, changes ease ingestion QDNAseq objects cohort-wide HRD prediction; core algorithm remains . brief, large-genomic alterations (LGAs), defined adjacent segments arm greater 10 Mb size separated fewer 3 Mb, one example genomic scar indicative HRD (Callens et al. 2023). ShallowHRD seeks identify LGAs iterative fashion, composed two passes segmented CN data. noise inherent sampling process, varies function read depth, among factors like GC-content, mappability, artifacts derived fixation, segmentation necessarily imperfect. ShallowHRD therefore seeks merge adjacent segments differ CN less threshold order better identify LGAs. first pass, kernel density estimation (KDE) used find local minimum segment-wise CN distance – , CN distance adjacent segments. Adjacent segments CN distance less identified threshold merged segmented CN values recalculated accordingly. merging segments first pass, second estimate optimal merging threshold determined fashion, time using updated segmented CN values produced first pass. provides refined estimate merging threshold, used merge original segments, yielding final set merged segments. Finally, LGAs sample counted, HRD status determined; samples 20 LGAs considered HRD, remainder non-HRD.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/D-shallowhrd-vignette.html","id":"ii---input-data","dir":"Articles","previous_headings":"","what":"II - Input data","title":"4. Predicting Homologous Recombination Deficiency (HRD)","text":"example dataset use samples found utanosmodellingdata repository found . already done, clone repo somewhere convenient common ‘repos’ folder machine read example data. human endometrial carcinoma sWGS data aligned hg19. associated publication (Jamieson et al. 2024) published CCR can found . Download said data/clone repo, read relative copy-numbers:","code":"> library(utanos) > library(QDNAseq) > library(ggplot2) > rcn.obj <- readRDS(\"~/repos/utanosmodellingdata/sample_copynumber_data/sample_rcn_data.rds\") > rcn.obj QDNAseqCopyNumbers (storageMode: lockedEnvironment) assayData: 103199 features, 10 samples    element names: copynumber, segmented  protocolData: none phenoData   sampleNames: CC-CHM-1341 CC-CHM-1347 ... CC-HAM-0385 (10 total)   varLabels: name total.reads ... loess.family (6 total)   varMetadata: labelDescription featureData   featureNames: 1:1-30000 1:30001-60000 ... Y:59370001-59373566 (103199 total)   fvarLabels: chromosome start ... comCNV.mask (11 total)   fvarMetadata: labelDescription experimentData: use 'experimentData(object)' Annotation:"},{"path":"https://huntsmanlab.github.io/utanos/articles/D-shallowhrd-vignette.html","id":"iii---extract-data-and-run-shallowhrd","dir":"Articles","previous_headings":"","what":"III - Extract data and run shallowHRD","title":"4. Predicting Homologous Recombination Deficiency (HRD)","text":"can run shallowHRD directly QDNAseq object just read , using RunShallowHRDFromQDNA() function, table segments, using RunShallowHRD() function. Since estimating threshold used merge segments requires 100,000 iterations default, running single sample can take minutes. interest time, extract single sample QDNAseq object demonstrate running shallowHRD table segments. run samples object, just call RunShallowHRDFromQDNA() directly QDNAseq object, arguments remaining ’ll provide RunShallowHRD(). Let’s extract bin-wise segment-wise rCN data form QDNAseq object using ExportBinsQDNAObj(), join single table. process taken care us RunShallowHRDFromQDNA() running shallowHRD samples. can see resulting dataframe single sample. Note ExportBinsQDNAObj() log transform rCN data, values centered 1, rather 0. ‘ratio’ column indicates bin-wise rCN, ‘ratio_median’ column indicates segment-wise rCN. wish pass raw tables RunShallowHRD(), one many tools generating rCN profiles, format data fashion, column names. shallowHRD expects rCN data log-transformed, call RunShallowHRD(), need indicate data log-transformed, setting log_transform = TRUE. Since know sample female, include X-chromosome: include_chr_X = TRUE. sampling process threshold estimation relies pseudo-random number generation, option specifying seed, ensure repeated runs sample produce identical result. can seed parameter, value specified default, necessary change . leave num_simulations default value 100,000. don’t recommend reducing value, leads instability estimation segment merging threshold experience. setting shrd_save_path = './', save table summarizing large segments detected, count large segments range sizes, current working directory. Lastly, specify sample name, used label files plots, sample = 'CC-CHM-1341', indicate wish generate plot illustrating segment merging process, plot = TRUE. run code block , ’ll observe every thousandth iteration sampling process threshold determination printed (omitted ).","code":"> bin_df <- ExportBinsQDNAObj(object = rcn.obj, type = \"copynumber\", filter = TRUE) %>%      tidyr::pivot_longer(cols = !c(\"feature\", \"chromosome\", \"start\", \"end\"), names_to = \"sample\", values_to = \"ratio\") %>%      dplyr::select(!feature)  > seg_df <- ExportBinsQDNAObj(object = rcn.obj, type = \"segments\", filter = TRUE) %>%      tidyr::pivot_longer(cols = !c(\"feature\", \"chromosome\", \"start\", \"end\"), names_to = \"sample\", values_to = \"ratio_median\") %>%      dplyr::select(!feature)  > df_group <- dplyr::inner_join(x = bin_df, y = seg_df, by = dplyr::join_by(sample, chromosome, start, end)) %>%      dplyr::select(!end) %>%      dplyr::group_by(sample)  > df_list <- dplyr::group_split(df_group, .keep = FALSE) > names(df_list) <- dplyr::group_keys(df_group)$sample > head(df_list$`CC-CHM-1341`) # A tibble: 6 × 4   chromosome  start ratio ratio_median   <chr>       <int> <dbl>        <dbl> 1 1          840001 1.11         0.941 2 1          870001 1.05         0.941 3 1          900001 1.02         0.941 4 1          930001 0.893        0.941 5 1          960001 1.17         0.941 6 1          990001 0.988        0.941 > shrd_result <- RunShallowHRD(raw_ratios_file = as.data.frame(df_list$`CC-CHM-1341`),                 log_transform = TRUE,                include_chr_X = TRUE,                shrd_save_path = './',                sample = 'CC-CHM-1341',                plot = TRUE)"},{"path":"https://huntsmanlab.github.io/utanos/articles/D-shallowhrd-vignette.html","id":"iv---assess-the-results","dir":"Articles","previous_headings":"","what":"IV - Assess the results","title":"4. Predicting Homologous Recombination Deficiency (HRD)","text":"Let’s take look results returned shrd_result. can see list returned, stored shrd_result. first element, hrd_status, boolean indicates whether sample predicted HRD ; case see sample predicted non-HRD. Next see n_lga, table indicates number genomic alterations given size (Mb) greater. example, can see merging segments, sample 27 segments size 3 Mb greater, includes 11 segments 10 Mb greater. Since sample must 20 segments 10 Mb greater altered rCN positive prediction HRD, can see sample non-HRD. lga element table segments greater 10 Mb size, including segments considered LGAs precise criteria LGAs, see segments table corresponding entry n_lga table. Recall considered LGA, segment must greater 10 Mb, preceded another segment greater 10 Mb chromosome arm, distance segments must less 3 Mb. WC column marks LGA segments 1, non-LGA segments 0. add number 1s WC column, see sum 11, indicated row 8 n_lga table. Finally, plot element provides plot illustrates segment merging process:  plot can see usual rCN profile, log-transformed centered 0. thick green bars indicate original segmentation. visualize process segment merging two passes, medium thickness aquamarine bars illustrate segments merging first threshold, thinnest bright green bars show final segmentation, merging using threshold estimated second pass. can see many segments merged first pass, undergoing additional merging un-merging second pass, near middle chromosome 7. Let’s take quick look sample predicted borderline HRD (15-19 LGAs). can run shallowHRD fashion . sample, find 15 LGAs, visually reflected plot:","code":"> shrd_result $hrd_status [1] FALSE  $n_lga   Size_LGA Number_LGA 1        3         27 2        4         23 3        5         23 4        6         20 5        7         15 6        8         14 7        9         14 8       10         11 9       11         11  $lga    index chr chr_arm     start       end ratio_median     size level WC 1     34   1     1.0    840001  32100000 -0.087733372 31260000     1  0 2      2   1     1.0  32100001  44520000  0.932817103 12420000     2  1 3      3   1     1.0  44520001 121350000  0.039840265 76830000     3  1 4      4   1     1.5 143760001 171090000  0.531069493 27330000     4  0 5      5   1     1.5 171090001 249210000  1.075190314 78120000     5  1 22    22   7     7.5  62460001  79560000 -0.024736678 17100000    22  0 23    23   7     7.5  79560001 159120000  0.358396262 79560000    23  1 25    25   8     8.5  47460001  67080000  0.002882509 19620000    25  0 26    26   8     8.5  67080001 146280000  0.611644543 79200000    26  1 31    31   9     9.5  94230001 119400000 -0.128156351 25170000    31  0 32    32   9     9.5 119400001 135480000  0.377956527 16080000    32  1 38    38  11    11.5  55050001  68220000 -0.015957574 13170000    38  0 39    39  11    11.5  68220001  79920000  0.641546029 11700000    39  1 40    40  11    11.5  79920001  91470000 -0.018878010 11550000    40  1 44    44  12    12.5  38460001  63780000  0.462575888 25320000    44  0 45    45  12    12.5  63780001  74400000  0.829443681 10620000    45  1 46    46  12    12.5  74400001 133830000  0.055195654 59430000    46  1 56    56  18    18.5  18540001  41190000  0.437227739 22650000    56  0 57    57  18    18.5  41190001  78000000 -0.150400989 36810000    57  1  $plot > shrd_result_borderline <- RunShallowHRD(raw_ratios_file = as.data.frame(df_list$`CC-HAM-0385`),                 log_transform = TRUE,                include_chr_X = TRUE,                shrd_save_path = './',                sample = 'CC-HAM-0385',                plot = TRUE)  > shrd_result_borderline $hrd_status [1] FALSE  $n_lga   Size_LGA Number_LGA 1        3         29 2        4         27 3        5         27 4        6         21 5        7         20 6        8         19 7        9         17 8       10         15 9       11         14  $lga    index chr chr_arm     start       end ratio_median     size level WC 3      3   1     1.5 143760001 200670000  0.051024003 56910000     3  0 4      4   1     1.5 200670001 249210000  0.387362541 48540000     4  1 8      8   3     3.5  93540001 130950000 -0.035786412 37410000     8  0 9      9   3     3.5 130950001 147720000 -0.575615328 16770000     9  1 10    10   3     3.5 147720001 197820000 -0.008682243 50100000    10  1 20    20   6     6.5  61980001  74970000  0.353323181 12990000    20  0 21    21   6     6.5  74970001 170910000 -0.029146346 95940000    21  1 23    23   7     7.5  62460001 139620000  0.048236186 77160000    23  0 24    24   7     7.5 139620001 159120000  0.887525271 19500000    24  1 25    25   8     8.0    180001  33360000 -1.514573173 33180000    25  0 26    26   8     8.0  33360001  43380000  0.399444565 10020000    26  1 27    27   8     8.5  47460001  67710000  0.403813062 20250000    27  0 28    28   8     8.5  67710001 100590000  0.698218410 32880000    28  1 29    29   8     8.5 100590001 146280000  0.318461465 45690000    29  1 35    35  10    10.5  42870001  61320000 -0.564904848 18450000    35  0 36    36  10    10.5  61320001 135420000  0.340277405 74100000    36  1 37    37  11    11.0    210001  22860000 -0.575615328 22650000    37  0 38    38  11    11.0  22860001  51540000 -0.040971781 28680000    38  1 39    39  11    11.5  55050001  81630000 -0.440263476 26580000    39  0 40    40  11    11.5  81630001 134940000 -0.101598140 53310000    40  1 45    45  14    14.5  19440001  73740000 -0.530114400 54300000    45  0 46    46  14    14.5  73740001 107280000 -0.060397280 33540000    46  1 47    47  15    15.5  20160001  91200000 -0.582079992 71040000    47  0 48    48  15    15.5  91200001 102390000  0.314406391 11190000    48  1 49    49  16    16.0     90001  17610000 -0.384583703 17520000    49  0 50    50  16    16.0  17610001  35130000  0.039840265 17520000    50  1 53    53  17    17.5  25380001  48660000 -0.476940288 23280000    53  0 54    54  17    17.5  48660001  81090000  0.037030731 32430000    54  1 70    70  23    23.0    300001  16980000 -0.875671865 16680000    70  0 71    71  23    23.0  16980001  35760000 -1.457989644 18780000    71  1 72    72  23    23.0  35760001  58080000 -0.498178735 22320000    72  1 73    73  23    23.5  63780001 122790000 -0.529072743 59010000    73  0 74    74  23    23.5 122790001 141840000 -0.064918266 19050000    74  1 75    75  23    23.5 141840001 155220000 -0.655171503 13380000    75  1  $plot"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/utanos.html","id":"sample-pre-processing","dir":"Articles","previous_headings":"","what":"Sample Pre-processing","title":"Introduction","text":"utanos R-package focuses downstream analysis, just later half analysis picture. serve first bit ’ve built Nextflow workflow serve pre-processing pipeline sWGS data can first step using utanos. Github Repository sWGS Nextflow Workflow decision use Nextflow + Singularity intentional - strategy improves inter-operability modularity. workflow can run cloud resources, local cluster-compute nodes, larger local machines built handle heavy processing. compute resources Singularity Nextflow installations can run pipeline. output Singularity pipeline can fed directly utanos multiple relative copy-number calling options available.","code":""},{"path":"https://huntsmanlab.github.io/utanos/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxwell Douglas. Author, maintainer. Branden Lynch. Author. Carlos Vasquez. Author. Jacky Yiu. Author. Matthew Eldridge. Author. Geoff Macintyre. Author. Ding Ma. Author. Nirupama Tamvada. Author. Sameer Shankar. Author.","code":""},{"path":"https://huntsmanlab.github.io/utanos/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Douglas M, Lynch B, Vasquez C, Yiu J, Eldridge M, Macintyre G, Ma D, Tamvada N, Shankar S (2025). utanos: Utilities Analysis Shallow WGS R. R package version 0.1.0.9000, https://huntsmanlab.github.io/utanos/.","code":"@Manual{,   title = {utanos: Utilities for The Analysis of Shallow WGS in R},   author = {Maxwell Douglas and Branden Lynch and Carlos Vasquez and Jacky Yiu and Matthew Eldridge and Geoff Macintyre and Ding Ma and Nirupama Tamvada and Sameer Shankar},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://huntsmanlab.github.io/utanos/}, }"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"package-goal","dir":"","previous_headings":"","what":"Package Goal:","title":"Utilities for The Analysis of Shallow WGS in R","text":"swiss army knife analyzing shallow/low-pass WGS data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"package-descriptiondetails","dir":"","previous_headings":"","what":"Package Description/Details:","title":"Utilities for The Analysis of Shallow WGS in R","text":"Utilities ANalysis Shallow WGS R (UTANOS utanos). Includes functions plotting, quality evaluation, data re-structuring, copy-number aberration exploration, copy-number signature inference, HRD identification. Additionally, tools export analyses/datasets formats useful human examination. (.e. non-computational purposes).","code":""},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Utilities for The Analysis of Shallow WGS in R","text":"Install R (version > 4.2)Cran place find right R Ensure following basic packages installed. Install bulk package’s dependencies making use librarian: Install annotables github: Finally, install utanos:","code":"install.packages(\"librarian\") BiocManager::install(\"Biobase\") librarian::shelf(caret, CGHcall, data.table, DBI, DescTools, devtools, doMC, dplyr, EnsDb.Hsapiens.v75, flexmix, GenomicRanges, ggalt, ggplot2, ggpubr, ggrepel, gridExtra, hrbrthemes, ks, magrittr, NMF, pheatmap, plyr, purrr, QDNAseq, readr, RMySQL, stringr, tidyr, viridis, YAPSA) devtools::install_github(\"stephenturner/annotables\") install_github(\"Huntsmanlab/utanos\")"},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"whole genome heatmap copy-number changes. expects absolute copy-numbers. Default behaviour perform hierarchical clustering samples plot heatmap order. Setting order parameter overrules behaviour.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"","code":"ACNDiversityPlot(   long_segments = data.frame(),   order = TRUE,   ret_order = FALSE,   save_path = FALSE,   rmblacklist = NULL,   addtitle = NULL,   sample_labels = FALSE,   ann_df = NULL,   obj_name = \"version1\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"long_segments dataframe. long format number rows (bins) sample.  using output CalculateACNs function first run SegmentsToCopyNumber convert long.  Expects following columns:  c(\"chromosome\", \"start\", \"end\", \"state\", \"sample_id\") order (optional) Character vector. Defines order samples plotted.  particularly useful plotting 1 heatmap next one another.  Allows samples line-horizontally. Example: c(\"CC-CHM-1341\", \"CC-CHM-1347\", \"CC-CHM-1355\", CC-CHM-1361\", \"CC-HAM-0369\", \"CC-HAM-0374\", \"CC-HAM-0379\", \"CC-HAM-0383\", \"CC-HAM-0385\") ret_order (optional) Logical. set TRUE function returns order samples plotted. save_path (optional) String. Expects path directory plot saved. (png) rmblacklist optional NULL character vector. Filter plot blacklist regions genome. ex. 'hg19' addtitle (optional) Logical. set TRUE add basic title plot. sample_labels (optional) Logical. set TRUE, display sample names y-axis ticks. ann_df (optional) Dataframe. Expects sample ids passed long_segments param.  See roxygen docs PlotAnnotationBars() details. obj_name (optional) String. Adds tag end filename saving image.  used save_path parameter also set.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"ggplot2 object list ggplot2 object vector ordered sample names.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","title":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","text":"Computes distance function fitting relative copy numbers whole number absolute values given ploidy cellularity. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","text":"","code":"AbsoluteCopyNumberDistance(   ploidy,   cellularity,   relative_copy_numbers,   weights = NULL,   distance_function = c(\"MAD\", \"RMSD\") )"},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","text":"ploidy tumour ploidy. cellularity cellularity, .e. fraction cells tumour. relative_copy_numbers numeric vector containing relative copy numbers, .e. ratios copy numbers average copy number. weights numeric vector weights apply copy number value (length relative_copy_numbers) distance_function distance function use, either \"MAD\" mean absolute difference \"RMSD\" root mean square difference, differences fitted absolute copy number values nearest whole number.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","text":"distance fitted absolute copy numbers whole numbers.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance function for fitting relative copy numbers to absolute — AbsoluteCopyNumberDistance","text":"","code":"data(copy_number) copy_number <- copy_number[copy_number$sample_id == \"X17222\", ] AbsoluteCopyNumberDistance(3, 0.67, copy_number$segmented) #> [1] 0.1429545"},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistanceGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","title":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","text":"Computes distance function fitting relative copy numbers whole number absolute values grid ploidies cellularities. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistanceGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","text":"","code":"AbsoluteCopyNumberDistanceGrid(   relative_copy_numbers,   weights = NULL,   min_ploidy = 1.5,   max_ploidy = 5.5,   ploidy_step = 0.01,   min_cellularity = 0.01,   max_cellularity = 1,   cellularity_step = 0.01,   distance_function = c(\"MAD\", \"RMSD\") )"},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistanceGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","text":"relative_copy_numbers numeric vector containing relative copy numbers, .e. ratios copy numbers average copy number. weights numeric vector weights apply copy number value (length relative_copy_numbers) min_ploidy, max_ploidy range ploidies. ploidy_step stepwise increment ploidies along grid. min_cellularity, max_cellularity range cellularities. cellularity_step stepwise increment cellularities along grid. distance_function distance function use, either \"MAD\" mean absolute difference \"RMSD\" root mean square difference, differences fitted absolute copy number values nearest whole number.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistanceGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","text":"distance fitted absolute copy numbers whole numbers.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AbsoluteCopyNumberDistanceGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance function for fitting relative copy numbers for a grid of ploidies and cellularities — AbsoluteCopyNumberDistanceGrid","text":"","code":"data(copy_number) copy_number <- copy_number[copy_number$sample_id == \"X17222\", ] segments <- CopyNumberSegments(copy_number) distances <- AbsoluteCopyNumberDistanceGrid(segments$copy_number, segments$weight)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArm.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a column for the chromosome arm in which each segment is in. — AddChromosomeArm","title":"Adds a column for the chromosome arm in which each segment is in. — AddChromosomeArm","text":"specifically, iterates segments, using genomic data middle positions chromosomes, determines whether segment left right middle position. example, segment chromosome 5 left middle position, chromosome arm 1. right instead, chromosome arm 1.5. Note iterative process done AddChromosomeArmHelper helper.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a column for the chromosome arm in which each segment is in. — AddChromosomeArm","text":"","code":"AddChromosomeArm(bam_ratios_frame, include_chr_X)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a column for the chromosome arm in which each segment is in. — AddChromosomeArm","text":"bam_ratios_frame data frame: cleaned version bam_ratios.txt file. algorithm, segment data already spurious regions removed. include_chr_X boolean: True include chromosome X/23, False otherwise.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArmHelper.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a chromosome arm column to df at the respective positions for each chromosome. — AddChromosomeArmHelper","title":"Adds a chromosome arm column to df at the respective positions for each chromosome. — AddChromosomeArmHelper","text":"Determines chromosome arm segment chromosome. determined positions given centromere_positions. Segments centromere Chr_N (first arm), segments centromere Chr_N.5 (second arm). ' procedure goes like . chromosome, segments middle position chromosome arm set 1. segments middle position chromosome arm set 2. , chromosome arm column : chromosome_arm = chromosome_number + (chromosome_arm - 1)/2 segments whose arm 1 0 added chromosome number, meaning segment chromosome arm Chr_N. , segments whose arm 2 1 added chromosome number, meaning chromosome arm Chr_N.5. Edge case: segments start middle pos end middle pos. case, split 2 proceed like .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArmHelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a chromosome arm column to df at the respective positions for each chromosome. — AddChromosomeArmHelper","text":"","code":"AddChromosomeArmHelper(df, include_chr_X, centromere_positions)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AddChromosomeArmHelper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a chromosome arm column to df at the respective positions for each chromosome. — AddChromosomeArmHelper","text":"df Data Frame modify. Column numbers RemoveCentromereTelomeres. include_chr_X boolean. Whether set chromosome arms segments Chr X/23 . centromere_positions array: middle positions chromosome ORDER 1 23.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"function takes existing absolute copy-number plot, vector gene names, optionally Ensembl DB use looking gene annotations. Ensure use Ensembl DB annotates genome version used existing plot. plot genes interest labeled returned.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"","code":"AddGenesToPlot(plot, genes, edb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75, ...)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"plot ggplot object, corresponding existing absolute copy-number plot. genes vector gene symbols like label plot – use upper case. edb name local Ensembl DB package use looking gene information. Defaults EnsDb.Hsapiens.v75, annotates hg19/GRCh37. ... Additional options controlling visual display labels; passed ggrepel::geom_label_repel(), supports arguments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"ggplot object gene labels added.","code":""},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/reference/AssignLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather big segments and assign levels iteratively — AssignLevels","title":"Gather big segments and assign levels iteratively — AssignLevels","text":"Iterates given segments_copy data frame. following iteration: Finds largest segment (size). , finds segments 'close' : closeness means ratio_median difference less threshold (thr). identify segments 'close' (called closest_indices), iterate , set level segments. Finally, remove closest_indices segments segments_copy.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AssignLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather big segments and assign levels iteratively — AssignLevels","text":"","code":"AssignLevels(segments, thr)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AssignLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather big segments and assign levels iteratively — AssignLevels","text":"segments data frame containing segment data. thr float: threshold previously estimated via KDE. Used determine whether large segments merged.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BreakSmoothToLGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps segments for LGA call. — BreakSmoothToLGA","title":"Preps segments for LGA call. — BreakSmoothToLGA","text":"many things, details found within function body. First, assigns segments meet certain criteria index 0 (4 cases + edge cases assigning index 0, inside inner -loop.) , removes segments assigned index 0. considered \"small breaks\".","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BreakSmoothToLGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps segments for LGA call. — BreakSmoothToLGA","text":"","code":"BreakSmoothToLGA(threshold, segments, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/BreakSmoothToLGA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps segments for LGA call. — BreakSmoothToLGA","text":"threshold float. Threshold ratio_median difference previously estimated. segments data frame: segment data (ideally) already processed (merging segments, small ones reinserted, ) granges_obj GRanges object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"order 1--1 comparisons QDNAseq WisecondorX outputs useful outputs format. function creates QDNAseq object WisecondorX output files returns .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"","code":"BuildWxQdnaObject(   input_path,   genome_used = \"hg19\",   bin_size = 30000,   Xincluded = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"input_path (string) path output files generated WisecondorX. directory. genome_used (string) reference genome used alignment. (default: hg19) bin_size (integer) bin size used copy number calling base pairs. (default: 30000) Xincluded (logical) Whether X chromosome included analysis. (default: FALSE)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"Whole genome copy number plot one sample partitioning lines chromosomes.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"","code":"CNSegmentsPlot(   cnobj,   sample = NULL,   copy_number_steps = NULL,   max_points_to_display = Inf,   highlight_masks = NULL,   min_copy_number = NULL,   max_copy_number = NULL,   copy_number_breaks = NULL,   dolog2 = NULL,   def_point_colour = \"black\",   point_alpha = 0.6,   point_size = 1,   point_shape = 16,   segment_colour = \"red\",   segment_alpha = 1,   segment_line_size = 1.5,   copy_number_step_colour = \"blue\",   copy_number_step_alpha = 0.35,   copy_number_step_line_size = 0.75,   xlabel = \"chromosome\",   ylabel = \"copy number\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"cnobj QDNAseq object contains copynumber, segmented assay slots.  function expects copy-number data segmented. May contain multiple samples. sample character string indicating sample.  Required object passed cnobj contains data multiple samples.  Ex. c('sample1')  Must match one sample names exactly. copy_number_steps data frame containing absolute_copy_number copy_number columns. max_points_to_display maximum number copy number points display (downsampling may carried copy number values number). highlight_masks character string indicating feature data slots containing logical masks bins. slot given colour.  Keep mind NA values filtered masks overlap last one take precedence.  Ex. c('comCNV.mask', 'centro.telo.mask') min_copy_number Numeric. minimum copy_number display. Effectively controls Y-axis limits. max_copy_number Numeric. maximum copy_number display. Effectively controls Y-axis limits. copy_number_breaks Vector integers. Breaks grid lines displayed.  ex. c(1:12) def_point_colour character string indicating colour default copy number points. point_alpha Numeric. transparency copy number points. point_size size copy number points. point_shape point shape. See ggplot2::geom_point() docs shape parameter details. segment_colour colour copy number segments. segment_alpha transparency copy number segments. segment_line_size size lines copy number segments. copy_number_step_colour colour copy number step lines. copy_number_step_alpha transparency copy number step lines. copy_number_step_line_size size lines copy number. steps. xlabel, ylabel x- y-axis labels.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"ggplot object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"copynumber values passed function can relative absolute scales, log2 ratios. However, scale used consistently slot cnobj (copy_number_steps dataframe case may ).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Absolute Copy Numbers — CalculateACNs","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"CalculateACNs() calculates absolute copy numbers (ACNs) relative copy number profiles one samples. several included options . Note: providing table variant allele frequencies (VAFs) 'mad' method available. function makes use rascal package R instructions can found vignette:  https://github.com/crukci-bioinformatics/rascal/blob/master/vignettes/rascal.Rmd","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"","code":"CalculateACNs(   cnobj,   acnmethod,   rascal_sols = NULL,   variants = NULL,   acn_save_path = FALSE,   return_sols = FALSE,   return_S4 = FALSE,   distance_decimal_places = 7 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"cnobj S4 object type QDNAseqCopyNumbers. object must contain copynumber slot segmented slot. acnmethod method calculate ACNs. Can one :  \"maxvaf\" - Calculate ACNs assuming maximum discovered VAF sample appropriate representation tumour fraction.  char vector - rather using max vaf provide character vector genes pull VAFs. genes assumed order decreasing precedence. ex. c('TP53', 'KRAS', 'PTEN')  \"mad\" - Calculate ACNs using mean absolute difference (MAD) column solutions table.  using variant allele frequencies targeted panel sequencing technology: variants must must datatable/dataframe. Required columns: sample_id, chromosome, start, end, gene_name, ref, alt, vaf. row said table must correspond unique variant. variant must associated variant allele frequency. row must also associated specific sample.  dataframe known ploidies per sample - Calculate ACNs bin given already know ploidy samples. rascal_sols tsv dataframe calculated rascal solutions. variants (optional) Dataframe string. table variants containing variant allele frequencies per gene per sample. acn_save_path (optional) String. output path (absolute path recommended) save result. return_sols (optional) Logical. Return selected rascal solution. return_S4 (optional) Logical. distance_decimal_places number decimal places compare finding minimum distance.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"list containing: list dataframes (one sample) QDNAseq S4 object. Optionally, dataframe rascal solutions.  function returns ACNs rascal solution found, one , sample skipped.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"","code":"solutions <- \"~/Documents/.../rascal_solutions.csv\" rcn.obj <- \"~/repos/utanosmodellingdata/sample_copy_number_data/sample_filtered_cn_data.rds\" variants <- \"~/Documents/.../allvariants.clinvar.cosmic.exons.csv\" save_path <- \"~/Documents/.../rascal_ACN_segments.rds\" variants <- data.table::fread(file = variants, sep = ',') variants <- variants %>% dplyr::rename(chromosome = chr,                                        gene_name = genecode_gene_name) outputs <- CalculateACNs(rcn.obj,                          acn.method = 'maxvaf',                          rascal_sols = solutions,                          variants = variants,                          return_sols = TRUE,                          return_S4 = TRUE) output <- CalculateACNs(rcn.obj,                         rascal_sols = solutions,                         variants = variants,                         acnmethod = c('TP53', 'KRAS', 'BRCA1',                                       'BRCA2', 'PIK3CA', 'PTEN'),                         acn_save_path = save_path) output <- CalculateACNs(rcn.obj,                         rascal_sols = solutions,                         acnmethod = 'mad')"},{"path":"https://huntsmanlab.github.io/utanos/reference/CallLGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines number of large genomic alterations (LGAs) for sizes 3:11 — CallLGA","title":"Determines number of large genomic alterations (LGAs) for sizes 3:11 — CallLGA","text":"Uses DetermineNumberOfLGAs determine number LGAs sizes 3 11 (Mb).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallLGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines number of large genomic alterations (LGAs) for sizes 3:11 — CallLGA","text":"","code":"CallLGA(threshold, segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CallLGA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines number of large genomic alterations (LGAs) for sizes 3:11 — CallLGA","text":"threshold float. Threshold ratio_median difference previously estimated. segments data frame: segment data (ideally) already processed (merging segments, small ones reinserted, )","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"CallSignatures() calculates copy-number signature exposures list samples given segmented copy-number profiles. function makes use code found CN-Signatures bitbucket repo. described robustly https://www.nature.com/articles/s41588-018-0179-8.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"","code":"CallSignatureExposures(   copy_numbers_input,   component_models = NULL,   signatures = NULL,   cores = 1,   log_features = FALSE,   extra_features = FALSE,   plot_savepath = NULL,   sigs_savepath = NULL,   relative = FALSE,   refgenome = \"hg19\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"copy_numbers_input list dataframes. dataframe segmented copy-numbers sample. component_models String. mixture models use determining components present dataset.  Options:  'component_models/30kb_ovarian/component_models_britroc_aCNs.rds' - Components determined modelling Britroc Ovarian sWGS samples. (Macintyre 2018)  'vancouver_HQendo_VAFrascal' - Components determined modelling high-quality p53abn sWGS endometrial samples. (2022) signatures String. signatures . Please name calculate exposures.  Options:  'signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds' - signatures created using Britroc Ovarian sWGS samples. (Macintyre 2018)  'VAFrascalHQendoVan6sigs' - signatures created using high-quality p53abn sWGS endometrial samples. plot_savepath (optional) String. path save sample--component heatmap. Please provide directory. sigs_savepath (optional) String. path save csv calculated signature exposures. Please provide directory. relative (optional) Logical. using relative Copy-Number data input, set TRUE. Otherwise, ignore. refgenome (optional) String. reference genome used. (ex. 'hg19', 'hg38') data_path String. path find signatures objects component models.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"dataframe exposures sample signature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"","code":"todo - make examples"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"Uses NMF package estimate rank matrix provided. context signature finding, equivalent determining optimal number signatures.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"","code":"ChooseNumberSignatures(   sample_by_component,   min_sig = 3,   max_sig = 12,   iter = 100,   cores = 4,   nmfalg = \"brunet\",   seed = 77777 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"sample_by_component Matrix. Expects sum--posteriors probability matrix. Likely output GenerateSampleByComponentMatrix(). min_sig Integer. Minimum number signatures consider. max_sig Integer. Maximum number signatures consider. iter Integer. number runs NMF perform rank random seed. cores Integer. (NMF param) number cores use running NMF.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"figure. figure plotting cophenetic distance, dispersion, sparseness silhouette score.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"NMF Package (Brunet algorithm specification) used deconvolute sample--component sum--posteriors matrix sample--signature matrix signature--component matrix. default search interval 3-12 used rank. compare/context input matrix also shuffled procedure performed. results co-plotted give baseline.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Chromosome Name — ChromosomeSplitPos","title":"Split Chromosome Name — ChromosomeSplitPos","text":"Function split compounded chromosome-position names separate columns. Distinct columns chromosome number, start, ending positions result.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Chromosome Name — ChromosomeSplitPos","text":"","code":"ChromosomeSplitPos(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Chromosome Name — ChromosomeSplitPos","text":"x dataframe containing copy number segments long format columns:  chr sample_id segVal","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Chromosome Name — ChromosomeSplitPos","text":"dataframe containing three separate columns chromosome number, sample_id segVal","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split Chromosome Name — ChromosomeSplitPos","text":"QDNAseq object generally contains chromosome position information :  chromosome:start-end. inconvenient plotting data wrangling.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CleanBamRatiosFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs some cleaning operations. — CleanBamRatiosFrame","title":"Performs some cleaning operations. — CleanBamRatiosFrame","text":"pre-processing steps : Replaces chromosome 'X' '23'. Removes segments chromosome 'Y'. Adds extra column End Position segment. Removes segments whose ratio ratio_median -1. Log2 transforms ratio ratio_median columns. Removes segments ratio_median = -Inf.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CleanBamRatiosFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs some cleaning operations. — CleanBamRatiosFrame","text":"","code":"CleanBamRatiosFrame(raw_bam_ratios, log_transform)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CleanBamRatiosFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs some cleaning operations. — CleanBamRatiosFrame","text":"raw_bam_ratios data frame: raw bam ratios file obtained bam_ratio.txt file. log_transform boolean: TRUE want log2 transform ratio_median column. FALSE otherwise. dealing Controlfreec data, log_transform TRUE. QDNAseq, log_transform FALSE.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapses down table to segmented copy numbers — CollapseTableToSegments","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"CollapseTableToSegments transforms relative copy-number calls segment tables.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"","code":"CollapseTableToSegments(df)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"df dataframe. dataframe copy number calls (columns 'chromosome', 'start', 'end', 'mean.cn')","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"dataframe. dataframe segment summaries various characteristics (derived copy-number calls)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse segments — CollapsedSegs","title":"Collapse segments — CollapsedSegs","text":"Collapsed segmented dataframe","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse segments — CollapsedSegs","text":"","code":"CollapsedSegs(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse segments — CollapsedSegs","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ComponentSignaturesHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Heatmap of Component loadings per Signature — ComponentSignaturesHeatmap","title":"Create Heatmap of Component loadings per Signature — ComponentSignaturesHeatmap","text":"Converts Components-per-signature data heatmap, returns ggplot object. Components Signatures sorted display according order provided. Heatmap plotted using viridis colour-schemes.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ComponentSignaturesHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Heatmap of Component loadings per Signature — ComponentSignaturesHeatmap","text":"","code":"ComponentSignaturesHeatmap(   signatures,   transpose = FALSE,   colour_scheme = \"C\",   colour_dir = 1,   cm_begin = 0 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ComponentSignaturesHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Heatmap of Component loadings per Signature — ComponentSignaturesHeatmap","text":"signatures Dataframe. Expects dataframe signature exposures (rows) samples (columns). transpose (optional) Logical. set TRUE function returns order samples plotted. colour_scheme (optional) Character. Value passed viridis::scale_fill_viridis option parameter. ex. '' 'B' colour_dir (optional) Either 1 -1. Value passed viridis::scale_fill_viridis direction parameter. cm_begin (optional) Float. Value within range 0,1. Value passed viridis::scale_fill_viridis direction parameter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ComponentSignaturesHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Heatmap of Component loadings per Signature — ComponentSignaturesHeatmap","text":"ggplot2 object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"CopyNumberSegments() transforms relative copy-number calls segment tables. Inverse SegmentsToCopyNumber function.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"","code":"CopyNumberSegments(copy_number)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"copy_number dataframe. dataframe copy number calls (columns 'sample_id', 'chromosome', 'start', 'end', 'segmented')","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"dataframe. dataframe summaries various characteristics (derived copy-number calls)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopySegFlat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","title":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","text":"Function create dataframe containing relative copy numbers segmented calls QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopySegFlat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","text":"","code":"CopySegFlat(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CorrectLeftovers.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds 'leftsovers' to the segment frame after re-inserting small segments. — CorrectLeftovers","title":"Adds 'leftsovers' to the segment frame after re-inserting small segments. — CorrectLeftovers","text":"Iterates segments frame space adjacent segments greater one, use GRanges obtain genomic data missing region data frame. update adjacent segment's start end positions depending segment closer missing segment. long adjacent segments chromosome arm.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CorrectLeftovers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds 'leftsovers' to the segment frame after re-inserting small segments. — CorrectLeftovers","text":"","code":"CorrectLeftovers(segments, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CorrectLeftovers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds 'leftsovers' to the segment frame after re-inserting small segments. — CorrectLeftovers","text":"segments data frame. Segments size >= 3Mb. granges_obj GRanges object: used reference check whenever empty space segments get ratio_median missing portion.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/DetermineNumberOfLGAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines if the given segments are LGAs of the given size — DetermineNumberOfLGAs","title":"Determines if the given segments are LGAs of the given size — DetermineNumberOfLGAs","text":"Iterates segments segments firstly checks segment meets definition LGA: Segment Previous chromosome arm. Size space Segment Previous less 3Mb. , check : Size Segment >= size_lga Size Previous >= size_lga Finally, check ratio_median difference Segment Previous > THR. , mark segment LGA (via 1's output frame).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/DetermineNumberOfLGAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines if the given segments are LGAs of the given size — DetermineNumberOfLGAs","text":"","code":"DetermineNumberOfLGAs(threshold, size_lga, segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/DetermineNumberOfLGAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines if the given segments are LGAs of the given size — DetermineNumberOfLGAs","text":"threshold float. Threshold ratio_median difference previously estimated. size_lga integer: size LGA look . segments data frame: segment data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/DlpToQDNAseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a QDNAseq object from the DLP output files — DlpToQDNAseq","title":"Build a QDNAseq object from the DLP output files — DlpToQDNAseq","text":"order 1--1 comparisons QDNAseq DLP outputs, useful outputs format. function creates QDNAseq object DLP output files returns .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/DlpToQDNAseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a QDNAseq object from the DLP output files — DlpToQDNAseq","text":"","code":"DlpToQDNAseq(   input_path,   bin_size = 5e+05,   genome = \"hg19\",   Xincluded = FALSE,   getfiltered = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/DlpToQDNAseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a QDNAseq object from the DLP output files — DlpToQDNAseq","text":"input_path (string) path output files generated DLP. directory. bin_size (integer) bin size used copy number calling base pairs. (default: 500000) Xincluded (logical) Whether X chromosome included analysis. (default: FALSE) genome_used (string) reference genome used alignment. (default: hg19) getfilter (logical) Grab filtered read/segment files DLP output directories.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/DlpToQDNAseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a QDNAseq object from the DLP output files — DlpToQDNAseq","text":"QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExcludeShortArms.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the short chromosome arms (21, 22, 24) & keeps segments with size >= 3Mb — ExcludeShortArms","title":"Removes the short chromosome arms (21, 22, 24) & keeps segments with size >= 3Mb — ExcludeShortArms","text":"Removes segments lie chromosome arm : greater 23.6 (.e chromosome arms 24 beyond) equal 21 (.e. first chromosome arm chromosome 21) equal 22 (.e. first chromosome arm chromosome 22) , updates sizes kept segments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExcludeShortArms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the short chromosome arms (21, 22, 24) & keeps segments with size >= 3Mb — ExcludeShortArms","text":"","code":"ExcludeShortArms(segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExcludeShortArms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes the short chromosome arms (21, 22, 24) & keeps segments with size >= 3Mb — ExcludeShortArms","text":"segments segments data frame, gathered ratio medians.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"Function export bins QDNAseq object wide dataframe. Can \"copynumber\", \"segments\", \"calls\" slots. Unlike similar function 'exportBins' QDNAseq package log-normalize.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"","code":"ExportBinsQDNAObj(   object,   type = c(\"copynumber\", \"segments\", \"calls\"),   filter = TRUE,   digits = 3,   chromosomeReplacements = c(`23` = \"X\", `24` = \"Y\", `25` = \"MT\"),   ... )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"object QDNAseq Object containing copy number segments long format columns:  chr sample_id segVal type character Type data export, options \"copynumber\" (corrected uncorrected read counts), \"segments\", \"calls\". filter logical @TRUE, bins filtered, otherwise . digits numeric number digits round . chromosomeReplacements named char vector named character vector chromosome name replacements done. used object class: cghRaw, cghSeg, cghCall, cghRegions,  since classes store chromosome names integers, whereas QDNAseq object types use character vectors. Defaults c(\"23\"=\"X\", \"24\"=\"Y\", \"25\"=\"MT\") human.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"wide dataframe containing column sample_id well 4 additional columns: feature, chromosome, start, end","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"Extract genome-wide copy-number features data either list dataframes QDNAseq S4 object 1 samples. function intended run absolute CN data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"","code":"ExtractCopyNumberFeatures(   CN_data,   genome,   cores = 1,   log_features = FALSE,   extra_features = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"CN_data List dataframes S4 QDNAseq object. Segmented copy-number data 1 samples. input list dataframes, columns : chromosome start end segVal genome Character string. reference genome used alignment.  Options: 'hg19', 'hg38' cores Integer. number cores use parallel processing. log_features FALSE char vector. vector feature names provided, take log1p extracted CN-features. extra_features Logical. TRUE, extracts CN-feature data two features: nc50, cdist.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"list. list element contains feature data single feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"extracted copy-number features : Breakpoint count per 10MB - bp10MB Copy-number value segment - copynumber Copy-number difference adjacent segments - changepoint Breakpoint count per chromosome arm - bpchrarm Lengths oscillating CN segment chains - osCN Size copy-number segments base-pairs - segsize Extra features:  7. Minimum number chromosomes (count) needed account 50% CN changes sample - nc50  8. Distance base pairs breakpoint centromere - cdist","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"Extract genome-wide copy-number features either list dataframes QDNAseq S4 object 1 samples. function intended run relative CN data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"","code":"ExtractRelativeCopyNumberFeatures(   CN_data,   genome,   cores = 1,   log_features = FALSE,   extra_features = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"CN_data List datafames S4 QDNAseq object. Segmented relative copy-number data 1 samples. input list dataframes, columns : chromosome start end segVal genome Character string. reference genome used alignment.  Options: 'hg19', 'hg38' cores Integer. number cores use parallel processing. log_features FALSE char vector. vector feature names provided, take log1p extracted CN-features. extra_features Logical. TRUE, extracts CN-feature data two features: nc50, cdist.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"list. list element contains feature data single feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"function identical absolute calling equivalent three features. osCN, changepoint, copynumber features require slightly different modelling relative scale. extracted copy-number features : Breakpoint count per 10MB - bp10MB Copy-number value segment - copynumber Copy-number difference adjacent segments - changepoint Breakpoint count per chromosome arm - bpchrarm Lengths oscillating CN segment chains - osCN Size copy-number segments base-pairs - segsize Extra features:  7. Minimum number chromosomes (count) needed account 50% CN changes sample - nc50  8. Distance base pairs breakpoint centromere - cdist","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"Remove set mask relative CN bins","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"","code":"FilterCNs(   cnobj,   filter_by = NULL,   genome = \"hg19\",   minimum_overlap = 5000,   removebins = FALSE,   maskgaps = FALSE,   maskcomCNVs = FALSE,   maskname = \"mask1\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"cnobj QDNASeq object containing relative copy number calls well segmented relative copy number calls filter_by Optional Dataframe containing genomic regions filter/mask. One region expected per row.  Expected columns:  chr start end etc. etc. genome character string reference genome used. ex \"hg38\" minimum_overlap integer designating number minimum number overlapping bases bin removed. removebins Logical. TRUE remove bins overlapping indicated regions. maskgaps Logical. TRUE remove bins overlapping centromeric telomeric regions. sure indicate correct reference genome. maskcomCNVs Logical. TRUE remove bins overlapping commonly copy-number variant regions organism. sure indicate correct reference genome. maskname character string name used case setting mask. Set field providing DF filter_by parameter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"QDNAseq object filtered masks set.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"Expects input QDNAseq object containing relative copy-number calls (QDNASeq WiseCondorX).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FinalizeSmallSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-inserts small segments in between the large ones. — FinalizeSmallSegments","title":"Re-inserts small segments in between the large ones. — FinalizeSmallSegments","text":"add small segments small_segments large_segments 6 cases, depending small segment fits large ones. merge segments ratio difference small large <= threshold. Otherwise, keep small segment segment large_segments. Visually, 6 cases: |–small-|    |—–large—-| |—– previous large —–|    |—-small—-| |———- large segment———-| |————- large —————| |—-small—-| |———large———-|        |————- next large——–| |——–small——–| |——-large——–|                    |————–next large————-| |—-small—-| chr N                                          |#| chr N+1 |——– large ——–|                         |#| |——– next_large ——–| |—— small ——|    |#|","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FinalizeSmallSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-inserts small segments in between the large ones. — FinalizeSmallSegments","text":"","code":"FinalizeSmallSegments(large_segments, small_segments, threshold, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/FinalizeSmallSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-inserts small segments in between the large ones. — FinalizeSmallSegments","text":"large_segments data frame. Segments size >= 3Mb. small_segments data frame. Segments 3Mb >= size >= 0.1Mb. threshold float: estimated threshold ratio_median difference via KDE. Used determine whether insert small segment . granges_obj GRanges object: used reference check whenever overlap segments get ratio_median overlap.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBestFitSolutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","title":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","text":"Find best fit solutions grid-based search given ranges ploidies cellularities. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBestFitSolutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","text":"","code":"FindBestFitSolutions(   relative_copy_numbers,   weights = NULL,   min_ploidy = 1.5,   max_ploidy = 5.5,   ploidy_step = 0.01,   min_cellularity = 0.2,   max_cellularity = 1,   cellularity_step = 0.01,   distance_function = c(\"MAD\", \"RMSD\"),   distance_filter_scale_factor = 1.25,   max_proportion_zero = 0.05,   min_proportion_close_to_whole_number = 0.5,   max_distance_from_whole_number = 0.15,   solution_proximity_threshold = 5,   keep_all = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBestFitSolutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","text":"relative_copy_numbers numeric vector containing relative copy numbers, .e. ratios copy numbers average copy number. weights numeric vector weights apply copy number value (length relative_copy_numbers) min_ploidy, max_ploidy range ploidies. ploidy_step stepwise increment ploidies along grid. min_cellularity, max_cellularity range cellularities. cellularity_step stepwise increment cellularities along grid. distance_function distance function use, either \"MAD\" mean absolute difference \"RMSD\" root mean square difference, differences fitted absolute copy number values nearest whole number. distance_filter_scale_factor distance threshold solutions discarded multiple solution smallest distance. max_proportion_zero maximum proportion fitted absolute copy number values zero copy number state. min_proportion_close_to_whole_number minimum proportion fitted absolute copy number values sufficiently close whole number. max_distance_from_whole_number maximum distance whole number fitted absolute copy number can considered sufficiently close. solution_proximity_threshold close two solutions can one filtered; reduces number best fit solutions many minima close proximity. keep_all set TRUE return solutions additional best_fit column indicate local minima acceptable solutions (may useful avoid computing distance grid twice)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBestFitSolutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","text":"distance fitted absolute copy numbers whole numbers.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBestFitSolutions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find best fit solutions for fitting copy numbers through grid-based search — FindBestFitSolutions","text":"","code":"data(copy_number) copy_number <- copy_number[copy_number$sample_id == \"X17222\", ]  segments <- CopyNumberSegments(copy_number)  solutions <- FindBestFitSolutions(   segments$copy_number, segments$weight,   min_ploidy = 1.5, max_ploidy = 5.5,   distance_function = \"MAD\")"},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBigSegmentsIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the indices of big segments that are close ratio_median-wise — FindBigSegmentsIndices","title":"Finds the indices of big segments that are close ratio_median-wise — FindBigSegmentsIndices","text":"Starting largest segment, find big segments ratio_median difference less given threshold. save indices.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBigSegmentsIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the indices of big segments that are close ratio_median-wise — FindBigSegmentsIndices","text":"","code":"FindBigSegmentsIndices(segments_copy, thr)"},{"path":"https://huntsmanlab.github.io/utanos/reference/FindBigSegmentsIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the indices of big segments that are close ratio_median-wise — FindBigSegmentsIndices","text":"segments_copy data frame containing segment data. first pass, segments size >= 3mb. thr float: threshold previously estimated via KDE. Used determine whether big segments merged.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindRascalSolutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find best fitting solutions for each sample — FindRascalSolutions","title":"Find best fitting solutions for each sample — FindRascalSolutions","text":"FindRascalSolutions() finds best ploidy cellularity pairs relative copy number profiles sample. Makes use find_best_fit_solutions() function rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindRascalSolutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find best fitting solutions for each sample — FindRascalSolutions","text":"","code":"FindRascalSolutions(   cnobj,   min_ploidy = 1.5,   max_ploidy = 5.5,   ploidy_step = 0.01,   min_cellularity = 0.2,   max_cellularity = 1,   cellularity_step = 0.01,   distance_function = c(\"MAD\", \"RMSD\"),   distance_filter_scale_factor = 1.25,   max_proportion_zero = 0.05,   min_proportion_close_to_whole_number = 0.5,   max_distance_from_whole_number = 0.15,   solution_proximity_threshold = 5,   keep_all = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FindRascalSolutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find best fitting solutions for each sample — FindRascalSolutions","text":"cnobj S4 object type QDNAseqCopyNumbers. min_ploidy, max_ploidy range ploidies. ploidy_step stepwise increment ploidies along grid. min_cellularity, max_cellularity range cellularities. cellularity_step stepwise increment cellularities along grid. distance_function distance function use, either \"MAD\" mean absolute difference \"RMSD\" root mean square difference, differences fitted absolute copy number values nearest whole number. distance_filter_scale_factor distance threshold solutions discarded multiple solution smallest distance. max_proportion_zero maximum proportion fitted absolute copy number values zero copy number state. min_proportion_close_to_whole_number minimum proportion fitted absolute copy number values sufficiently close whole number. max_distance_from_whole_number maximum distance whole number fitted absolute copy number can considered sufficiently close. solution_proximity_threshold close two solutions can one filtered; reduces number best fit solutions many minima close proximity. keep_all set TRUE return solutions additional best_fit column indicate local minima acceptable solutions (may useful avoid computing distance grid twice)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindRascalSolutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find best fitting solutions for each sample — FindRascalSolutions","text":"dataframe containing calculated solutions. solution includes: sample_id, ploidy, celluarity, distance.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines threshold for ratio_median difference via KDE. — FindThreshold","title":"Determines threshold for ratio_median difference via KDE. — FindThreshold","text":"procedure mostly similar rounds, except changes. Cleaning/transformation leading first round vastly different second round. second round pretty much just use data frame worked Graph 5, whereas first round take different steps. Estimating threshold goes like: Prep segment data, depending second_round. First round works large segments. Second round works (large + small) segments initially, large step 4. Get differences ratio_medians pairs segments. Run simulations: description found RunThresholdSimulations docs, essentially samples batch differences, finds local minima/maxima batch, via Kernel Density Estimation (KDE). Repeat num_simulations times, end get list bunch local minima. threshold average values. second_round == TRUE, extra steps (estimates threshold large segments). QC purposes, final threshold = min(max(0.025, thr), 0.045).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FindThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines threshold for ratio_median difference via KDE. — FindThreshold","text":"","code":"FindThreshold(   granges_obj,   segments,   num_simulations = 1e+05,   second_round,   seed )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FindThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines threshold for ratio_median difference via KDE. — FindThreshold","text":"granges_obj GRanges object: genomic data obtain reference. segments data frame: segment data. first round, segments gathered ratio_median. second round, segments already re-inserted small ones, LGAs already called. num_simulations integer: number simulations run estimate critical points. second_round boolean: route take algorithm. seed seed use random number generation. Ensures reproducibility runs.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Mixture Model for a provided CN-Feature — FitComponent","title":"Fit a Mixture Model for a provided CN-Feature — FitComponent","text":"Fit Mixture Model gaussians poissons provided CN-Feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Mixture Model for a provided CN-Feature — FitComponent","text":"","code":"FitComponent(   dat,   dist = \"norm\",   seed = 77777,   model_selection = \"BIC\",   min_prior = 0.001,   niter = 1000,   nrep = 1,   min_comp = 2,   max_comp = 10 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FitComponent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Mixture Model for a provided CN-Feature — FitComponent","text":"flexmix object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Mixture Models for each CN-Feature — FitMixtureModels","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"Perform mixture modelling CN-features using either mixture gaussians poissons.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"","code":"FitMixtureModels(   CN_features,   seed = 77777,   min_comp = 2,   max_comp = 10,   min_prior = 0.001,   model_selection = \"BIC\",   nrep = 1,   niter = 1000,   cores = 1,   featsToFit = seq(1, 6),   multi_seed = FALSE,   num_seed = 100 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"CN_features list. output either ExtractRelativeCopyNumberFeatures ExtractCopyNumberFeatures functions. seed Integer. (flexmix param) random seed use modelling. min_comp Integer. (flexmix param) minimum number components CN-feature consider. max_comp Integer. (flexmix param) maximum number components CN-feature consider. min_prior Numeric. (flexmix param) Minimum prior probability clusters, components falling threshold removed iteration. model_selection Integer character. (flexmix param) model get. Choose number name information criterion. nrep Integer. (flexmix param) number times flexmix run k (number components). niter Integer. (flexmix param) maximum number iterations EM-algorithm. cores Integer. number cores use parallel processing. featsToFit Integer vector. CN-features fit. multi_seed Logical. TRUE, function run multiple times different seeds find best mixtures. highly recommended use multiple cores. num_seed Integer. number seeds use multi_seed = TRUE.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"list containing flexmix objects CN-feature. multi_seed = TRUE, function return nested list two components: one containing flexmix objects containing BIC values CN-feature. BIC values organized rows represent different seeds columns represent number components. structure allows easy identification optimal seed component configuration.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"segment size, changepoint copy number, segment copy-number value CN-features modelled mixture Gaussians. breakpoint count per 10MB, length segments oscillating copy-number, breakpoint count per chromosome mixture Poissons used instead. Mixture modelling done using FlexMix package.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges segments by level. — GatherSegmentsByLevels","title":"Merges segments by level. — GatherSegmentsByLevels","text":"Iterates given segments merges level chromosome arm. words, keeping track whenever change chromosome arm level.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges segments by level. — GatherSegmentsByLevels","text":"","code":"GatherSegmentsByLevels(segments, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges segments by level. — GatherSegmentsByLevels","text":"segments data frame containing segment data. first pass, segments size >= 3mb. last column level, non-zero (.e. already determined) granges_obj GRanges object: used obtain genomic data regions merging.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges segments that are in the same chromosome arm AND have the same ratio_median. — GatherSegmentsByRatioMedian","title":"Merges segments that are in the same chromosome arm AND have the same ratio_median. — GatherSegmentsByRatioMedian","text":"work done GatherSegmentsByRatioMedianHelper. Essentially, iterate rows bam_ratios_frame, keep track adjacent rows ratio_median chromosome arm. Whenever 2 conditions false, merge segments point. information helper function. Finally, adds 'Size' column bam_ratios_frame.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges segments that are in the same chromosome arm AND have the same ratio_median. — GatherSegmentsByRatioMedian","text":"","code":"GatherSegmentsByRatioMedian(bam_ratios_frame)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges segments that are in the same chromosome arm AND have the same ratio_median. — GatherSegmentsByRatioMedian","text":"bam_ratios_frame data frame: cleaned version bam_ratios.txt file. pipeline, segment data already spurious regions removed, chromosome arm column added/determined.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedianHelper.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges segments that have the same ratio_median and are in the same chromosome arm. — GatherSegmentsByRatioMedianHelper","title":"Merges segments that have the same ratio_median and are in the same chromosome arm. — GatherSegmentsByRatioMedianHelper","text":"Takes segment data (df) gathers/merges segments according ratio_median chromosome arm.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedianHelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges segments that have the same ratio_median and are in the same chromosome arm. — GatherSegmentsByRatioMedianHelper","text":"","code":"GatherSegmentsByRatioMedianHelper(df)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GatherSegmentsByRatioMedianHelper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges segments that have the same ratio_median and are in the same chromosome arm. — GatherSegmentsByRatioMedianHelper","text":"df Data Frame segment data: first column chromosome number, second column chromosome arm, third column start position, fourth end position, fifth ratio_median.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Mixture of Gaussians — GaussiansMixturePlot","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"function plots mixture model component composed gaussians. mixture components plotted. Optionally, user can provide matrix components signatures indicate sig_of_interest. result lower-weight components (curves) indicated signature greyed .  threshold grey-shading functionality can changed using threshold parameter.  Additionally, inlay plot created 'important' components ... components 'squashed' . - .e. least 1 weight > 0.05","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"","code":"GaussiansMixturePlot(   components,   signatures = NULL,   sig_of_interest = 1,   log_flag = FALSE,   component = \"segsize\",   inlay_flag = TRUE,   threshold = 0.3 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"components list either matrices/dataframes containing distribution parameters (mean sd) S4 objects belonging class 'flexmix'.  providing dataframes, place parameters rows component along columns.  Mean row 1, sd row 2. signatures (optional) dataframe components rows signatures columns. sig_of_interest (optional) Integer. single integer corresponding column signatures input param. log_flag (optional) Logical. TRUE, draw log-transformed curves instead. component (optional) String. component draw gaussian curves . (options: segsize, changepoint, copynumber) inlay_flag (optional) Boolean flag turn /inlay plot. threshold (optional) Numeric. 'Important' component weights cut-.  signatures provided, cut-use grey-shading vs. colouring important components.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"ggplot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"function takes input QDNAseq CGHcall copy-number object gives back Cytoband .tsv tables absolute copy-number calls (human readable format).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"","code":"GenHumanReadableAcnProfile(object, save_path)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"object S4 copy-number object - QDNAseq CGHcall object save_path string. path (directory) segment tables saved. ex. '~/Documents/test_project'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"table. Collapsed Segment tables long format (sample id) ready written table file (ex. tsv, csv).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"function takes input QDNAseq CGHcall copy-number object gives back long-format table several useful columns. columns include; 'sample_id', 'chromosome', 'start', 'end', 'gain_probability', 'loss_probability', 'relative_copy_number', 'bin_count', 'sum_of_bin_lengths', 'cytobands', 'coordinates', 'size'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"","code":"GenHumanReadableRcnProfile(object, binsize, ref_genome, save_dir = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"object S4 copy-number object - QDNAseq CGHcall object binsize binsize used copy number object. ex. '30kb', '100kb' ref_genome One common reference genomes: ex. 'hg19', 'mm10', 'hg38' save_dir (optional) directory tables saved. ex. '~/Documents/test_project'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"Segment tables long format (sample id) ready written table file (ex. tsv, csv).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"Given set extracted copy-number features mixture models feature, generate sum--posteriors matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"","code":"GenerateSampleByComponentMatrix(   CN_features,   all_components = NULL,   cores = 1,   rowIter = 1000 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"CN_features list. output either ExtractRelativeCopyNumberFeatures() ExtractCopyNumberFeatures() functions. all_components list flexmix objects. One CN-feature. Likely output FitMixtureModels(). cores Integer. number cores use parallel processing. rowIter Integer. Number rows ingest per iteration using multiple cores. Otherwise ignored.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"sum--posteriors probability matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"copy-number event sample posterior probability belonging component computed. posterior event vectors summed resulting sum--posterior probabilities vector. sum--posterior vectors combined single patient--component sum--posterior probabilities matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CN-Signatures — GenerateSignatures","title":"Create CN-Signatures — GenerateSignatures","text":"Create copy-number signatures decomposing sample--component matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CN-Signatures — GenerateSignatures","text":"","code":"GenerateSignatures(   sample_by_component,   nsig,   seed = 77777,   nmfalg = \"brunet\",   nruns = 1000,   cores = 4 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CN-Signatures — GenerateSignatures","text":"sample_by_component Matrix. Expects sum--posteriors probability matrix. nsig Integer. number signatures. Likely decided examining plot ChooseNumberSignatures(). seed Integer. (flexmix param) random seed use modelling. nmfalg Character string. (NMF param) specification NMF algorithm. cores Integer. (NMF param) number cores use running NMF.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create CN-Signatures — GenerateSignatures","text":"NMFfit object. Contains two matrices post decomposition.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create CN-Signatures — GenerateSignatures","text":"Given sample--component sum--posteriors matrix matrix rank, decompose two distinct matrices. One matrix sample--signature matrix signature--component matrix. package, refer signature--component matrix set 'copy-number signatures'.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCNTally.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Copy Number Tally Matrix — GetCNTally","title":"Extract Copy Number Tally Matrix — GetCNTally","text":"Computes tally matrix based copy number (CN) data, either absolute relative terms. function supports inclusion additional CN features allows filtering specific feature subsets.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCNTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Copy Number Tally Matrix — GetCNTally","text":"","code":"GetCNTally(   CN_data,   genome = \"hg19\",   relative = FALSE,   extra_features = FALSE,   subset_features = NULL )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCNTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Copy Number Tally Matrix — GetCNTally","text":"CN_data list CN features. Typically, output functions like ExtractCopyNumberFeatures() ExtractRelativeCopyNumberFeatures(). genome character string specifying genome build (default: 'hg19'). parameter currently unused can included compatibility future updates. relative logical value. Set TRUE using relative copy number data (default: FALSE). TRUE, function use relative feature settings. extra_features logical value indicating whether include extra CN features tally (default: FALSE). set TRUE, additional feature settings applied. subset_features character vector specifying feature names include result. NULL, columns corresponding features returned.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCNTally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Copy Number Tally Matrix — GetCNTally","text":"matrix rows represent components (samples) columns represent CN features. subset_features provided, specified features included matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCriticalPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds critical points (minima or maxima) of the differences between segments ratios. — GetCriticalPoints","title":"Finds critical points (minima or maxima) of the differences between segments ratios. — GetCriticalPoints","text":"GetCriticalPoints takes estimated density values (via KDE) batch samples segment ratio differences (S_i - S_j), critical point (min/max), returns list densities critical point found. crit_point == 'max', densities > 0 crit_point == 'min', densities < 0","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCriticalPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds critical points (minima or maxima) of the differences between segments ratios. — GetCriticalPoints","text":"","code":"GetCriticalPoints(batch_ratio_differences, crit_point)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetCriticalPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds critical points (minima or maxima) of the differences between segments ratios. — GetCriticalPoints","text":"crit_point string. critical point look : either 'max' 'min'. ratio_differences Data Frame. estimated density values given sampled batch","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetGRangesObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a GRanges object used to obtain data from specified genomic regions. — GetGRangesObject","title":"Returns a GRanges object used to obtain data from specified genomic regions. — GetGRangesObject","text":". Usually used get data resulting merge, missing segments segments already data .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetGRangesObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a GRanges object used to obtain data from specified genomic regions. — GetGRangesObject","text":"","code":"GetGRangesObject(bam_ratios_frame)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetGRangesObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a GRanges object used to obtain data from specified genomic regions. — GetGRangesObject","text":"bam_ratios_frame data frame: cleaned-version raw bam ratios file.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetHRDStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the HRD status of a sample — GetHRDStatus","title":"Returns the HRD status of a sample — GetHRDStatus","text":"Using output CallLGA, determine HRD status sample based number LGAs >= 10 Mb size.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetHRDStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the HRD status of a sample — GetHRDStatus","text":"","code":"GetHRDStatus(lga_calls)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetHRDStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the HRD status of a sample — GetHRDStatus","text":"lga_calls table LGA counts size, returned CallLGA.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetHRDStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the HRD status of a sample — GetHRDStatus","text":"HRD status sample: TRUE number LGAs >= 10 Mb exceeds 20; FALSE otherwise.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetInfoSegm.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO: write docs — GetInfoSegm","title":"TODO: write docs — GetInfoSegm","text":"TODO: write docs","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetInfoSegm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO: write docs — GetInfoSegm","text":"","code":"GetInfoSegm(infoString)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLGAOfSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the segments that are LGAs of the given size — GetLGAOfSize","title":"Returns the segments that are LGAs of the given size — GetLGAOfSize","text":"help DetermineNumberOfLGAs, keeps segment data LGA size size_lga","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLGAOfSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the segments that are LGAs of the given size — GetLGAOfSize","text":"","code":"GetLGAOfSize(threshold, size_lga, segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLGAOfSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the segments that are LGAs of the given size — GetLGAOfSize","text":"threshold float. Threshold ratio_median difference previously estimated. size_lga integer: size LGA look . segments data frame: segment data","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLargeSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns segments with a size >= 3Mb. — GetLargeSegments","title":"Returns segments with a size >= 3Mb. — GetLargeSegments","text":"Returns data frame segments whose size larger 3 mega bases.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLargeSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns segments with a size >= 3Mb. — GetLargeSegments","text":"","code":"GetLargeSegments(segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetLargeSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns segments with a size >= 3Mb. — GetLargeSegments","text":"segments","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"Function classify quality relative copy number profile calls QDNAseq WiseCondorX.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"","code":"GetSampleQualityDecision(x, metric = \"quantile\", cutoff = 0.95)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"x QDNASeq object containing relative copy number calls well segmented relative copy number calls. metric metric use determining quality. Either 'quantile' 'DecisionTree'. cutoff cutoff use quantile-based quality filtering. applicable metric 'DecisionTree'.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"dataframe sample quality decisions (\"Low\" \"High\" quality sample)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"Expects input QDNAseq object containing relative copy-number calls (QDNASeq WiseCondorX).  Classifies relative copy number profiles \"High\" \"Low\" quality.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate segment sizes — GetSegCounts","title":"Calculate segment sizes — GetSegCounts","text":"Calculate segment sizes","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate segment sizes — GetSegCounts","text":"","code":"GetSegCounts(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate segment sizes — GetSegCounts","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number new_segment (indicator variable segment copy_number call belongs )","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentID.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-assigns level column values for all segments. — GetSegmentID","title":"Re-assigns level column values for all segments. — GetSegmentID","text":"Resets level 0 segments, except first segment assigned 1. , iterates rest: segment '', chromosome arm previous segment '-1' ratio median difference threshold, segment '' gets '-1”s level. Otherwise, '-1”s level + 1.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-assigns level column values for all segments. — GetSegmentID","text":"","code":"GetSegmentID(threshold, segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-assigns level column values for all segments. — GetSegmentID","text":"threshold float: threshold ratio_median difference previously estimated. segments data frame: segment data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentationBeforeLGACall.html","id":null,"dir":"Reference","previous_headings":"","what":"Final segmentation before LGA call — GetSegmentationBeforeLGACall","title":"Final segmentation before LGA call — GetSegmentationBeforeLGACall","text":"Merges initial bam_ratios_frame segments chromosome, assigns start/end pos segments segments, whenever change Chr_N latter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentationBeforeLGACall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final segmentation before LGA call — GetSegmentationBeforeLGACall","text":"","code":"GetSegmentationBeforeLGACall(   segments,   bam_ratios_frame,   granges_obj,   second_round )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegmentationBeforeLGACall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final segmentation before LGA call — GetSegmentationBeforeLGACall","text":"segments data frame segments size > 3Mb. Ideally frame already gone merging, small segments reinsertion, etc. bam_ratios_frame data frame. first pass: cleaned-version initial ratio file tsv. second pass: clean-segments merged ratio_median. granges_obj GRanges object: used obtain genomic data regions merging. second_round boolean: FALSE first pass, TRUE second pass.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSmallSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the segments with 3Mb >= size >= 0.1Mb — GetSmallSegments","title":"Returns the segments with 3Mb >= size >= 0.1Mb — GetSmallSegments","text":"Filters segments returns small ones","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSmallSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the segments with 3Mb >= size >= 0.1Mb — GetSmallSegments","text":"","code":"GetSmallSegments(segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSmallSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the segments with 3Mb >= size >= 0.1Mb — GetSmallSegments","text":"segments data frame containing segment data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/InitalizeSmallSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Initializes the process of re-inserting the small segments in between the large ones. — InitalizeSmallSegments","title":"Initializes the process of re-inserting the small segments in between the large ones. — InitalizeSmallSegments","text":"Essentially deals FIRST large segment. add small segments small_segments segments large_segments : End first large segment Overlap first large segment stop process whenever changed chromosome arms small segment large segment","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/InitalizeSmallSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initializes the process of re-inserting the small segments in between the large ones. — InitalizeSmallSegments","text":"","code":"InitalizeSmallSegments(large_segments, small_segments, threshold, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/InitalizeSmallSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initializes the process of re-inserting the small segments in between the large ones. — InitalizeSmallSegments","text":"large_segments data frame. Segments size >= Mb. small_segments data frame. Segments 3Mb >= size >= 0.1Mb. threshold float: estimated threshold ratio_median difference via KDE. Used determine whether insert small segment . granges_obj GRanges object: used genomic reference check whenever overlap segments get data (specifically ratio_median) overlap.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/InsertSmallSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds small segments in small_segments that meet certain criteria (position wise w.r.t large segments) into the large_segments data frame. Merges if necessary (i.e. if ratio_median difference < threshold). — InsertSmallSegments","title":"Adds small segments in small_segments that meet certain criteria (position wise w.r.t large segments) into the large_segments data frame. Merges if necessary (i.e. if ratio_median difference < threshold). — InsertSmallSegments","text":"lot things. InitializeSmallSegments, insert small segments come first large segment large_segments (hence initializing). FinalizeSmallSegments, insert remaining small segments, according 6 different cases, listed FinalizeSmallSegments documentation. end, returns updated large_segments small segments appropriately re-inserted.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/InsertSmallSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds small segments in small_segments that meet certain criteria (position wise w.r.t large segments) into the large_segments data frame. Merges if necessary (i.e. if ratio_median difference < threshold). — InsertSmallSegments","text":"","code":"InsertSmallSegments(large_segments, small_segments, threshold, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/InsertSmallSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds small segments in small_segments that meet certain criteria (position wise w.r.t large segments) into the large_segments data frame. Merges if necessary (i.e. if ratio_median difference < threshold). — InsertSmallSegments","text":"large_segments data frame. Segments size >= 3Mb. small_segments data frame. Segments 3Mb > size >= 0.1Mb. threshold float: estimated threshold ratio_median difference via KDE. granges_obj GRanges object: used reference check whenever overlap segments get ratio_median overlap.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/IsAcceptablePloidyAndCellularity.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a given ploidy and cellularity for fitting copy numbers is acceptable — IsAcceptablePloidyAndCellularity","title":"Determine if a given ploidy and cellularity for fitting copy numbers is acceptable — IsAcceptablePloidyAndCellularity","text":"Determines given ploidy cellularity compatible provided relative copy numbers based proportion copy number values correspond zero copy number state proportion sufficiently close whole number copy number state. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/IsAcceptablePloidyAndCellularity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a given ploidy and cellularity for fitting copy numbers is acceptable — IsAcceptablePloidyAndCellularity","text":"","code":"IsAcceptablePloidyAndCellularity(   ploidy,   cellularity,   relative_copy_numbers,   weights = NULL,   max_proportion_zero = 0.05,   min_proportion_close_to_whole_number = 0.5,   max_distance_from_whole_number = 0.15 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/IsAcceptablePloidyAndCellularity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a given ploidy and cellularity for fitting copy numbers is acceptable — IsAcceptablePloidyAndCellularity","text":"ploidy tumour ploidy. cellularity cellularity, .e. fraction cells tumour. relative_copy_numbers numeric vector containing relative copy numbers, .e. ratios copy numbers average copy number. weights numeric vector weights apply copy number value (length relative_copy_numbers) max_proportion_zero maximum proportion fitted absolute copy number values zero copy number state. min_proportion_close_to_whole_number minimum proportion fitted absolute copy number values sufficiently close whole number. max_distance_from_whole_number maximum distance whole number fitted absolute copy number can considered sufficiently close.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/IsAcceptablePloidyAndCellularity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a given ploidy and cellularity for fitting copy numbers is acceptable — IsAcceptablePloidyAndCellularity","text":"","code":"data(copy_number) copy_number <- copy_number[copy_number$sample_id == \"X17222\", ] IsAcceptablePloidyAndCellularity(3, 0.67, copy_number$segmented) #> [1] TRUE"},{"path":"https://huntsmanlab.github.io/utanos/reference/LargeMissingChrArms.html","id":null,"dir":"Reference","previous_headings":"","what":"Deals with missing chromosome arm values in the given data frame of large segments. — LargeMissingChrArms","title":"Deals with missing chromosome arm values in the given data frame of large segments. — LargeMissingChrArms","text":"Finds missing chromosome arms reinserts large_segments. Specifically, arms large_segments , small_segments . missing values, iterate large segments, re-insert small segments wherever appropriate. example (first case loop), missing_chr_arm value greater largest chr_arm arm column (.e., max(large_segments,3)), bind small segments right large segments frame, since segments largest chr_arm. Note bind small segments within missing_chr_arm. Otherwise, missing_chr_arm <= largest chr_arm. case care large segment looping (value ). = 1, .e. first segment, bind small segments left large segments: trivial. Otherwise, fit small segments -1 .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/LargeMissingChrArms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deals with missing chromosome arm values in the given data frame of large segments. — LargeMissingChrArms","text":"","code":"LargeMissingChrArms(large_segments, small_segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/LargeMissingChrArms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deals with missing chromosome arm values in the given data frame of large segments. — LargeMissingChrArms","text":"large_segments data frame. Segments size >= Mb. small_segments data frame. Segments 3Mb >= size >= 0.1Mb.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"MakeSummaryTable takes QDNAseq CN-object returns tables containing agglomerated RCN gain/loss information across provided samples.  Prior summarizing gains/losses, function applies log2 transformation center data 0.  Optionally also writes TSV table containing summary.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"","code":"MakeSummaryTable(   CNobj,   lowT,   highT,   pL = 0.1,   pG = 0.1,   prop = 0.5,   find_peaks = FALSE,   snames = FALSE,   ref_genome = \"hg19\",   save_path = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"CNobj S4 object type QDNAseqCopyNumbers. object must contain slots :  copynumber, segmented (standard CN slots)  probgain, probdloss, probamp, probnorm, calls, probloss (running CGHcall) lowT Numeric (negative). Ignore gains/losses value 0. ex. -0.1  parameter helps filter noise. highT Numeric (positive). Ignore gains/losses value 0. ex. 0.1  parameter helps filter noise. pL (optional) Numeric. probability threshold (0 1). Mask loss events probability rise threshold. pG (optional) Numeric. probability threshold (0 1). Mask gain events probability rise threshold. prop (optional) Numeric. proportion threshold (0 1). Exclude gain/loss events occur less proportion samples. find_peaks (optional) Logical. TRUE, returns table peaks found summarized data. snames (optional) Character vector. vector sample IDs interest. ref_genome (optional) String. reference genome used alignment.  Options: 'hg19', 'hg38', 'mm10' save_path (optional) String. path (directory) segment tables saved. ex. '~/Documents/test_project'.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"list data frames. Always summary_table, optionally peaks data frame.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate median segment-level variance per sample — MedSegVar","title":"Calculate median segment-level variance per sample — MedSegVar","text":"Calculate median segment-level variances per sample (median absolute deviance)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate median segment-level variance per sample — MedSegVar","text":"","code":"MedSegVar(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate median segment-level variance per sample — MedSegVar","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number new_segment (indicator variable segment copy_number call belongs )","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveLargeSmall.html","id":null,"dir":"Reference","previous_headings":"","what":"Deals with merging large segment to small segment. — MergeSegmentsFiveLargeSmall","title":"Deals with merging large segment to small segment. — MergeSegmentsFiveLargeSmall","text":"Procedure overall similar previous cases. case five, two options merging: Merge large small Merge small next large helper deals first option. Note 'below_thr' parameter two helpers, since already know going merge called FinalizeSmallSegments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveLargeSmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deals with merging large segment to small segment. — MergeSegmentsFiveLargeSmall","text":"","code":"MergeSegmentsFiveLargeSmall(   granges_obj,   small_segment,   large_segments,   j,   end_of_file )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveLargeSmall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deals with merging large segment to small segment. — MergeSegmentsFiveLargeSmall","text":"granges_obj GRanges object: used reference obtain true genomic data specified regions. small_segment array: given small segment might merged large_segments frame. large_segments data frame: segment data. Initially contains segments size >= 3Mb, merge small segments , smaller segments progressively added. j integer/index: position large segment comparing small_segment, within large_segments. end_of_file boolean: whether large segments j.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveSmallNextLarge.html","id":null,"dir":"Reference","previous_headings":"","what":"Deals with merging small segment to next_large segment. — MergeSegmentsFiveSmallNextLarge","title":"Deals with merging small segment to next_large segment. — MergeSegmentsFiveSmallNextLarge","text":"Deals second option.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveSmallNextLarge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deals with merging small segment to next_large segment. — MergeSegmentsFiveSmallNextLarge","text":"","code":"MergeSegmentsFiveSmallNextLarge(   granges_obj,   small_segment,   large_segments,   j,   end_of_file )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFiveSmallNextLarge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deals with merging small segment to next_large segment. — MergeSegmentsFiveSmallNextLarge","text":"granges_obj GRanges object: used reference obtain true genomic data specified regions. small_segment array: given small segment might merged large_segments frame. large_segments data frame: segment data. Initially contains segments size >= 3Mb, merge small segments , smaller segments progressively added. j integer/index: position large segment comparing small_segment, within large_segments. end_of_file boolean: whether large segments j.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFour.html","id":null,"dir":"Reference","previous_headings":"","what":"Handles merging step for the fourth case of FinalizeSmallSegments. — MergeSegmentsFour","title":"Handles merging step for the fourth case of FinalizeSmallSegments. — MergeSegmentsFour","text":"Pretty much MergeSegmentsTwo. helpers difference genomic data search GRanges. well segment (large small) add large_segments frame. example, start position large segment? small segment?","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handles merging step for the fourth case of FinalizeSmallSegments. — MergeSegmentsFour","text":"","code":"MergeSegmentsFour(   granges_obj,   small_segment,   large_segments,   j,   below_thr,   end_of_file )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsFour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handles merging step for the fourth case of FinalizeSmallSegments. — MergeSegmentsFour","text":"granges_obj GRanges object: used reference obtain true genomic data specified regions. small_segment array: given small segment might merged large_segments frame. large_segments data frame: segment data. Initially contains segments size >= 3Mb, merge small segments , smaller segments progressively added. j integer/index: position large segment comparing small_segment, within large_segments. below_thr boolean: whether large_segment small_segment ratio_median difference threshold end_of_file boolean: whether large segments j.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsTwo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for merging segments in the second case of FinalizeSmallSegments. Returns the updated large_segments data frame with segments appropriately merged (or not... depending on parameters). — MergeSegmentsTwo","title":"Helper for merging segments in the second case of FinalizeSmallSegments. Returns the updated large_segments data frame with segments appropriately merged (or not... depending on parameters). — MergeSegmentsTwo","text":"Given large_segments data, large_segment j, small_segment small_segment, merge large segment small_segment according various criteria. First, ratio_median difference threshold, typically merge large small. , small segment separately added large_segments frame. Also, exactly large_segments frame add new data depends end_of_file. example, TRUE, large segments j, row-bind large_segments new data. FALSE, 'squeeze' new data j-1 j+1.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsTwo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for merging segments in the second case of FinalizeSmallSegments. Returns the updated large_segments data frame with segments appropriately merged (or not... depending on parameters). — MergeSegmentsTwo","text":"","code":"MergeSegmentsTwo(   granges_obj,   small_segment,   large_segments,   j,   below_thr,   end_of_file )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MergeSegmentsTwo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for merging segments in the second case of FinalizeSmallSegments. Returns the updated large_segments data frame with segments appropriately merged (or not... depending on parameters). — MergeSegmentsTwo","text":"granges_obj GRanges object: used reference obtain true genomic data specified regions. small_segment array: given small segment might merged large_segments frame. large_segments data frame: segment data. Initially contains segments size >= 3Mb, merge small segments , smaller segments progressively added. j integer/index: position large segment comparing small_segment, within large_segments. below_thr boolean: whether large_segment small_segment ratio_median difference threhsold. end_of_file boolean: whether large segments j.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Mixture Model Components by Signature — MixtureModelPlots","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"wrapper function (MixtureModelPlots), indicated CN-Signature (), returns list six ggplots. plot visualizes mixture model used feature. mixture components plotted.  Optionally, user can provide matrix components signatures indicate sig_of_interest. result lower-weight components (curves) indicated signature greyed .  threshold grey-shading functionality can changed using threshold parameter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"","code":"MixtureModelPlots(   components,   signatures = NULL,   sig_of_interest = 1,   threshold = 0.3 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"components list either matrices/dataframes containing relevant distribution parameters S4 objects belonging class 'flexmix'.  providing dataframes, place parameters rows component along columns.  gaussians, mean row 1, sd row 2. signatures (optional) dataframe components along x-axis signatures along y. sig_of_interest (optional) Integer. single integer corresponding column signatures input param. threshold (optional) Numeric. signatures provided, cut-use grey-shading vs. colouring important components.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"list ggplots.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/NullListOfThresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is ran in case that no possible thresholds were found. — NullListOfThresholds","title":"This function is ran in case that no possible thresholds were found. — NullListOfThresholds","text":"NullListOfThresholds returns threshold case list_of_possible_threshold null. finds first local minima, also finds inflection points density function, returns threshold min : min(local_minia, inflection_point)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/NullListOfThresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is ran in case that no possible thresholds were found. — NullListOfThresholds","text":"","code":"NullListOfThresholds(all_ratio_differences)"},{"path":"https://huntsmanlab.github.io/utanos/reference/NullListOfThresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is ran in case that no possible thresholds were found. — NullListOfThresholds","text":"all_ratio_differenves array: ratio differences pairs segments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotAnnotationBars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create annotation bars — PlotAnnotationBars","title":"Create annotation bars — PlotAnnotationBars","text":"Make list coloured annotation bars sample provided corresponding categories","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotAnnotationBars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create annotation bars — PlotAnnotationBars","text":"","code":"PlotAnnotationBars(ann_df, cols, colors = LETTERS[1:length(cols)], order)"},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotAnnotationBars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create annotation bars — PlotAnnotationBars","text":"ann_df dataframe. Must contain least sample_id columns cols cols Character vector. Names categorical columns include annotations, .e. one column = one annotation bar colors Character vector. Letters -H indicating viridis color option used column. Must length cols  Example cols lists two columns:  colors <- c('', 'B') order vector containing values sample_id desired order, controls order tiles.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotAnnotationBars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create annotation bars — PlotAnnotationBars","text":"list ggplot2 objects","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotCNTallySig.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Copy Number Tally Signature Contributions — PlotCNTallySig","title":"Plot Copy Number Tally Signature Contributions — PlotCNTallySig","text":"function visualizes copy number signature contributions across different components. generates bar plot x-axis represents component bins (e.g., copy number categories), y-axis shows normalized contributions signature components.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotCNTallySig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Copy Number Tally Signature Contributions — PlotCNTallySig","text":"","code":"PlotCNTallySig(signatures, extra_features = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotCNTallySig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Copy Number Tally Signature Contributions — PlotCNTallySig","text":"signatures NMF object containing copy number signature data, typically output non-negative matrix factorization (NMF) process. function extracts basis matrix NMF object. extra_features logical value indicating whether extra features included (default: FALSE).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotCNTallySig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Copy Number Tally Signature Contributions — PlotCNTallySig","text":"ggplot2 plot object visualizing contribution signature copy number components. plot consists faceted bar charts, facet represents signature x-axis corresponds component bins (e.g., specific copy number ranges).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotSegmentChanges.html","id":null,"dir":"Reference","previous_headings":"","what":"A plot illustrating the merging of segments by the SHRD algorithm. — PlotSegmentChanges","title":"A plot illustrating the merging of segments by the SHRD algorithm. — PlotSegmentChanges","text":"plot illustrating merging segments SHRD algorithm.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotSegmentChanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A plot illustrating the merging of segments by the SHRD algorithm. — PlotSegmentChanges","text":"","code":"PlotSegmentChanges(   segments_initial,   segments_pass_one,   segments_pass_two,   sample,   segment_line_size = 4 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotSegmentChanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A plot illustrating the merging of segments by the SHRD algorithm. — PlotSegmentChanges","text":"segments_initial data frame initial gathered segments. segments_pass_one data frame gathered segments, processing merging first pass. segments_pass_two data frame gathered segments, processing merging second pass. sample sample name. segment_line_size line width initial segments. Defaults 4; first-pass & second-pass segments 1/2 1/4 width, respectively.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PlotSegmentChanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A plot illustrating the merging of segments by the SHRD algorithm. — PlotSegmentChanges","text":"plot illustrating initial, first-pass, second-pass (final) segments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Mixture of Poissons — PoissonsMixturePlot","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"function plots mixture models component composed poisson distributions. mixture components plotted.  Optionally, user can provide matrix components signatures indicate sig_of_interest. result lower-weight components (curves) indicated signature greyed .  threshold grey-shading functionality can changed using threshold parameter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"","code":"PoissonsMixturePlot(   components,   signatures = NULL,   sig_of_interest = 1,   log_flag = FALSE,   component = \"bp10MB\",   threshold = 0.3 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"components list either matrices/dataframes containing distribution parameter (lambda) S4 objects belonging class 'flexmix'.  providing dataframes, place parameter row component along columns. signatures (optional) dataframe components rows signatures columns. sig_of_interest (optional) Integer. single integer corresponding column signatures input param. component (optional) String. component draw poisson 'curves' . (options: bp10MB, osCN, bpchrarm) threshold (optional) Numeric. signatures provided, cut-use grey-shading vs. colouring important components.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"ggplot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepFirstRound.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps the segment data frame for use in the first round of threshold estimation. — PrepFirstRound","title":"Preps the segment data frame for use in the first round of threshold estimation. — PrepFirstRound","text":"keeps segments whose size >= 3Mb. First iterates segments assigns genomic data GRanges segment (specifically ratio_median)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepFirstRound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps the segment data frame for use in the first round of threshold estimation. — PrepFirstRound","text":"","code":"PrepFirstRound(granges_obj, segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepFirstRound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps the segment data frame for use in the first round of threshold estimation. — PrepFirstRound","text":"granges_obj GRanges object: used fine genomic data specified regions. segmenta data frame: segment data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepForLevelsInitialization.html","id":null,"dir":"Reference","previous_headings":"","what":"Calls some helpers to do something to gathered by ratio medians.... gotta check this Also adds a Level and an Index column to the data frame — PrepForLevelsInitialization","title":"Calls some helpers to do something to gathered by ratio medians.... gotta check this Also adds a Level and an Index column to the data frame — PrepForLevelsInitialization","text":"Adds couple columns given segment dataframe + processing things","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepForLevelsInitialization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calls some helpers to do something to gathered by ratio medians.... gotta check this Also adds a Level and an Index column to the data frame — PrepForLevelsInitialization","text":"","code":"PrepForLevelsInitialization(segments, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepForLevelsInitialization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calls some helpers to do something to gathered by ratio medians.... gotta check this Also adds a Level and an Index column to the data frame — PrepForLevelsInitialization","text":"segments segments gathered_by_ratio_medians granges_obj granges object containing clean ratios file CleanBamRatios()","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepSecondRound.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps the segment data frame for use in the second round of threshold estimation. — PrepSecondRound","title":"Preps the segment data frame for use in the second round of threshold estimation. — PrepSecondRound","text":"Removes columns 1, 7, 8 segments, also readjusts segment sizes.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepSecondRound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps the segment data frame for use in the second round of threshold estimation. — PrepSecondRound","text":"","code":"PrepSecondRound(segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/PrepSecondRound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps the segment data frame for use in the second round of threshold estimation. — PrepSecondRound","text":"segments data frame: segment data","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample quality according to a specified metric. — QualityPlot","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"Plot sample quality according specified metric.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"","code":"QualityPlot(sample_quality_df, metric = \"quantile\")"},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"sample_quality_df sample quality data-frame returned GetSampleQualityDecision(). metric quality metric passed GetSampleQualityDecision(). One quanitle, DecisionTree.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"ggplot object quality plot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantify Signature Exposures — QuantifySignatures","title":"Quantify Signature Exposures — QuantifySignatures","text":"Given set signatures posteriors extracted CN-feature across samples set component models  calculates signature exposures. Said concretely, given sample--component matrix component--signature matrix, finds linear combination decomposition (LCD). See YAPSA::LCD function details.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantify Signature Exposures — QuantifySignatures","text":"","code":"QuantifySignatures(sample_by_component, component_by_signature = NULL)"},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantify Signature Exposures — QuantifySignatures","text":"sample_by_component Matrix. Provide matrix posteriors sample component model used. component_by_signature String object type NMFfitX1. string, function expects path CN-Signatures (NMFfitX1 object) stored rds.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantify Signature Exposures — QuantifySignatures","text":"matrix exposures sample signature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot relative CN diversity heatmap — RCNDiversityPlot","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Function plot copy number profile relative copy numbers","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"","code":"RCNDiversityPlot(   qdnaseq_obj,   order_by = NULL,   cluster = TRUE,   subset = NULL,   Xchr = FALSE,   rmblacklist = NULL,   limits = c(-1.5, 1.5),   breaks = c(2.5, 1, 0.5, 0, -0.5, -1, -2.5),   genome = \"hg19\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"order_by optional character vector containing order samples heatmap cluster optional logical row-wise sort heatmap (sort samples) subset optional character vector subset samples like plot. rmblacklist optional NULL character vector. Filter plot blacklist regions genome. ex. 'hg19' limits vector containing limits colour gradient. Passed scale_fill_gradientn breaks vector containing limits colour gradient. Passed scale_fill_gradientn genome reference genome build x dataframe containing copy number segments long format: columns start, sample id (named sample) segmented","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Heatmap relative copy number calls","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Visualizing relative copy number calls WiseCondorX QDNASeq heatmaps","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RatioDiffBelowThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines if absolute ratio_median difference is less than or equal to the given threshold. — RatioDiffBelowThreshold","title":"Determines if absolute ratio_median difference is less than or equal to the given threshold. — RatioDiffBelowThreshold","text":"Returns TRUE large_segment small_segment's ratio_median difference <= threshold. FALSE otherwise.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RatioDiffBelowThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines if absolute ratio_median difference is less than or equal to the given threshold. — RatioDiffBelowThreshold","text":"","code":"RatioDiffBelowThreshold(large_segment, small_segment, threshold)"},{"path":"https://huntsmanlab.github.io/utanos/reference/RatioDiffBelowThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines if absolute ratio_median difference is less than or equal to the given threshold. — RatioDiffBelowThreshold","text":"large_segment array: single segment, necessarily 'large' segment. name chosen times comparing large segment large_segments small segment small_segments small_segment . threshold float: threshold ratio_median difference previously estimated.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeToAbsoluteCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","title":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","text":"Convert relative copy numbers absolute copy numbers based given ploidy cellularity. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeToAbsoluteCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","text":"","code":"RelativeToAbsoluteCopyNumber(relative_copy_numbers, ploidy, cellularity)"},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeToAbsoluteCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","text":"relative_copy_numbers numeric vector containing relative copy numbers, .e. ratios copy numbers average copy number. ploidy tumour ploidy. cellularity cellularity, .e. fraction cells tumour.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeToAbsoluteCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","text":"numeric vector absolute copy numbers.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeToAbsoluteCopyNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert relative copy numbers to absolute copy numbers — RelativeToAbsoluteCopyNumber","text":"","code":"RelativeToAbsoluteCopyNumber(c(0.98, 1.6, 1.23), 4.01, 0.77) #> [1] 3.917852 6.774442 5.069703"},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveCentromereTelomeres.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes centromeres and telomeres from 22 chromosomes (23rd if specified) — RemoveCentromereTelomeres","title":"Removes centromeres and telomeres from 22 chromosomes (23rd if specified) — RemoveCentromereTelomeres","text":"Removes chromosome's centromere telomeres. positions centromeres/telomeres specified given arrays. , start positions 23 centromeres centromere_starts, end positions 23 centromeres centromere_ends, . 'telomere 2' mean second (bottom) telomere, telomere 1 woud first (top) one. Note parameters telomere 2 (telomere_2_starts telomere_2_ends), telomere 1. reason , algorithm, start position end position telomere 1 chromosomes (base 0 10000).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveCentromereTelomeres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes centromeres and telomeres from 22 chromosomes (23rd if specified) — RemoveCentromereTelomeres","text":"","code":"RemoveCentromereTelomeres(   df,   include_chr_X,   centromere_starts,   centromere_ends,   telomere_2_starts,   telomere_2_ends )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveCentromereTelomeres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes centromeres and telomeres from 22 chromosomes (23rd if specified) — RemoveCentromereTelomeres","text":"df Data Frame segment data. Requirements: Column 1 chromosome number Column 2 start position segment column 3 end position segment. include_chr_X boolean: True want spurious regions removed. False otherwise. centromere_starts array: contains start positions 23 chromosome's centromeres ORDER 1 23. centromere_ends array: contains end positions 23 chromosome's centromeres ORDER 1 23. telomere_2_starts array: contains start positions 23 chromosome's second telomere ORDER 1 23. telomere_2_ends array: contains end positions 23 chromosome's second telomere ORDER 1 23.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveSpuriousRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes specific genomic regions (centromeres and telomeres) of all chromosomes — RemoveSpuriousRegions","title":"Removes specific genomic regions (centromeres and telomeres) of all chromosomes — RemoveSpuriousRegions","text":"First, drops 'Feature' 'Ratio' columns. Spurious regions unstable regions difficult map, remove . hg19_segments.R file contains positions regions. find bam_ratios_frame , found, removed.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveSpuriousRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes specific genomic regions (centromeres and telomeres) of all chromosomes — RemoveSpuriousRegions","text":"","code":"RemoveSpuriousRegions(bam_ratios_frame, include_chr_X)"},{"path":"https://huntsmanlab.github.io/utanos/reference/RemoveSpuriousRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes specific genomic regions (centromeres and telomeres) of all chromosomes — RemoveSpuriousRegions","text":"bam_ratios_frame data frame: cleaned version original bam_ratios.txt file. include_chr_X boolean: whether search chromosome X .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ReplaceQDNAseqAssaySlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Replacethe QDNAseq Assay Slots — ReplaceQDNAseqAssaySlots","title":"Replacethe QDNAseq Assay Slots — ReplaceQDNAseqAssaySlots","text":"Replace copynumber /segment QDNAseq slots new matrices","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ReplaceQDNAseqAssaySlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replacethe QDNAseq Assay Slots — ReplaceQDNAseqAssaySlots","text":"","code":"ReplaceQDNAseqAssaySlots(cnobj, new_cns, new_segs)"},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRD.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shallowHRD on a dataframe or file containing segmented relative copy-number data. — RunShallowHRD","title":"Run shallowHRD on a dataframe or file containing segmented relative copy-number data. — RunShallowHRD","text":"Utanos' version shallowHRD algorithm detecting homologous recombination deficiency (HRD) tumor samples number large genomic alterations (LGAs). Original code found (https://github.com/aeeckhou/shallowHRD), original paper found (https://academic.oup.com/bioinformatics/article/36/12/3888/5823300). Essentially, algorithm can divided 5 sequential steps. perform steps two times (call 'passes'), first pass sort 'discovery' stage, still good estimates, second pass improves results first pass. overall idea complicated: raw segment data want find number LGAs size >= 10Mb. , 5 steps (excluding cleaning functions): Gather/merge segments ratio_median: segments ratio_median might well considered segment: imagine plotting segments –segment 1– –segment 2–, since ratio_median, 'level' y-axis, can also : —- single segment—-. merge segments ratio_median chromosome arm. GatherSegmentsByRatioMedian . functions section minor things: adding chromosome arm column, removing spurious/unstable regions chromosomes, cleaning stuff. description activities can found respective documentation. NOTE: CleanBamRatiosFrame option log-transform ratio_median's. ratio_medians file negative, produce NANs, case need log-transform. Finding threshold: use KDE find minima density ratio_median differences (pairs segments). idea finding local minima differences, finding 'tolerance' point determines whether merge two segments . example, imagine plot , two segments (different ratio_medians, level y-axis) : —- segment 1 —-   |                             diff <= threshold |                           ——————>          —- segment 1 + segment 2 —- |  —- segment 2 —- threshold indicates whether distance meaningful enough consider single segment. , ratio_median difference <= threshold, consider segment completely sure far apart enough. ratio_median difference > threshold, merge treat segment separate segments. illustrated . details procedure finding threshold find FindThreshold + helpers documentation. Levels: still entirely sure reasoning behind section, think section assigns segments sort 'confidence' merging. idea largest segment likely highest confidence ratio_median easier sequence. , use reference determine confident rest segments. use threshold see close segments largest segment, close (.e. ratio_median difference <= threshold), assign level largest segment. AssignLevels takes care . Finally, GatherSegmentsByLevels merges segments chromosome arm level. Small segments. previous section, working 'large' segments, meaning size >= 3Mb. Now figure small segments fit current segment data. InsertSmallSegments takes care , essentially iterates small segments large segments, checks encounter 6 cases looks . cases depend positioning small segment respect large segment, listed/visualized helper FinalizeSmallSegments documentation. Wherever appropriate, merge small large segments (.e. ratio_median diff <= threshold). end section, re-inserted small segments main segment data frame. LGAs: now re-inserted small segments, can finally determine number LGAs. CallLGA , basically iterating finalized segments (marked Graph 5) checking segments meet criteria LGA (requirements listed aforementioned function's documentation.) function returns number LGAs different LGA sizes, paper mostly cares LGAs size 10Mb, get results sizes 3 11. can also call GetLGAOfSize, returns segments marked LGA given LGA size, case want visualize . determine HRD, check number LGAs 10Mb, number LGAs >= 20, HRD detected. repeat procedure second step second pass. Note FindThreshold function receive bam_ratio segments time. Instead, pass finalized segments found first pass (Graph 5) - meant 'improving' results, going try find better threshold second round function calling. finalize, choices seem arbitrary (e.g. 3Mb 'large' segments, 5MB? >= 20 LGAs equal HRD?), perhaps following paper author can give intuition choices. Please refer https://pubmed.ncbi.nlm.nih.gov/22933060/. Calculates number large genomic alterations various sizes.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shallowHRD on a dataframe or file containing segmented relative copy-number data. — RunShallowHRD","text":"","code":"RunShallowHRD(   raw_ratios_file,   log_transform = TRUE,   include_chr_X = FALSE,   num_simulations = 1e+05,   shrd_save_path = FALSE,   sample = NULL,   seed = 1337,   plot = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRDFromQDNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ShallowHRD on a QDNAseq object. — RunShallowHRDFromQDNA","title":"Run ShallowHRD on a QDNAseq object. — RunShallowHRDFromQDNA","text":"function takes QDNAseqCopyNumbers object, extracts binned segmented copy-number data, runs ShallowHRD sample.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRDFromQDNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ShallowHRD on a QDNAseq object. — RunShallowHRDFromQDNA","text":"","code":"RunShallowHRDFromQDNA(   qdna_obj,   include_chr_X = FALSE,   num_simulations = 1e+05,   shrd_save_path = FALSE,   plot = FALSE,   seed = 1337,   cores = 1,   log_transform = TRUE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRDFromQDNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ShallowHRD on a QDNAseq object. — RunShallowHRDFromQDNA","text":"qdna_obj S4 object type QDNAseqCopyNumbers. object must contain copynumber slot segmented slot. include_chr_X Whether include X-chromosome running ShallowHRD. num_simulations number simulations use FindThreshold() step. shrd_save_path optional path save ShallowHRD results . plot Whether return plot showing segments merged algorithm runs. seed seed use PRNG-dependent functions. Ensures reproduciblity runs. cores number cores use running samples parallel. set 1, parallel processing used.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RunShallowHRDFromQDNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ShallowHRD on a QDNAseq object. — RunShallowHRDFromQDNA","text":"list ShallowHRD results, one entry per sample.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RunThresholdSimulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs simulations to obtain a list of possible thresholds from the segment ratio differences — RunThresholdSimulations","title":"Runs simulations to obtain a list of possible thresholds from the segment ratio differences — RunThresholdSimulations","text":"simulation: Takes random number samples all_ratio_differences (batch) Passes batch GetCriticalPoints estimate (via KDE) batch's density minima/maxima Adds minima possible threshold meets certain criteria. specifically, local minima batch considered valid possible threshold difference distance first maxima minima, second maxima minima, 'close' . first round, closeness < 0.10 distance-wise. second_round, closeness < 0.05 distance-wise. , second round, really care minima close two neighboring maxima. point tolerances get 'low' 'flat' local minima, meaning ratio_median difference common. affect rest algorithm many segments meet threshold. simulations done list possible thresholds, return threshold (mean list)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RunThresholdSimulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs simulations to obtain a list of possible thresholds from the segment ratio differences — RunThresholdSimulations","text":"","code":"RunThresholdSimulations(   num_simulations = 1e+05,   all_ratio_differences,   second_round = FALSE,   seed )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RunThresholdSimulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs simulations to obtain a list of possible thresholds from the segment ratio differences — RunThresholdSimulations","text":"num_simulations integer: number simulations run all_ratio_differences. Set 100,000 default all_ratio_differences array differences ratio medians segment-pairs data set second_round boolean. False first round simulation, True second round. set True simulations ran already possible THR want re-calibrate new differences ratio medians (.e. updated segments, post-merging). Set False default. seed seed use random number generation. Ensures reproducibility runs.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"SEAlluvialPlot builds ggplot using easyalluvial R package. two sets exposures set samples visualizes maximum exposure one set signatures related .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"","code":"SEAlluvialPlot(exposA, exposB, orderA = NULL, orderB = NULL)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"exposA matrix signature exposures. Signatures rows, samples columns. Likely output CallSignatureExposures(). exposB matrix signature exposures. Signatures rows, samples columns. orderA (Optional) character vector signature names enforce order.  Signature set assigned names S.A1 -> S.#, B S.B1 -> S.B#  ex. c('S.B2', 'S.B5', 'S.B3', 'S.B4', 'S.B1', 'S.B6') orderB (Optional) character vector signature names enforce order.  Signature set assigned names S.A1 -> S.#, B S.B1 -> S.B#  ex. c('S.B2', 'S.B5', 'S.B3', 'S.B4', 'S.B1', 'S.B6') Must set set samples provided exposA. Likely output CallSignatureExposures().","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"list. ggplot corresponding data matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"SegmentsToCopyNumber() transforms segment tables per-bin copy-number tables. expansion calls per-bin style, bin size user defined. inverse CopyNumberSegments function.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"","code":"SegmentsToCopyNumber(segs, bin_size, genome = \"hg19\", Xincluded = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"segs list dataframes, dataframe dataframe segmented copy-numbers. bin_size natural number. binsize used copy number object, ex. 30 -> 30kb, 100 -> 100kb. genome string. Refers reference genome, common reference genomes : 'hg19', 'mm10', 'hg38'. Xincluded boolean. Sex chromosomes Boolean (e.g. FALSE included).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"dataframe per-bin copy numbers (bounded sample).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ShrinkReprTMP.html","id":null,"dir":"Reference","previous_headings":"","what":"(Kind of) merges segments that lie on the same level. — ShrinkReprTMP","title":"(Kind of) merges segments that lie on the same level. — ShrinkReprTMP","text":"Iterates segments segments, two segments level, essentially merged help granges_obj. Actual procedure described -loop . Removes segments merged.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ShrinkReprTMP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Kind of) merges segments that lie on the same level. — ShrinkReprTMP","text":"","code":"ShrinkReprTMP(segments, granges_obj)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ShrinkReprTMP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Kind of) merges segments that lie on the same level. — ShrinkReprTMP","text":"segments data frame: segment data. granges_obj GRanges object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"Converts signature-per-sample data heatmap, optionally saves png, returns ggplot. Samples sorted display based maximum signature exposure. Heatmap plotted viridis colour-scheme.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"","code":"SignatureExposuresPlot(   signatures,   order = FALSE,   transpose = FALSE,   colour_scheme = \"D\",   colour_dir = 1,   cm_begin = 0,   addtitle = NULL,   obj_name = \"sig_exposures_obj\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"signatures Dataframe. Expects dataframe signature exposures (rows) samples (columns). order (optional) Character vector. Defines order samples plotted.  particularly useful plotting 1 heatmap next one another.  Allows samples line-horizontally.  Example: c(\"CC-CHM-1341\", \"CC-CHM-1347\", \"CC-CHM-1355\", CC-CHM-1361\", \"CC-HAM-0369\", \"CC-HAM-0374\", \"CC-HAM-0379\", \"CC-HAM-0383\", \"CC-HAM-0385\") transpose (optional) Logical. set TRUE function returns order samples plotted. colour_scheme (optional) Character. Value passed viridis::scale_fill_viridis option parameter. ex. '' 'B' colour_dir (optional) Either 1 -1. Value passed viridis::scale_fill_viridis direction parameter. cm_begin (optional) Float. Value within range 0,1. Value passed viridis::scale_fill_viridis direction parameter. obj_name (optional) String. Adds tag end filename saving image.  used save_path parameter also set. title (optional) String TRUE. Pass title plot set TRUE one generated.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"list ggplot2 object vector ordered sample names.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SmallMissingChrArms.html","id":null,"dir":"Reference","previous_headings":"","what":"Deals with missing chromosome arm values in the given data frame of small segments. — SmallMissingChrArms","title":"Deals with missing chromosome arm values in the given data frame of small segments. — SmallMissingChrArms","text":"Pretty much LargeMissingChrArms, except removes small segments missing_chr_arm.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SmallMissingChrArms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deals with missing chromosome arm values in the given data frame of small segments. — SmallMissingChrArms","text":"","code":"SmallMissingChrArms(large_segments, small_segments)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SmallMissingChrArms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deals with missing chromosome arm values in the given data frame of small segments. — SmallMissingChrArms","text":"large_segments data frame. Segments size >= Mb. small_segments data frame. Segments 3Mb >= size >= 0.1Mb.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/StackedExposuresPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Stacked Bar-plot of Signature Exposures — StackedExposuresPlot","title":"Create a Stacked Bar-plot of Signature Exposures — StackedExposuresPlot","text":"Converts signature-per-sample data ggplot2 stacked bar plot returns object. Samples sorted signature exposure (default first row). can changed different row, char vector sample names can supplied custom ordering. turbo viridis colour-scheme used.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/StackedExposuresPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Stacked Bar-plot of Signature Exposures — StackedExposuresPlot","text":"","code":"StackedExposuresPlot(   input_matrix,   user_colours = NULL,   orderbyrow = 1,   orderbyname = NULL,   do_transpose = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/StackedExposuresPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Stacked Bar-plot of Signature Exposures — StackedExposuresPlot","text":"input_matrix dataframe/matrix/datatable signatures rows samples columns.. user_colours (optional) vector colours signatures, one per signature. orderbyrow (optional) integer. Single integer corresponding row sort. orderbyname (optional) NULL character vector sample names. do_transpose (optional) Logical. TRUE flip bars horizontal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/StackedExposuresPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Stacked Bar-plot of Signature Exposures — StackedExposuresPlot","text":"ggplot2 object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"function copied modified another package (CGHbase). original code can found github: https://github.com/tgac-vumc/CGHbase bioconductor page: https://bioconductor.org/packages/release/bioc/html/CGHbase.html function creates summary plot copy-number changes samples provided QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"","code":"SummaryCNPlot(   x,   main = \"Relative Copy-Number Summary Plot\",   summarytype = \"probability\",   maskprob = 0.2,   maskaberr = 0.1,   gaincol = \"blue\",   losscol = \"red\",   misscol = NA,   build = \"GRCh37\",   plotXY = TRUE,   ... )"},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"x S4 object type QDNAseqCopyNumbers containing multiple samples. main (optional) String. Plot Title. summarytype (optional) String. One either 'probability' 'frequency'.  'probability' - vertical bars represent average probability positions along chromosome cover gained (blue bars) lost (red bars) across samples.  'frequency' - vertical bars represent frequency positions along chromosome cover gained (blue bars) lost (red bars) across samples. maskprob (optional) Numeric. Gain loss probabilities fall number masked. Used exclude noise. maskaberr (optional) Numeric. Copy-Number gains losses fall number masked. Used exclude noise.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TumourFraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","title":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","text":"Compute tumour DNA fraction given absolute copy number(s) tumour cellularity, .e. fraction cells tumour cells. Copied rascal.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TumourFraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","text":"","code":"TumourFraction(absolute_copy_number, cellularity)"},{"path":"https://huntsmanlab.github.io/utanos/reference/TumourFraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","text":"absolute_copy_number absolute copy number(s) (numeric value). cellularity cellularity, .e. fraction cells tumour.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TumourFraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","text":"fraction DNA originates tumour cells.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TumourFraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute tumour DNA fraction for the given absolute copy number and cellularity — TumourFraction","text":"","code":"TumourFraction(3, 0.82) #> [1] 0.8723404"},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"function calculates builds heatmap component-wise wasserstein distances two mixture models.  Also known calculating 'Earth Mover's Distance'. CN-feature indicated user using \"component\" parameter function. mixture models feature set component models pulled compared. short, component mixture model indicated, distance calculated.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"","code":"WassDistancePlot(cm_a, cm_b, component)"},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"cm_a list S4 objects class 'flexmix'. Likely output FitMixtureModels function. cm_b list S4 objects class 'flexmix'. Likely output FitMixtureModels function. component CN-feature models compare one another. (options: segsize, copynumber, bp10MB, osCN, bpchrarm)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"list. One ggplot corresponding matrix.","code":""}]
