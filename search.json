[{"path":"https://huntsmanlab.github.io/utanos/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 utanos authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/0_quickstart-vignette.html","id":"calculate-acns","dir":"Articles","previous_headings":"","what":"Calculate ACNs","title":"0. utanos quickstart guide","text":"CalculateACNs function extremely important, calculates absolute copy numbers (ACNs) relative copy number profiles one samples. order understand function , important begin clarifying inputs function expects. first argument expected CalculateACNs, relative_segs, tab-separated values (TSV) file containing relative segmented copy-numbers. table shows feature (following format, chromosome:start-end), chromosome, start end, followed individual sample relative segmented copy-numbers (wide format data). second argument, acnmethod, string represents method ACNs calculated. can one : - “maxvaf”, - character vector genes pull VAFs, genes assumed order decreasing precedence, ex. c(‘TP53’, ‘KRAS’, ‘PTEN’), - “mad” third argument, rascal_sols, CSV file calculated rascal solutions. table ploidy, cellularity distance columns. distance calculated using rascal helper function (based mean absolute difference (MAD) root mean square different (RMSD)). fourth argument CalculateACNs, variants, variants table, comma-separated values (CSV) file containing long-format data. data appear follows: variants table dataframe variants including variant allele frequencies per gene per sample. following requirements variants table using VAFs targeted panel sequencing technology: variants must must datatable/dataframe required columns follows: sample_id, chromosome, start, end, gene_name, ref, alt, vaf (exact names, order) row said table must correspond unique variant variant must associated variant allele frequency row must also associated specific sample Note example variants table variant information absolutely necessary input. fifth argument relative_cns; TSV relative copy-numbers. mandatory ‘addplots’ param (parameter allows plots returned alongisde ACNs) set true. table shows feature (following format, chromosome:start-end), chromosome, start end, followed individual sample relative copy-numbers (wide format data). Please note, first argument (relative_segs) fifth argument (relative_cns) seem similar terms tables look like, quite different; relative_segs TSV containing relative segmented copy-numbers, whereas relative_cns TSV containing relative copy-numbers. addition five parameters, three optional parameters; addplots, Logical. indicates whether plots returned alongside ACNs. acn_save_path, String. output path result saved. absolute path recommended , ex. ‘/Users/newuser/Documents/output.rds’ return_sols, Logical. Returns selected rascal solution. Lastly, output CalculateACNs appears ; CalculateACNs returns R Data Serialization (RDS) file. output file list named dataframes, dataframe corresponds different sample Absolute Copy Number profile successfully found. Optionally second list plot objects (ggplot); one sample profile found.","code":"solutions <- \"~/projects/vignettes/30kb_comCNVfilt_rascal_solutions.csv\"  solutions <- data.table::fread(file = solutions, sep = ',') head(solutions) variants_path <- \"~/projects/vignettes/p53abn_endometrial_variants_customoutput_20230413.csv\"  variants <- data.table::fread(file = variants_path, sep = ',')  #rename gene_symbol to gene_name in order to meet the input requirements variants <- variants %>% dplyr::rename(gene_name = gene_symbol) head(variants[, 1:10]) rel_cns <- \"~/projects/vignettes/30kb_rCN_cns_comCNVfilt.tsv\"  rel_cns <- data.table::fread(file = rel_cns, sep = '\\t') head(rel_cns[ ,1:8]) # Example of output file output <- readRDS(\"~/projects/vignettes/30kb_aCN_rascal_segments_comCNVfilt.rds\") head(output[[1]])"},{"path":"https://huntsmanlab.github.io/utanos/articles/0_quickstart-vignette.html","id":"what-features-is-this-workflow-missing","dir":"Articles","previous_headings":"","what":"What Features is this Workflow missing?","title":"0. utanos quickstart guide","text":"vignette contains initial workflow absolute copy number calling important part pipeline inferring copy number signatures. features missing workflow useful additions package following: Functions evaluate quality samples likely crucial part package stages copy number signature calling. particular includes: function output metrics evaluate quality QDNASeq relative copy numbers, well rascal absolute copy numbers. particularly important designated metric assigned evaluating rascal copy number calls multiple samples. rascal’s workflow includes mean absolute distance (MAD) root mean square deviation (RMSD) find optimal ploidy cellularity solutions, rascal authors recommend manually clicking segment copy number plots multiple samples evaluate quality th calls manually. tedious process automated better usability copy number calling pipeline. metrics additions think following: Metrics used compare QDNAseq WisecondorX. particular, observed median segment variance (MSVo) seems interesting statistics paper likely implemented package Lilliefors normality statistic. MVSo, sample-wise measure noise, defined median set variances, variance corresponds variance segment. metric inversely proportional read depth selected bin size, reflects noise sample-wide measure. Copy number profile abnormality score. CPA score designed distinguish abnormal healthy copy number profiles contains penalty term shorter segments, exclusively observed bad quality truly highly aberrant samples. ideas features implement following: Function output table statistics per sample. test statistics data looking well capture see manual evaluations samples, make vignette recommended workflow use maximum usability package. Plots capture distribution statistics entire sample set line plot histogram. interesting capture “outliers” relative samples (apples--apples comparison tumour samples others). Thus function automate output copy number profile plots just couple samples abberant copy number profiles useful.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/0_quickstart-vignette.html","id":"general-package-functionalities-to-work-on","dir":"Articles","previous_headings":"","what":"General Package Functionalities to work on","title":"0. utanos quickstart guide","text":"Re-factoring cleaning code Documentation Flexible QDNASeq S4 object Consistent input output formats Unit tests","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/0_quickstart-vignette.html","id":"what-comes-next-in-inferring-cn-signatures","dir":"Articles","previous_headings":"","what":"What comes next in inferring CN-signatures?","title":"0. utanos quickstart guide","text":"following downstream analyses follow absolute copy number calling step inferring copy number signatures. package currently contains functions need modified next: Inferring distributions absolute copy number feature distributions - breakpoint count per 10Mb, copy number segments, difference copy number adjacent segments, breakpoint count per chromosome arm, lengths oscillating copy number segment chains size segments. mixture model fit six distributions, directly corresponds figure (Macintyre et al., 2018).  Apply non-megative matrix factorization visualize tumor--signature matrix, signature--component matrix copy numbers copy number features important end-result package. Ideally, want add intelligent plotting function capable plotting visualizations side--side annotations metadata, etc.  ((Macintyre et al., 2018))","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/0_quickstart-vignette.html","id":"ideal-package-output","dir":"Articles","previous_headings":"What comes next in inferring CN-signatures?","what":"Ideal Package Output","title":"0. utanos quickstart guide","text":"Note: Sample quality evaluation stage key need package aims meet. Currently well established methods evaluate quality signature calls.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1. Sample Filtering and Quality Evaluation","text":"utanos package begins relative copy-number (rCN) call genomic data. expects rCN data output tools QDNASeq WiseCondorX. data consists calls (numeric value) ‘bin’ genome. bin artificially defined partitioning genome pieces sufficient size reasonably estimate relative copy-number. shallow sequencing needed sufficient depth present base-pair level resolution. Tabular long-format example: Relative CN-callers QDNAseq sometimes built-QC functionality filtering bins. commonly low-mappability blacklist regions (see paper descriptions). CN-callers also can whole-sample QC evaluation options though vast majority tend manual. require researcher examine every individual sample. vignette cover utanos can used filtering QC evaluation individual group level.","code":"chromosome   start     end sample    CN.call <chr>        <int>   <int> <chr>       <dbl> 1           900001  950000 VOA14948A    1.00 1           950001 1000000 VOA14948A    1.00 1          1000001 1050000 VOA14948A    1.00 1          1050001 1100000 VOA14948A    1.00 1          1100001 1150000 VOA14948A    0.96 1          1150001 1200000 VOA14948A    0.96"},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"i---filtration","dir":"Articles","previous_headings":"","what":"I - Filtration","title":"1. Sample Filtering and Quality Evaluation","text":"Often, order focus CN-aberrations interest, convenient filter just blacklist regions. centromeres? Telomeres? regions genome commonly copy-number aberrant background human population. Perhaps nice mask . Utanos clarifies filtration process. Note: Utanos comes 2 tables common variants (one hg19 hg38). can used filter dataset like . Database Genomic Variants (DGV)associated paper let’s break filtration step using real example dataset. accompanying data package utanos utanosmodellingdata found . Clone repo somewhere convenient common ‘repos’ folder machine read sample data. human endometrial carcinoma sWGS data aligned hg19. sample data relative copy-numbers called QDNAseq. ‘use’ column S4 object indicates bins QDNAseq determines useable. bins ‘FALSE’ . details QDNAseq methods see bioconductor vignette . FilterCNs utanos function adds another two columns featureData table maskgaps maskcomCNVs parameters set TRUE. use, centro.telo.mask, comCNV.mask columns refer ‘masks’, subset columns essentially mask downstream analysis. final note FilterCNs function: using filter_by parameter user can provide regions create mask filter QDNAseq copy-number object. Just pass dataframe locations, one location per row, filter_by parameter. Using maskname parameter user can set name mask. maskname parameter expects character string. Next, can visualize masks using CNSegmentsPlot function.  Clearly visible plot several regions commonly copy-number variant humans coincide copy-number/segmentation change. Depending user’s specific use case regions may may worth excluding. Note: dolog2 parameter set TRUE call see copy-number calls segments log2 transformed centered 0. See documentation function details.","code":"rcn.obj <- readRDS(\"~/Path_to_your_data/a_data_object_aligned_to_hg38.rds\") rcn.obj <- FilterCNs(cnobj = rcn.obj,                      genome = \"hg38\",                      minimum_overlap = 5000,                      removebins = FALSE,                      maskgaps = TRUE,                      maskcomCNVs = TRUE) > library(utanos) > library(magrittr) > rcn.obj <- readRDS(\"~/repos/utanosmodellingdata/sample_copynumber_data/sample_rcn_data.rds\") > rcn.obj <- FilterCNs(cnobj = rcn.obj,                        genome = \"hg19\",                        minimum_overlap = 5000,                        removebins = FALSE,                        maskgaps = TRUE,                        maskcomCNVs = TRUE) > featureData(rcn.obj)@data %>% head(5)                 chromosome  start    end     bases       gc mappability blacklist residual   use 1:1-30000                1      1  30000  66.66667 55.48500    12.39630  3.263333      NaN FALSE 1:30001-60000            1  30001  60000 100.00000 39.75667    28.22070  0.000000      NaN FALSE 1:60001-90000            1  60001  90000 100.00000 36.13000    27.47780  0.000000      NaN FALSE 1:90001-120000           1  90001 120000 100.00000 39.61667     9.05091  0.000000      NaN FALSE 1:120001-150000          1 120001 150000 100.00000 46.52333     7.33796  0.000000      NaN FALSE                 centro.telo.mask comCNV.mask 1:1-30000                  FALSE       FALSE 1:30001-60000               TRUE       FALSE 1:60001-90000               TRUE       FALSE 1:90001-120000              TRUE       FALSE 1:120001-150000             TRUE       FALSE > a <- CNSegmentsPlot(rcn.obj,                       sample = \"CC-CHM-1341\",                       highlight_masks = c('comCNV.mask'),                       point_size = 0.5,                       dolog2 = TRUE,                        def_point_colour = 'grey') > a"},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"ii---sample-quality-evaluation","dir":"Articles","previous_headings":"","what":"II - Sample Quality Evaluation","title":"1. Sample Filtering and Quality Evaluation","text":"Shallowly sequenced whole genome data involves copy-number calling two stages: relative copy-calling (via tools QDNASeq WiseCondorX) absolute copy number calling run relative calls (via tools like rascal). Naturally, accuracy inferences can made downstream analysis depend heavily accuracy copy number calls inferred. However, large projects intensive demand manually evaluate quality hundreds thousands samples. another niche Utanos fills. Use GetSampleQualityDecision function get quality calls sample dataset. QualityPlot function can used visualize samples fall outside thresholds.  default behaviour function make saemple-wise decision based thresholds median segment standard deviation total segment count.","code":"> qc_decisions <- GetSampleQualityDecision(rcn.obj) > qc_plot <- QualityPlot(qc_decisions) > qc_decisions %>% head(5)        sample seg_counts  median_sd decision seg_cut    med_cut 1 CC-CHM-1341        204 0.07696209     High   620.3 0.09096386 2 CC-CHM-1347        695 0.07137276      Low   620.3 0.09096386 3 CC-CHM-1353        235 0.06784682     High   620.3 0.09096386 4 CC-CHM-1355        240 0.07509611     High   620.3 0.09096386 5 CC-CHM-1361        529 0.07547814     High   620.3 0.09096386 > qc_plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"ii-1---about-the-metrics-median-segment-variance-and-segment-count","dir":"Articles","previous_headings":"II - Sample Quality Evaluation","what":"II.1 - About the metrics: Median segment variance and segment count","title":"1. Sample Filtering and Quality Evaluation","text":"segment variance calculated sample variance per segment, .e variance \\(log_2\\) ratios bin segment. observed median segment variance sample-wise measure noise, defined median set variances. segment count simply number distinct segments found sample. poor quality samples -segementation frequent indicator. strategy quality evaluation technique consider metrics tandem. work intuition, consider following two copy-number profiles:","code":""},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"sample-2-poorer-quality-copy-number-profile","dir":"Articles","previous_headings":"II - Sample Quality Evaluation > II.1 - About the metrics: Median segment variance and segment count","what":"Sample 2: Poorer quality copy number profile","title":"1. Sample Filtering and Quality Evaluation","text":"key aspects differ two profiles : number segments, length segments, variance within segment \\(log_2\\) ratios, .e see copy number ratios tightly clustered around orange line sample 1 compared sample 2.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/1_samplequality-vignette.html","id":"iii---possible-future-additions-and-ideas-the-copy-number-profile-abnormality-score-penalty","dir":"Articles","previous_headings":"","what":"III - Possible future additions and ideas: The copy-number profile abnormality score penalty","title":"1. Sample Filtering and Quality Evaluation","text":"metric distinguish abnormal healthy copy number profiles. score quantifies deviation segments normal diploid state sample-level. copy-number profile abnormality score can expressed follows: \\[CPA \\ = \\ \\frac{\\Sigma^{n}_{=1} (|Z_{segment_i}|* l_{segment_i})}{n}\\] , \\(Z_{segment_i}\\) represents \\(Z\\)-score segment \\(\\). \\(l_{segment}\\) represents length segment \\(n\\) represents number segments. average segment length can represented follows: \\[\\frac{\\Sigma^{n}_{=1}l_{segment_i}}{n}\\] term functions penalty term sample quality, short segments generally observed bad quality truly highly aberrant samples. Thus, calculating penalty addition metrics informative. important note alone metric problematic. Copy-number aberrant expected state biology sample truly chromosomal aberrations. metric tandem others seek find aberration none present. Thus, future workflow classifier (trained test set) features segment sizes, median segment variances, Lilliefor normality statistic, read length, coverage etc.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"i---introduction","dir":"Articles","previous_headings":"","what":"I - Introduction","title":"2. Investigating Copy-Number Diversity","text":"Broadly, vignette seeks demonstrate user answer following three questions using utanos: dataset, copy-number (CN) gains losses co-occur? extent aberrations co-occur across individual samples? can done relative-CN vs absolute-CN scales? Utanos provides two options find answers questions. 1 - using plots/diagrams visualize differences, 2 - manually examining informative, well-formatted tables. Exclusions: vignette cover data filtration setting masks QDNAseq object detail. vignette titled “Sample Filtering Quality Evaluation” covers filtration QC steps. example dataset use samples found utanosmodellingdata repository found . already done, clone repo somewhere convenient common ‘repos’ folder machine read example data. human endometrial carcinoma sWGS data aligned hg19. associated publication (Jamieson, 2024) published CCR can found .","code":"> library(utanos) > library(QDNAseq) > library(magrittr) > rcn.obj <- readRDS(\"~/repos/utanosmodellingdata/sample_copynumber_data/sample_rcn_data.rds\") > rcn.obj QDNAseqCopyNumbers (storageMode: lockedEnvironment) assayData: 103199 features, 10 samples    element names: copynumber, segmented  protocolData: none phenoData   sampleNames: CC-CHM-1341 CC-CHM-1347 ... CC-HAM-0385 (10 total)   varLabels: name total.reads ... loess.family (6 total)   varMetadata: labelDescription featureData   featureNames: 1:1-30000 1:30001-60000 ... Y:59370001-59373566 (103199 total)   fvarLabels: chromosome start ... comCNV.mask (11 total)   fvarMetadata: labelDescription experimentData: use 'experimentData(object)' Annotation:"},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"ii---call-gains-and-losses-on-relative-copy-number-data","dir":"Articles","previous_headings":"","what":"II - Call gains and losses on relative copy-number data","title":"2. Investigating Copy-Number Diversity","text":"callBins function QDNAseq package can run segmented copy number data determine chromosomal aberrations. function adds gain/loss probability slots input S4 object. hood makes use CGHcall R package. Please refer packages algorithmic details. example first filtering outlined previous vignette. Notes: Depending dataset size callBins() function can take ","code":"> rcn.obj <- FilterCNs(cnobj = rcn.obj, genome = \"hg19\",                         maskcomCNVs = TRUE, removebins = TRUE) > rcn.obj <- callBins(rcn.obj)"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"iii-1---cn-summary-plot","dir":"Articles","previous_headings":"III - Plotting","what":"III.1 - CN-Summary Plot","title":"2. Investigating Copy-Number Diversity","text":"CGHbase R-package provides excellent plot showing gain loss probability across multiple samples. Utanos contains modified version plotting function can generated like …  Notes: ‘maskaberr’ parameter - Default Value: 0.1. parameter filters gains losses across samples CN-change (aberration ) lies value zero. ‘maskprob’ parameter - Default Value: 0.2. parameter filters gain/loss probabilities value. callBins function assigns probability gain/loss bin sample. especially useful analyzing noisy samples. parameters quite similar available allows users mask low probability gain/loss regions without taking account large gain/loss .","code":"> SummaryCNPlot(rcn.obj, maskaberr = 0.1, maskprob = 0.2)"},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"iii-2---relative-cn-diversity-plot","dir":"Articles","previous_headings":"III - Plotting","what":"III.2 - Relative-CN Diversity Plot","title":"2. Investigating Copy-Number Diversity","text":"Alternatively, relative copy-number changes can visualized sample--sample heatmap red signifying relative gain blue loss. just samples, row-wise clustering doesn’t much effect plot, larger cohorts setting cluster parameter TRUE can really help highlight trends data. simple hierarchical clustering.","code":"> rcn.plot <- RCNDiversityPlot(rcn.obj, Xchr = TRUE, cluster = TRUE) > rcn.plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"iv---table-output","dir":"Articles","previous_headings":"","what":"IV - Table Output","title":"2. Investigating Copy-Number Diversity","text":"alternative way understand data displayed plot section III.1 tabular format. allows custom filtering, juxtaposing actual numbers, creating dataset-specific plots. MakeSummaryTable() function can used generate tables copy-number gains losses. desired, user can also generate second table containing just peaks setting find_peaks = TRUE. threshold parameters outlined code section apply generated summary CN aberrations table peaks table. Peaks CN probability data identified using gsignal::findpeaks function. Peaks simply defined local maxima. function port-namesake function Octave package ‘signal’. Alongside copy-number gains losses reported table column genes contained region. convenience checking whether gene--interest contained within copy-number aberration. Just human mouse reference genomes supported point (Ex. ‘mm10’). MakeSummaryTable() function returns list either 1 2 tables (type: tibble). tables can easily saved csvs, tsvs, favourite tabular format perusal different user-friendly application excel.","code":"> library(gsignal)  # Probability of gain or loss threshold - i.e. declare the minimum mean probability of loss or gain across samples # Expl. For region Chr1:2850001-2865000, and probabilities of loss for 10 samples of: # 0.814 0 0 0 0 0.125 0.975 0 0 0 # The mean probability of loss would be 0.1914 > prob_loss <- 0.2 > prob_gain <- 0.2  # Log space mean relative copy number thresholds # To keep things consistent with the plot from the last section, lets use 0.1 > low_threshold <- -0.1 > high_threshold <- 0.1  # Presence threshold - i.e. In what minimum proportion of samples does the gain or loss need to be present? > proportion_threshold <- 0.2  # Run command > output <- MakeSummaryTable(rcn.obj,                               low_threshold, high_threshold,                               prob_loss, prob_gain,                               proportion_threshold,                              find_peaks = TRUE) > output$summary_table %>% head(5) # A tibble: 5 × 16   chromosome    start      end mean_copy_number gain_probability loss_probability gain_count   <chr>         <int>    <int>            <dbl>            <dbl>            <dbl>      <dbl> 1 1           8910001  9060000            0.157            0.244           0.0049          5 2 1           9600001 10230000            0.139            0.252           0.0038          6 3 1          10620001 10740000            0.119            0.222           0.0062          5 4 1          15420001 15630000            0.148            0.292           0.106           3 5 1          15960001 16080000            0.155            0.302           0.106           3 # ℹ 9 more variables: loss_count <dbl>, gain_proportion <dbl>, loss_proportion <dbl>, #   gain_samples <chr>, loss_samples <chr>, bin_count <int>, sum_of_bin_lengths <dbl>, #   coordinates <chr>, features_in_region <chr>"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"v-1---performing-the-scaling","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space","what":"V.1 - Performing the scaling","title":"2. Investigating Copy-Number Diversity","text":"Relative CNs space can useful identifying trends relative gains losses across samples experiment. However, absolute copy-numbers (aCNs) can even useful indicate ploidy place real numbers genomic features high-amplification events. Utanos makes use rascal package scale relative absolute space. , briefly detail options workflow, thorough understanding recommend user read rascal vignette. three major options scaling depending data available: mad/rmsd: Without data/metadata, just copy-numbers, best option. Different ploidy/cellularity combinations assumed, relative CNs scaled absolute, difference value nearest whole-number calculated. difference quantified either mean absolute deviation (mad) root mean squared error (rmsq). Finally, grid search performed determine local minima reported solution(s). several ‘solutions’ nearly equivalent rascal returns several, otherwise single cellularity-ploidy-mad/rmsq distance combo returned. Many options tuning available package discussed . vafs: case variant allele frequencies (vafs) sample, can used identify nearest ploidy-cellularity combination (described 1). two options umbrella. One assume maximum discovered VAF sample appropriate representation tumour fraction. equation describing relationship used select optimal solution grid search. details see vignette rascal github repo. \\[tumour fraction_i \\ = \\ \\frac{a_i c}{a_i c + 2(1-c)}\\] \\[ c = cellularity \\text{, } a_i = \\text{copy-number locus }\\] use vafs certain genes user identifies. example user expects ‘PTEN’ vafs suggestive tumour fraction can choose scale using just vafs. Known ploidies: case knowing sample ploidies via method (ex. FISH), option simply scale relative copy-numbers sample absolute given ploidies. utanos function documentation contains specifics expected formatting options. Utanos splits aCN scaling two parts. First, likeliest solutions (ploidy/cellularity/distance) calculated using rascal, second values scaled new CN-object made.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"v-1-1---performing-the-scaling-part-1","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.1 - Performing the scaling","what":"V.1.1 - Performing the scaling (part 1)","title":"2. Investigating Copy-Number Diversity","text":"TODO: Outline function’s usage.","code":"> solutions <- A_FUNCTION_TO_BATCH_RUN_RASCAL()"},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"v-1-2---performing-the-scaling-part-2","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.1 - Performing the scaling","what":"V.1.2 - Performing the scaling (part 2)","title":"2. Investigating Copy-Number Diversity","text":"scale samples use CalculateACNs() function. first three arguments mandatory, rest optional depending context. first 4 arguments benefit elaboration, described, provide examples using function. Arguments: cnobj - relative copy-number object ’ve using throughout vignettes. “maxvaf”: Chooses solution aligns maximum detected VAF. assume suggestive cellularity according formula character vector genes pull VAFs, genes assumed order decreasing precedence, ex. c(‘TP53’, ‘KRAS’, ‘PTEN’), “mad”: Chooses solution lowest MAD RMSD score; case tie goes lower ploidy solution. dataframe known ploidies. Scales sample aCN space using plodies. Expects column sample_id - matching rcn.obj, ploidy - numeric value. rascal_sols - third argument expects TSV file data.frame calculated rascal solutions. See part 1 details creation. Example solutions table: variants must must datatable/dataframe required columns : sample_id, chromosome, start, end, gene_name, ref, alt, vaf (exact names, order) row said table must correspond unique variant variant must associated variant allele frequency row must also associated specific sample, sample_id must match Example variants data table: Note: example table information necessary. extraneous columns.  Examples: . Scaling using solution best (lowest) distance: B. Scaling using ‘maxvaf’ option providing variant allele frequencies C. Scaling prioritizing variants certain genes. Note: warning message C provides useful message users case ACN solution samples found rascal.","code":"> solutions <- \"~/some_path/rascal_solutions.csv\" > solutions <- data.table::fread(file = solutions, sep = ',') > head(solutions) ##      sample_id ploidy cellularity distance ## 1: CC-CHM-1341   3.34        0.85    0.166 ## 2: CC-CHM-1341   1.34        0.46    0.166 ## 3: CC-CHM-1341   3.33        0.90    0.166 ## 4: CC-CHM-1341   2.34        0.60    0.166 ## 5: CC-CHM-1341   2.35        0.52    0.174 ## 6: CC-CHM-1341   4.34        1.00    0.176 > variants_path <- \"~/some_path/variants.csv\" > variants <- data.table::fread(file = variants_path, sep = ',') > variants <- variants %>% dplyr::rename(gene_name = gene_symbol) > head(variants[, 1:10]) ##      sample_id chromosome     start       end ref alt gene_name ## 1: CC-CHM-1341          3  30691871  30691872  GA   G    TGFBR2 ## 2: CC-CHM-1341          3 142274739 142274740  AT   A       ATR ## 3: CC-CHM-1341          7 151945071 151945071   G  GT     KMT2C ## 4: CC-CHM-1341         10  90771767  90771767   G   A       FAS ## 5: CC-CHM-1341         16    343635    343635   C   T     AXIN1 ## 6: CC-CHM-1341         17   7577556   7577556   C   T      TP53 ##                       consequence estimated_impact  vafs ## 1:             frameshift_variant             HIGH 0.201 ## 2:             frameshift_variant             HIGH 0.196 ## 3: stop_gained,frameshift_variant             HIGH 0.212 ## 4:               missense_variant         MODERATE 0.301 ## 5:               missense_variant         MODERATE 0.226 ## 6:               missense_variant         MODERATE 0.720 > outputs <- CalculateACNs(rcn.obj,                             acn.method = 'mad',                             rascal_sols = solutions) > outputs <- CalculateACNs(rcn.obj,                             acn.method = 'maxvaf',                             rascal_sols = solutions,                             variants = variants,                             return_sols = TRUE,                             return_S4 = TRUE) Warning message: In ReplaceQDNAseqAssaySlots(cnobj, output[[\"acns\"]], output[[\"acns_segs\"]]) :   Not all samples had ACN solutions.     These samples are excluded from the returned acn object.     The probability of loss/gain values in the returned acn object were calculated using the relative CNs object. > names(outputs) [1] \"rascal_solutions\" \"acn.obj\" > outputs$rascal_solutions %>% head(5)     sample_id ploidy cellularity tumour_fraction   vaf 1 CC-CHM-1341   1.34        0.46           0.365  0.72 2 CC-CHM-1347   3.46        0.32           0.592 0.874 3 CC-CHM-1355      2        0.83           0.828 0.395 4 CC-CHM-1361      2        0.72           0.719 0.313 5 CC-HAM-0369   1.94           1               1 0.872 > outputs <- CalculateACNs(rcn.obj,                             acnmethod = c(\"TP53\", \"KRAS\", \"PTEN\"),                             rascal_sols = solutions,                             variants = variants,                             return_sols = TRUE,                             return_S4 = TRUE) Warning message: In ReplaceQDNAseqAssaySlots(cnobj, output[[\"acns\"]], output[[\"acns_segs\"]]) :   Not all samples had ACN solutions.     These samples are excluded from the returned acn object.     The probability of loss/gain values in the returned acn object were calculated using the relative CNs object."},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"v-2-1---copy-number-segment-plots","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.2 - Plotting","what":"V.2.1 - Copy-Number Segment Plots","title":"2. Investigating Copy-Number Diversity","text":"scaled copy-numbers, absolute copy-numbers (aCNs), can visualized using plotting function mentioned vignette 1. Let’s briefly compare aCNs generated using maxvaf solution compared ‘mad’ solution.   scaling using ‘mad’ set sample ploidy around 4 whereas ‘maxvaf’ option instead preferred ploidy 2.","code":"> maxvaf_outputs <- CalculateACNs(rcn.obj,                                    acn.method = 'maxvaf',                                    rascal_sols = solutions,                                    variants = variants,                                    return_S4 = TRUE) > mad_outputs <- CalculateACNs(rcn.obj,                                 acnmethod = 'mad',                                 rascal_sols = solutions,                                 return_S4 = TRUE) > CNSegmentsPlot(maxvaf_outputs$acn.obj,                   sample = \"CC-CHM-1341\",                   min_copy_number = 0,                   max_copy_number = 12.5,                   copy_number_breaks = c(1:12)) > CNSegmentsPlot(mad_outputs$acn.obj,                   sample = \"CC-CHM-1341\",                   min_copy_number = 0,                   max_copy_number = 12.5,                   copy_number_breaks = c(1:12))"},{"path":"https://huntsmanlab.github.io/utanos/articles/2_cndiversityandscaling-vignette.html","id":"v-2-2---copy-number-diversity-plots","dir":"Articles","previous_headings":"V - Scaling to the Absolute Copy-Number Space > V.2 - Plotting","what":"V.2.2 - Copy-Number Diversity Plots","title":"2. Investigating Copy-Number Diversity","text":"Finally, similarly section III.2, samples can visualized together heatmap. Using strategy, sample--sample similarities differences easily differentiable. datasets larger numbers samples, recommended order samples informative manner. done default ACNDiversityPlot function. ordering found performing hierarchical clustering passed copy-number segments. design, ACNDiversityPlot function expects data long-format. encourage users think bin-size like plot. example, plotting genome 3 billion base pairs long bins 30kb across barely visible eye. bin size 7-inch plot make roughly 7e-05 width. even one-bin amplification, visible heatmap. However, matter lot plotting software. Drawing rectangles many minuscule bins potentially across many samples take long time! TL;DR real point plotting tiny bins plot-type. Instead, re-shape data comfortable bin-size plotting improve speed. found 1e06 2e06 reasonably quick several hundred samples. user interested finding tiny amplification events, filtering examining tabular outputs much better option (ex. outputs$acn_segment_tables).","code":"> outputs <- CalculateACNs(rcn.obj,                             acnmethod = 'mad',                             rascal_sols = solutions) > long_segs <- SegmentsToCopyNumber(outputs$acn_segment_tables,                                      1000000,                                      genome = 'hg19',                                      Xincluded = TRUE) > colnames(long_segs) <- c(\"chromosome\", \"start\", \"end\", \"state\", \"sample_id\") > ACNDiversityPlot(long_segments = long_segs)"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"pre-amble","dir":"Articles","previous_headings":"","what":"Pre-amble","title":"3. Investigating and Creating Copy-Number Signatures","text":"vignette demonstrates use copy-number (CN) abnormalities data, represent imprints distinct mutational processes, either build new CN-Signatures determine existing signatures present dataset. workflow based one described methods section paper published 2018 (Macintyre et al. 2018). published literature thus far focused CN-Signatures absolute copy-number data. say data sample ploidy known. However, CN-Signatures can extracted relative absolute CN data, cases covered . First, vignette cover finding signature exposures new dataset using existing signatures (section III). Second, creation new signatures covered (section IV). either case, begin, set samples segmented copy-number profiles needed. profiles either formatted list named dataframes exist within QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"i---input-data","dir":"Articles","previous_headings":"","what":"I - Input data","title":"3. Investigating and Creating Copy-Number Signatures","text":"earlier vignettes sufficed use just samples demonstrate usage utanos functions. However, order generate new cn-signatures, considerably data needed. Therefore, demonstrate signature exposure calling creation new signatures, Britroc HGSOC (High-Grade Serous Ovarian Carcinoma) cohort used (Macintyre et al. 2018). segmented copy-number data can found paper’s bitbucket repository. step one, download said data/clone repo, read absolute copy-numbers: vignette use just higher-quality samples (2 3 star context paper). list available utanosmodellingdata.","code":"> library(utanos) > library(dplyr) > acn.obj <- readRDS(\"~/repos/cnsignatures/manuscript_Rmarkdown/data/britroc_absolute_copynumber.rds\") > acn.obj QDNAseqCopyNumbers (storageMode: lockedEnvironment) assayData: 103199 features, 280 samples    element names: copynumber, segmented  protocolData: none phenoData   sampleNames: IM_100 IM_101 ... JBLAB-4282 (280 total)   varLabels: name total.reads ... mapTP53cn (10 total)   varMetadata: labelDescription featureData   featureNames: 1:1-30000 1:30001-60000 ... Y:59370001-59373566 (103199 total)   fvarLabels: chromosome start ... use (9 total)   fvarMetadata: labelDescription experimentData: use 'experimentData(object)' Annotation: britroc_samples_subset <- data.table::fread(\"~/repos/utanosmodellingdata/sample_sets/brit117_samples.csv\") acn.obj <- acn.obj[,britroc_samples_subset$x]"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"ii---extract-cn-features","dir":"Articles","previous_headings":"","what":"II - Extract CN-features","title":"3. Investigating and Creating Copy-Number Signatures","text":"Step 2: extract copy number features using either ExtractCopyNumberFeatures() ExtractRelativeCopyNumberFeatures() function. model copy-number aberrations genome, find trends commonalities (call signatures henceforth), specific features within dataset pulled modeled separately. Standard features: Absolute copy-numbers genomic bin (copynumbers) magnitude copy number change (changepoints) genomic length (bp) segment (segsizes) number breakpoints per chromosome arm (brchrmarm) number breakpoints per 10 megabases (bp10MB) genomic length (bp) oscillating copy number regions (osCNs) Optional features: Minimum number chromosomes (count) needed account 50% CN changes sample (nc50) Distance base pairs breakpoint centromere (cdist) two CN-Signature sets included utanosmodellingdata (p53abn endometrial HGSOC) use standard features. hundred samples, function run within minutes.","code":"cn_features <- ExtractCopyNumberFeatures(acn.obj,                                           genome = \"hg19\",                                           extra_features = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"iii---determine-cn-signature-exposures","dir":"Articles","previous_headings":"","what":"III - Determine CN-signature exposures","title":"3. Investigating and Creating Copy-Number Signatures","text":"HGSOC CN-Signatures included utanosmodellingdata repository created using 91 samples (highest quality ones). find exposures remaining samples group, subset original object samples used signature creation, calculate exposures. CallSignatureExposures() function utanos runs several computational steps appropriate order convenience. user can run separately want. details see docs ExtractCopyNumberFeatures()/ExtractRelativeCopyNumberFeatures, GenerateSampleByComponentMatrix(), QuantifySignatures(). exposures can visualized SignatureExposuresPlot() function like :  Alongside plot, SignatureExposuresPlot() function returns sample ordering plot. Given signatures Macintyre et al. 2018 publication, let’s re-order match signature order paper easy comparison:  Interpreting plot, clear sample subset higher exposures signatures 1 4. signatures correspond poor overall survival + breakage-fusion bridge events whole-genome duplication + PI3K/AKT signalling inactivation respectively.","code":"hgsoc_sigs <- readRDS(file = \"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\") acn.obj.subset <- acn.obj[,!colnames(acn.obj) %in% colnames(hgsoc_sigs@consensus)] sigexposures <- CallSignatureExposures(copy_numbers_input = acn.obj.subset,                                         component_models = \"~/repos/utanosmodellingdata/component_models/30kb_ovarian/component_models_britroc_aCNs.rds\",                                         signatures = \"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\",                                        refgenome = \"hg19\",                                         relativeCN_data = FALSE) ggp1 <- SignatureExposuresPlot(sigexposures) ggp1$plot reord_britroc <- as.integer(c(2,6,5,4,7,3,1)) ggp1 <- SignatureExposuresPlot(sigexposures[reord_britroc,]) ggp1$plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"iv---create-new-cn-signatures","dir":"Articles","previous_headings":"","what":"IV - Create New CN-Signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"Creating copy-number signatures anew involves steps directly determining exposures existing signatures. process can also iterative given metrics, earlier steps re-run different parameters/inputs. vignette using Britroc cohort samples demonstrate signature creation seeking re-create signatures found 2018 paper exactly. exact replication, user need set parameters exactly seen paper repository run steps without utanos wrappers. reiterate, modelling signatures seen match (Macintyre et al. 2018). expected.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"iv-1---modelling","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.1 - Modelling","title":"3. Investigating and Creating Copy-Number Signatures","text":"First, CN features discussed section II modeled using mixtures gaussians poissons help flexmix R-package (Grün Leisch 2008). Utanos provides wrapper called FitMixtureModels(). , given mixture models CN feature, samples used modelling compared component model sum--posterior probabilities matrix calculated. GenerateSampleByComponentMatrix() utanos function calculates posteriors. detail: copy-number event feature sample, compute posterior probability belonging component said feature. sample, sum posterior event vectors sum--posterior probabilities vector. Combine sum--posterior vectors patient--component sum--posterior probabilities matrix. Finally, given patient--component sum--posterior probabilities matrix, matrix decomposition run many times decide optimal rank two output matrices (sample--signature matrix signature--component matrix). optimal rank optimal number signatures. NMF R-package leveraged matrix decomposition using ChooseNumberSignatures() function (Gaujoux Seoighe 2010). Succinctly, modelling stage involves… Fitting mixture components. Calculating patient--component sum--posterior probabilities matrix. Searching optimal number signatures (interval 3-12 used default), running NMF many times (ex. 1000x) different random seeds signature number. Note 2. returned sample_by_component matrix may components different order components component_models object. components increasing order component_models object. Note 3. Estimating optimal number signatures quite computationally heavy. function takes longest run utanos package. might make sense run function get snack!  dot line plot contains several metrics NMF runs possible ranks aid selection optimal number signatures. brief heuristics look values metric: cophenetic: higher => better; trend begins increasing (2) choose max value decreases . dispersion: higher => better, measures reproducibility silhouette: higher => better, measures consistency clusters sparseness: higher => better, try choose maximum sparsity can achieved without corresponding randomly permuted matrix exceeding detailed discussions metrics consult NMF package documentation sources online. utanos package defaults ChooseNumberSignatures() function include running NMF 100 times rank. keep default run-time manageable. Package users however encouraged experiment iterations run parameter values. (Macintyre et al. 2018) paper instance used 1000 iterations estimating rank (parameters reason plot differs one paper bitbucket repository).","code":"# Model using just the highest quality samples acn.obj.high <- acn.obj[,colnames(acn.obj) %in% colnames(hgsoc_sigs@consensus)] cnfeatures_high <- ExtractCopyNumberFeatures(acn.obj.high,                                               genome = \"hg19\",                                               extra_features = FALSE)  component_models <- FitMixtureModels(cnfeatures_high) sample_by_component <- GenerateSampleByComponentMatrix(CN_features, component_models)  # The next function contains a method that MUST have NMF loaded, this is a known issue with the NMF package library(NMF) rank_estimate_outputs <- ChooseNumberSignatures(sample_by_component) NMF::plot(rank_estimate_outputs$estrank, rank_estimate_outputs$randomized_estrank,           what = c(\"cophenetic\", \"dispersion\", \"sparseness\", \"silhouette\"),           xname = \"Observed\", yname = \"Randomised\", main = \"\")"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"iv-2---evaluation","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.2 - Evaluation","title":"3. Investigating and Creating Copy-Number Signatures","text":"point good idea stop examine modelling done thus far. points consider: metrics provided input matrices appear outperforming randomized matrices, may wish set restrictive demands samples can used input data. ability detect copy number signatures absolutely depends whether pattern sufficiently represented data, , signal can obfuscated lower quality samples introduce noise. Finding balance quantity vs. quality important. largest number high-quality samples possible used signature creation () ideal. default utanos suggests using 6 CN features modelling, however may desirable use /others. two can easily used setting extra_features parameter ExtractCopyNumberFeatures() TRUE. Examine sample--component matrix heatmap see major contributions many different samples component. sample--component matrix indicate higher values posteriors least several components per sample case modelling appropriately capturing heterogeneity data. Examine consensus matrices (average connectivity matrix across NMF runs) heatmap form alongside silhouette track (others) see samples cluster together. clear clusters emerging? Visualize sample--component matrix:   consensus matrices across 4 ranks (5,6,7, 8):  Note map corresponding ranks 6 7 look pretty good, samples tend cluster together across runs. Samples tend either dark red dark blue rather lighter shade somewhere . details connectivity/consensus matrices see docs NMF::connectivity(). content modelling clear factorization rank (number signatures) emerges, move next section create signature set.","code":"NMF::aheatmap(sample_by_component, fontsize = 7,                Rowv=FALSE, Colv=FALSE, cexRow = 0, legend = FALSE,               breaks=c(seq(0,199,2),500),                main=\"Component x Sample matrix\") NMF::consensusmap(rank_estimate$fit[c(3:6)], main='Consensus matrix - Cluster stability', treeheight = 0, labCol=NA, labRow=NA, tracks = c(\"silhouette:\"))"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"iv-3---create-cn-signatures","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"IV.3 - Create CN-Signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"GenerateSignatures() function running NMF many times (multiple ranks) therefore takes second-longest run function utanos package. might make sense start function go get snack! GenerateSignatures() function simple, wrapping just single NMF call. provides default parameter values (ex. sets seed = 77777, nmf algorithm used “brunet”) user test many different options use NMF::nmf() function directly.  final step creating new signatures, visualize using NMF package’s various heatmap options: signature--component matrix heatmap (call ‘signature set’ ‘signatures’) sample--sample consensus matrix heatmap (, just one rank) sample--signature matrix heatmap (contribution sample signature)","code":"signatures <- GenerateSignatures(sample_by_component, 7)  # Usually worth stopping and saving the objects just created since re-running can take a while.  # saveRDS(signatures, file = paste0(\"path_to_signatures/signatures_object.rds\")) # saveRDS(component_models, file = paste0(\"path_to_signatures/component_models_object.rds\")) basismap(signatures, Rowv = NA, main = \"Signature x Component matrix\") consensusmap(signatures, main='Consensus matrix - Cluster stability',               treeheight = 0, labRow = NA, labCol = NA) coefmap(signatures, Colv=\"consensus\", tracks=c(\"basis:\"),          main=\"Sample x Signature matrix\", treeheight = 0)"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"section-note","dir":"Articles","previous_headings":"IV - Create New CN-Signatures","what":"Section Note","title":"3. Investigating and Creating Copy-Number Signatures","text":"modelling section utanos provides number wrapping functions flexmix NMF convenience. However, ’s unrealistic user may want flexibility wrappers allow. case quite straightforward grab utanos source code github functions run step individually control.","code":""},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"v---compare-signature-sets","dir":"Articles","previous_headings":"","what":"V - Compare signature sets","title":"3. Investigating and Creating Copy-Number Signatures","text":"Utanos includes 3 methods compare different signature sets. Using wasserstein distance (heatmap) compare mixture components two CN-features. Compare mixture components two CN-features using shaded line plots Alluvial flow Sankey plots visulalize difference samples cluster given exposures two signature sets. default samples assigned signature maximum exposure. section, comparisons made signatures just created , signatures 2018 MacIntyre paper (HGSOC), 2024 Jamieson paper (p53abn EC). cm_ex = example component models made vignette sigs_ex = example signatures made vignette cm_hgsoc = Component models 2018 Macintyre paper sigs_hgsoc = Signatures 2018 Macintyre paper cm_p53ec = Components models created using samples 2024 Jamieson paper sigs_p53ec = Signatures 2024 Jamieson paper","code":"cm_ex <- component_models sigs_ex <- signatures cm_hgsoc <- readRDS(\"~/repos/utanosmodellingdata/component_models/30kb_ovarian/component_models_britroc_aCNs.rds\") sigs_hgsoc <- readRDS(\"~/repos/utanosmodellingdata/signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds\") cm_p53ec <- readRDS(\"~/repos/utanosmodellingdata/component_models/30kb_endometrial/component_models_vancouver_aCNs.rds\") sigs_p53ec <- readRDS(\"~/repos/utanosmodellingdata/signatures/30kb_endometrial/component_by_signature_britmodelsvansigs5_aCNs.rds\")"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"v-1---earth-movers-distance","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.1 - Earth-movers distance","title":"3. Investigating and Creating Copy-Number Signatures","text":"One--one sequential comparisons component composing two different signatures difficult. guarantee signature set run one set parameters one input dataset number components another another set parameters input dataset. Therefore, comparisons intrinsically many--many better option. Utanos provides function, WassDistancePlot(), calculates 2-D Wasserstein (earth-movers distance) transform component signature given feature component feature another signature set. higher distance means two components less similar lower distance means opposite. WassDistancePlot() function orders components increasing order colours high-similarity components lightly less similar components darker hue.  earth-movers distance heatmap shows two lowest components example signature’s oscillating CN-feature highly similar first component published signatures. CN-feature ‘copynumber’ heatmap shows typicaly trend lower components much similar one another distributions flatten extend rise value. Note components - c.6 B - c.8 less similar might expect. likely due just 6 components set (example set), value pulled .","code":"library(patchwork) # For easy plotting of multiple figures next to one another cm_ex <- component_models sigs_ex <- signatures ggp2 <- WassDistancePlot(cm_a = cm_ex,                           cm_b = cm_hgsoc,                           component = 'osCN') ggp3 <- WassDistancePlot(cm_a = cm_ex,                           cm_b = cm_hgsoc,                           component = 'copynumber')  ggp2$plot + ggp3$plot"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"v-2---shaded-line-plots-of-mixture-components","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.2 - Shaded line plots of mixture components","title":"3. Investigating and Creating Copy-Number Signatures","text":"Individual mixture components signature can visualized using shaded line plots. case “segment size” copy-number feature series Gaussians. MixtureModelPlots() function utanos can return plots components compose signature. Additionally, specific components prevalent signature indicated shaded. examples.  briefly mentioned section V.2, CN-feature ‘copynumber’ shows typical trend lower components much similar one another distributions flatten extend rise value reflecting increase variance. easy see shaded line plots.","code":"# Reorder the HGSOC signatures the same way as is done in the paper (keep things easy to compare) sigs_hgsoc_df <- basis(sigs_hgsoc) reord_britroc <- as.integer(c(2,6,5,4,7,3,1)) sigs_hgsoc_df <- sigs_hgsoc_df[,reord_britroc]  mixture_plots <- MixtureModelPlots(sigs_hgsoc_df,                                     cm_hgsoc,                                     sig_of_interest = 7) mixture_plots$copynumber"},{"path":"https://huntsmanlab.github.io/utanos/articles/3_cnsignatures-vignette.html","id":"v-3---alluvial-flow-plots-of-samples-across-signatures","dir":"Articles","previous_headings":"V - Compare signature sets","what":"V.3 - Alluvial flow plots of samples across signatures","title":"3. Investigating and Creating Copy-Number Signatures","text":"make Alluvial-flow/Sankey plot 2 comparisons needed. Signature exposures sample set signatures: Britroc HGSOC samples -> Britroc HGSOC Sigs Britroc HGSOC samples -> Vancouver p53abn Endometrial Sigs result two matrices signature exposures per sample. utanos function SEAlluvialPlot() takes two matrices signature exposures creates Alluvial plot using easyalluvial R-package. course, samples must matrices. already installed, install easyalluvial package.  Notably, alluvial plot highlights likely similarity signature 1 HGSOC set signature 2 p53abn EC set. Many samples maximum exposure one, also max. exposure . goes A4 B3. past three subsections combination tests significance can help user comparing contrasting copy-number signature sets.","code":"library(easyalluvial) # Pull exposures for the 91 highest quality samples out of the signatures object itself (the coefficients matrix) expo_mat_hq <- NMF::scoef(sigs_hgsoc) expo_mat_hq <- expo_mat_hq[reord_britroc,] expo_mat_hq <- NormaliseMatrix(expo_mat_hq) # Exposures were calculated for the 117-91 samples back in Section 3.  expo_mat_mq <- sigexposures[reord_britroc,] # Combine expo_hgsoc <- cbind(expo_mat_hq, expo_mat_mq)  # Find exposures of HGSOC samples to p53abn EC signatures expo_ec <- CallSignatureExposures(acn.obj,                                   component_models = cm_hgsoc,                                    signatures = sigs_p53ec,                                    refgenome = 'hg19')  # Pass both matrices of signature exposures to the SEAlluvialPlot utanos function alluvial_output <- SEAlluvialPlot(expo_hgsoc, expo_ec) alluvial_output$plot"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/articles/utanos.html","id":"sample-pre-processing","dir":"Articles","previous_headings":"","what":"Sample Pre-processing","title":"Introduction","text":"utanos R-package focuses downstream analysis, just later half analysis picture. serve first bit ’ve built Nextflow workflow serve pre-processing pipeline sWGS data can first step using utanos. Github Repository sWGS Nextflow Workflow decision use Nextflow + Singularity intentional - strategy improves inter-operability modularity. workflow can run cloud resources, local cluster-compute nodes, larger local machines built handle heavy processing. compute resources Singularity Nextflow installations can run pipeline. output Singularity pipeline can fed directly utanos multiple relative copy-number calling options available.","code":""},{"path":"https://huntsmanlab.github.io/utanos/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxwell Douglas. Author, maintainer. Branden Lynch. Author. Nirupama Tamvada. Author. Sameer Shankar. Author. Jacky Yiu. Author.","code":""},{"path":"https://huntsmanlab.github.io/utanos/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Douglas M, Lynch B, Tamvada N, Shankar S, Yiu J (2024). utanos: Utilities Analysis Shallow WGS R. R package version 0.0.0.9000, https://huntsmanlab.github.io/utanos/.","code":"@Manual{,   title = {utanos: Utilities for The Analysis of Shallow WGS in R},   author = {Maxwell Douglas and Branden Lynch and Nirupama Tamvada and Sameer Shankar and Jacky Yiu},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://huntsmanlab.github.io/utanos/}, }"},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"package-goal","dir":"","previous_headings":"","what":"Package Goal:","title":"Utilities for The Analysis of Shallow WGS in R","text":"swiss army knife analyzing shallow/low-pass WGS data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"package-descriptiondetails","dir":"","previous_headings":"","what":"Package Description/Details:","title":"Utilities for The Analysis of Shallow WGS in R","text":"Utilities ANalysis Shallow WGS R (UTANOS utanos). Includes functions plotting, quality evaluation, data re-structuring, copy-number aberration exploration, copy-number signature inference, HRD identification. Additionally, tools export analyses/datasets formats useful human examination. (.e. non-computational purposes).","code":""},{"path":"https://huntsmanlab.github.io/utanos/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Utilities for The Analysis of Shallow WGS in R","text":"Install R (version > 4.2)Cran place find right R Ensure following basic packages installed. Install bulk package’s dependencies making use librarian: Install annotables github: Finally, install utanos:","code":"install.packages(\"librarian\") BiocManager::install(\"Biobase\") librarian::shelf(caret, CGHcall, data.table, DBI, DescTools, devtools, doMC, dplyr, EnsDb.Hsapiens.v75, flexmix, GenomicRanges, ggalt, ggplot2, ggpubr, ggrepel, gridExtra, hrbrthemes, ks, magrittr, NMF, pheatmap, plyr, purrr, QDNAseq, readr, RMySQL, stringr, tidyr, viridis, YAPSA) devtools::install_github(\"stephenturner/annotables\") install_github(\"Huntsmanlab/utanos\")"},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"whole genome heatmap copy-number changes. expects absolute copy-numbers. Default behaviour perform hierarchical clustering samples plot heatmap order. Setting order parameter overrules behaviour.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"","code":"ACNDiversityPlot(   long_segments = data.frame(),   order = FALSE,   ret_order = FALSE,   save_path = FALSE,   obj_name = \"version1\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"long_segments dataframe. long format number rows (bins) sample.  using output CalculateACNs function first run SegmentsToCopyNumber convert long.  Expects following columns:  c(\"chromosome\", \"start\", \"end\", \"state\", \"sample_id\") order (optional) Character vector. Defines order samples plotted.  particularly useful plotting 1 heatmap next one another.  Allows samples line-horizontally. Example: c(\"CC-CHM-1341\", \"CC-CHM-1347\", \"CC-CHM-1355\", CC-CHM-1361\", \"CC-HAM-0369\", \"CC-HAM-0374\", \"CC-HAM-0379\", \"CC-HAM-0383\", \"CC-HAM-0385\") ret_order (optional) Logical. set TRUE function returns order samples plotted. save_path (optional) String. Expects path directory plot saved. (png) obj_name (optional) String. Adds tag end filename saving image.  used save_path parameter also set.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ACNDiversityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Copy-Number Diversity Heatmap — ACNDiversityPlot","text":"ggplot2 object list ggplot2 object vector ordered sample names.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"function takes existing absolute copy-number plot, vector gene names, optionally Ensembl DB use looking gene annotations. Ensure use Ensembl DB annotates genome version used existing plot. plot genes interest labeled returned.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"","code":"AddGenesToPlot(plot, genes, edb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75, ...)"},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"plot ggplot object, corresponding existing absolute copy-number plot. genes vector gene symbols like label plot -- use upper case. edb name local Ensembl DB package use looking gene information. Defaults EnsDb.Hsapiens.v75, annotates hg19/GRCh37. ... Additional options controlling visual display labels; passed ggrepel::geom_label_repel(), supports arguments.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/AddGenesToPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label genes of interest on an absolute copy-number plot. — AddGenesToPlot","text":"ggplot object gene labels added.","code":""},{"path":[]},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"order 1--1 comparisons QDNAseq WisecondorX outputs useful outputs format. function creates QDNAseq object WisecondorX output files returns .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"","code":"BuildWxQdnaObject(   input_path,   genome_used = \"hg19\",   bin_size = 30000,   Xincluded = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"input_path (string) path output files generated WisecondorX. directory. genome_used (string) reference genome used alignment. (default: hg19) bin_size (integer) bin size used copy number calling base pairs. (default: 30000) Xincluded (logical) Whether X chromosome included analysis. (default: FALSE)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/BuildWxQdnaObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a QDNAseq object from the WisecondorX output files — BuildWxQdnaObject","text":"QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"Whole genome copy number plot one sample partitioning lines chromosomes.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"","code":"CNSegmentsPlot(   cnobj,   sample = NULL,   copy_number_steps = NULL,   max_points_to_display = Inf,   highlight_masks = NULL,   min_copy_number = NULL,   max_copy_number = NULL,   copy_number_breaks = NULL,   dolog2 = NULL,   def_point_colour = \"black\",   point_alpha = 0.6,   point_size = 1,   point_shape = 16,   segment_colour = \"red\",   segment_alpha = 1,   segment_line_size = 1.5,   copy_number_step_colour = \"blue\",   copy_number_step_alpha = 0.35,   copy_number_step_line_size = 0.75,   xlabel = \"chromosome\",   ylabel = \"copy number\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"cnobj QDNAseq object contains copynumber, segmented assay slots.  function expects copy-number data segmented. May contain multiple samples. sample character string indicating sample.  Required object passed cnobj contains data multiple samples.  Ex. c('sample1')  Must match one sample names exactly. copy_number_steps data frame containing absolute_copy_number copy_number columns. max_points_to_display maximum number copy number points display (downsampling may carried copy number values number). highlight_masks character string indicating feature data slots containing logical masks bins. slot given colour.  Keep mind NA values filtered masks overlap last one take precedence.  Ex. c('comCNV.mask', 'centro.telo.mask') min_copy_number Numeric. minimum copy_number display. Effectively controls Y-axis limits. max_copy_number Numeric. maximum copy_number display. Effectively controls Y-axis limits. copy_number_breaks Vector integers. Breaks grid lines displayed.  ex. c(1:12) def_point_colour character string indicating colour default copy number points. point_alpha Numeric. transparency copy number points. point_size size copy number points. point_shape point shape. See ggplot2::geom_point() docs shape parameter details. segment_colour colour copy number segments. segment_alpha transparency copy number segments. segment_line_size size lines copy number segments. copy_number_step_colour colour copy number step lines. copy_number_step_alpha transparency copy number step lines. copy_number_step_line_size size lines copy number. steps. xlabel, ylabel x- y-axis labels.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"ggplot object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CNSegmentsPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segment Copy Number Plot across the Genome — CNSegmentsPlot","text":"copynumber values passed function can relative absolute scales, log2 ratios. However, scale used consistently slot cnobj (copy_number_steps dataframe case may ).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Absolute Copy Numbers — CalculateACNs","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"CalculateACNs() calculates absolute copy numbers (ACNs) relative copy number profiles one samples. several included options . Note: providing table variant allele frequencies (VAFs) 'mad' method available. function makes use rascal package R instructions can found vignette:  https://github.com/crukci-bioinformatics/rascal/blob/master/vignettes/rascal.Rmd","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"","code":"CalculateACNs(   cnobj,   acnmethod,   rascal_sols = NULL,   variants = NULL,   acn_save_path = FALSE,   return_sols = FALSE,   return_S4 = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"cnobj S4 object type QDNAseqCopyNumbers. object must contain copynumber slot segmented slot. acnmethod method calculate ACNs. Can one :  \"maxvaf\" - Calculate ACNs assuming maximum discovered VAF sample appropriate representation tumour fraction.  char vector - rather using max vaf provide character vector genes pull VAFs. genes assumed order decreasing precedence. ex. c('TP53', 'KRAS', 'PTEN')  \"mad\" - Calculate ACNs using mean absolute difference (MAD) column solutions table.  using variant allele frequencies targeted panel sequencing technology: variants must must datatable/dataframe. Required columns: sample_id, chromosome, start, end, gene_name, ref, alt, vaf. row said table must correspond unique variant. variant must associated variant allele frequency. row must also associated specific sample.  dataframe known ploidies per sample - Calculate ACNs bin given already know ploidy samples. rascal_sols tsv dataframe calculated rascal solutions. variants (optional) Dataframe string. table variants containing variant allele frequencies per gene per sample. acn_save_path (optional) String. output path (absolute path recommended) save result. return_sols (optional) Logical. Return selected rascal solution. return_S4 (optional) Logical.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"list containing: list dataframes (one sample) QDNAseq S4 object. Optionally, dataframe rascal solutions.  function returns ACNs rascal solution found, one , sample skipped.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CalculateACNs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Absolute Copy Numbers — CalculateACNs","text":"","code":"solutions <- \"~/Documents/.../rascal_solutions.csv\" rcn.obj <- \"~/repos/utanosmodellingdata/sample_copy_number_data/sample_filtered_cn_data.rds\" variants <- \"~/Documents/.../allvariants.clinvar.cosmic.exons.csv\" save_path <- \"~/Documents/.../rascal_ACN_segments.rds\" variants <- data.table::fread(file = variants, sep = ',') variants <- variants %>% dplyr::rename(chromosome = chr,                                        gene_name = genecode_gene_name) outputs <- CalculateACNs(rcn.obj,                          acn.method = 'maxvaf',                          rascal_sols = solutions,                          variants = variants,                          return_sols = TRUE,                          return_S4 = TRUE) output <- CalculateACNs(rcn.obj,                         rascal_sols = solutions,                         variants = variants,                         acnmethod = c('TP53', 'KRAS', 'BRCA1',                                       'BRCA2', 'PIK3CA', 'PTEN'),                         acn_save_path = save_path) output <- CalculateACNs(rcn.obj,                         rascal_sols = solutions,                         acnmethod = 'mad')"},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"CallSignatures() calculates copy-number signature exposures list samples given segmented copy-number profiles. function makes use code found CN-Signatures bitbucket repo. described robustly https://www.nature.com/articles/s41588-018-0179-8.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"","code":"CallSignatureExposures(   copy_numbers_input,   component_models = NULL,   signatures = NULL,   plot_savepath = NULL,   sigs_savepath = NULL,   relativeCN_data = FALSE,   refgenome = \"hg19\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"copy_numbers_input list dataframes. dataframe segmented copy-numbers sample. component_models String. mixture models use determining components present dataset.  Options:  'component_models/30kb_ovarian/component_models_britroc_aCNs.rds' - Components determined modelling Britroc Ovarian sWGS samples. (Macintyre 2018)  'vancouver_HQendo_VAFrascal' - Components determined modelling high-quality p53abn sWGS endometrial samples. (2022) signatures String. signatures . Please name calculate exposures.  Options:  'signatures/30kb_ovarian/component_by_signature_britroc_aCNs.rds' - signatures created using Britroc Ovarian sWGS samples. (Macintyre 2018)  'VAFrascalHQendoVan6sigs' - signatures created using high-quality p53abn sWGS endometrial samples. plot_savepath (optional) String. path save sample--component heatmap. Please provide directory. sigs_savepath (optional) String. path save csv calculated signature exposures. Please provide directory. relativeCN_data (optional) Logical. using relative Copy-Number data input, set true. Otherwise, ignore. refgenome (optional) String. reference genome used. (ex. 'hg19', 'hg38') data_path String. path find signatures objects component models.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"dataframe exposures sample signature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CallSignatureExposures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to find Signature Exposures for a set of samples — CallSignatureExposures","text":"","code":"todo - make examples"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"Uses NMF package estimate rank matrix provided. context signature finding, equivalent determining optimal number signatures.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"","code":"ChooseNumberSignatures(   sample_by_component,   min_sig = 3,   max_sig = 12,   iter = 100,   cores = 4,   nmfalg = \"brunet\",   seed = 77777 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"sample_by_component Matrix. Expects sum--posteriors probability matrix. Likely output GenerateSampleByComponentMatrix(). min_sig Integer. Minimum number signatures consider. max_sig Integer. Maximum number signatures consider. iter Integer. number runs NMF perform rank random seed. cores Integer. (NMF param) number cores use running NMF.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"figure. figure plotting cophenetic distance, dispersion, sparseness silhouette score.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChooseNumberSignatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choose an Optimal Number of Signatures — ChooseNumberSignatures","text":"NMF Package (Brunet algorithm specification) used deconvolute sample--component sum--posteriors matrix sample--signature matrix signature--component matrix. default search interval 3-12 used rank. compare/context input matrix also shuffled procedure performed. results co-plotted give baseline.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Chromosome Name — ChromosomeSplitPos","title":"Split Chromosome Name — ChromosomeSplitPos","text":"Function split compounded chromosome-position names separate columns. Distinct columns chromosome number, start, ending positions result.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Chromosome Name — ChromosomeSplitPos","text":"","code":"ChromosomeSplitPos(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Chromosome Name — ChromosomeSplitPos","text":"x dataframe containing copy number segments long format columns:  chr sample segVal","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Chromosome Name — ChromosomeSplitPos","text":"dataframe containing three separate columns chromosome number, sample segVal","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ChromosomeSplitPos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split Chromosome Name — ChromosomeSplitPos","text":"QDNAseq object generally contains chromosome position information :  chromosome:start-end. inconvenient plotting data wrangling.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapses down table to segmented copy numbers — CollapseTableToSegments","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"CollapseTableToSegments transforms relative copy-number calls segment tables.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"","code":"CollapseTableToSegments(df)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"df dataframe. dataframe copy number calls (columns 'chromosome', 'start', 'end', 'mean.cn')","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapseTableToSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapses down table to segmented copy numbers — CollapseTableToSegments","text":"dataframe. dataframe segment summaries various characteristics (derived copy-number calls)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse segments — CollapsedSegs","title":"Collapse segments — CollapsedSegs","text":"Collapsed segmented dataframe","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse segments — CollapsedSegs","text":"","code":"CollapsedSegs(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CollapsedSegs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse segments — CollapsedSegs","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"CopyNumberSegments() transforms relative copy-number calls segment tables. Inverse SegmentsToCopyNumber function.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"","code":"CopyNumberSegments(copy_number)"},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"copy_number dataframe. dataframe copy number calls (columns 'sample', 'chromosome', 'start', 'end', 'segmented')","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopyNumberSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapses relative copy-number calls to segment tables — CopyNumberSegments","text":"dataframe. dataframe summaries various characteristics (derived copy-number calls)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopySegFlat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","title":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","text":"Function create dataframe containing relative copy numbers segmented calls QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/CopySegFlat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a DF of CNs and Segments from S4 QDNAseq object — CopySegFlat","text":"","code":"CopySegFlat(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"Function export bins QDNAseq object wide dataframe. Can \"copynumber\", \"segments\", \"calls\" slots. Unlike similar function 'exportBins' QDNAseq package log-normalize.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"","code":"ExportBinsQDNAObj(   object,   type = c(\"copynumber\", \"segments\", \"calls\"),   filter = TRUE,   digits = 3,   chromosomeReplacements = c(`23` = \"X\", `24` = \"Y\", `25` = \"MT\"),   ... )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"object QDNAseq Object containing copy number segments long format columns:  chr sample segVal type character Type data export, options \"copynumber\" (corrected uncorrected read counts), \"segments\", \"calls\". filter logical @TRUE, bins filtered, otherwise . digits numeric number digits round . chromosomeReplacements named char vector named character vector chromosome name replacements done. used object class: cghRaw, cghSeg, cghCall, cghRegions,  since classes store chromosome names integers, whereas QDNAseq object types use character vectors. Defaults c(\"23\"=\"X\", \"24\"=\"Y\", \"25\"=\"MT\") human.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExportBinsQDNAObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the CN bins of a QDNAseq Object to a wide dataframe — ExportBinsQDNAObj","text":"wide dataframe containing column sample well 4 additional columns: feature, chromosome, start, end","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"Extract genome-wide copy-number features data either list dataframes QDNAseq S4 object 1 samples. function intended run absolute CN data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"","code":"ExtractCopyNumberFeatures(CN_data, genome, cores = 1, extra_features = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"CN_data List datafames S4 QDNAseq object. Segmented copy-number data 1 samples. input list dataframes, columns : chromosome start end segVal genome Character string. reference genome used alignment.  Options: 'hg19', 'hg38' cores Integer. number cores use parallel processing. extra_features Logical. TRUE, extracts CN-feature data two features: nc50, cdist.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"list. list element contains feature data single feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractCopyNumberFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Absolute Copy-Number Features — ExtractCopyNumberFeatures","text":"extracted copy-number features : Breakpoint count per 10MB - bp10MB Copy-number value segment - copynumber Copy-number difference adjacent segments - changepoint Breakpoint count per chromosome arm - bpchrarm Lengths oscillating CN segment chains - osCN Size copy-number segments base-pairs - segsize Extra features:  7. Minimum number chromosomes (count) needed account 50% CN changes sample - nc50  8. Distance base pairs breakpoint centromere - cdist","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"Extract genome-wide copy-number features either list dataframes QDNAseq S4 object 1 samples. function intended run relative CN data.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"","code":"ExtractRelativeCopyNumberFeatures(   CN_data,   genome,   cores = 1,   extra_features = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"CN_data List datafames S4 QDNAseq object. Segmented relative copy-number data 1 samples. input list dataframes, columns : chromosome start end segVal genome Character string. reference genome used alignment.  Options: 'hg19', 'hg38' cores Integer. number cores use parallel processing. extra_features Logical. TRUE, extracts CN-feature data two features: nc50, cdist.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"list. list element contains feature data single feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/ExtractRelativeCopyNumberFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Relative Copy-Number Features — ExtractRelativeCopyNumberFeatures","text":"function identical absolute calling equivalent three features. osCN, changepoint, copynumber features require slightly different modelling relative scale. extracted copy-number features : Breakpoint count per 10MB - bp10MB Copy-number value segment - copynumber Copy-number difference adjacent segments - changepoint Breakpoint count per chromosome arm - bpchrarm Lengths oscillating CN segment chains - osCN Size copy-number segments base-pairs - segsize Extra features:  7. Minimum number chromosomes (count) needed account 50% CN changes sample - nc50  8. Distance base pairs breakpoint centromere - cdist","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"Remove set mask relative CN bins","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"","code":"FilterCNs(   cnobj,   filter_by = NULL,   genome = \"hg19\",   minimum_overlap = 5000,   removebins = FALSE,   maskgaps = FALSE,   maskcomCNVs = FALSE,   maskname = \"mask1\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"cnobj QDNASeq object containing relative copy number calls well segmented relative copy number calls filter_by Optional Dataframe containing genomic regions filter/mask. One region expected per row.  Expected columns:  chr start end etc. etc. genome character string reference genome used. ex \"hg38\" minimum_overlap integer designating number minimum number overlapping bases bin removed. removebins Logical. TRUE remove bins overlapping indicated regions. maskgaps Logical. TRUE remove bins overlapping centromeric telomeric regions. sure indicate correct reference genome. maskcomCNVs Logical. TRUE remove bins overlapping commonly copy-number variant regions organism. sure indicate correct reference genome. maskname character string name used case setting mask. Set field providing DF filter_by parameter.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"QDNAseq object filtered masks set.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FilterCNs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove or set a mask for relative CN bins (QDNAseq object) — FilterCNs","text":"Expects input QDNAseq object containing relative copy-number calls (QDNASeq WiseCondorX).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Mixture Models for each CN-Feature — FitMixtureModels","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"Perform mixture modelling CN-features using either mixture gaussians poissons.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"","code":"FitMixtureModels(   CN_features,   seed = 77777,   min_comp = 2,   max_comp = 10,   min_prior = 0.001,   model_selection = \"BIC\",   nrep = 1,   niter = 1000,   cores = 1,   featsToFit = seq(1, 6) )"},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"CN_features list. output either ExtractRelativeCopyNumberFeatures ExtractCopyNumberFeatures functions. seed Integer. (flexmix param) random seed use modelling. min_comp Integer. (flexmix param) minimum number components CN-feature consider. max_comp Integer. (flexmix param) maximum number components CN-feature consider. min_prior Numeric. (flexmix param) Minimum prior probability clusters, components falling threshold removed iteration. model_selection Integer character. (flexmix param) model get. Choose number name information criterion. nrep Integer. (flexmix param) number times flexmix run k (number components). niter Integer. (flexmix param) maximum number iterations EM-algorithm. cores Integer. number cores use parallel processing. featsToFit Integer vector. CN-features fit.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"list flexmix objects. One CN-feature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/FitMixtureModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Mixture Models for each CN-Feature — FitMixtureModels","text":"segment size, changepoint copy number, segment copy-number value CN-features modelled mixture Gaussians. breakpoint count per 10MB, length segments oscillating copy-number, breakpoint count per chromosome mixture Poissons used instead. Mixture modelling done using FlexMix package.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Mixture of Gaussians — GaussiansMixturePlot","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"function plots mixture models component composed gaussians. mixture components plotted, elevated indicated signature shaded.  Additionally, inlay plot created 'important' components ... components 'squashed' . - .e. least 1 weight > 0.05","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"","code":"GaussiansMixturePlot(   signatures,   components,   sig_of_interest = 1,   component = \"segsize\",   inlay_flag = TRUE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"signatures dataframe components along y-axis signatures along x. components list S4 objects belonging class 'flexmix'. sig_of_interest (optional) single integer vector integers corresponding signatures make plots.  absence value passed parameter, plots just first signature returned. component (optional) component draw gaussian curves . (options: segsize, changepoint, copynumber) inlay_flag (optional) Boolean flag turn /inlay plot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GaussiansMixturePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Mixture of Gaussians — GaussiansMixturePlot","text":"ggplot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"function takes input QDNAseq CGHcall copy-number object gives back Cytoband .tsv tables absolute copy-number calls (human readable format).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"","code":"GenHumanReadableAcnProfile(object, save_path)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"object S4 copy-number object - QDNAseq CGHcall object save_path string. path (directory) segment tables saved. ex. '~/Documents/test_project'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableAcnProfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Human Readable Absolute Copy-Number Profiles — GenHumanReadableAcnProfile","text":"table. Collapsed Segment tables long format (sample id) ready written table file (ex. tsv, csv).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"function takes input QDNAseq CGHcall copy-number object gives back long-format table several useful columns. columns include; 'sample', 'chromosome', 'start', 'end', 'gain_probability', 'loss_probability', 'relative_copy_number', 'bin_count', 'sum_of_bin_lengths', 'cytobands', 'coordinates', 'size'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"","code":"GenHumanReadableRcnProfile(object, binsize, ref_genome, save_dir = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"object S4 copy-number object - QDNAseq CGHcall object binsize binsize used copy number object. ex. '30kb', '100kb' ref_genome One common reference genomes: ex. 'hg19', 'mm10', 'hg38' save_dir (optional) directory tables saved. ex. '~/Documents/test_project'","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenHumanReadableRcnProfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Human Readable Relative Copy-Number Profiles — GenHumanReadableRcnProfile","text":"Segment tables long format (sample id) ready written table file (ex. tsv, csv).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"Given set extracted copy-number features mixture models feature, generate sum--posteriors matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"","code":"GenerateSampleByComponentMatrix(   CN_features,   all_components = NULL,   cores = 1,   rowIter = 1000,   subcores = 2 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"CN_features list. output either ExtractRelativeCopyNumberFeatures() ExtractCopyNumberFeatures() functions. all_components list flexmix objects. One CN-feature. Likely output FitMixtureModels(). cores Integer. number cores use parallel processing. rowIter Integer. Number rows ingest per iteration using multiple cores. Otherwise ignored. subcores Integer. parallel mode CN-feature run separately, number cores allocate sub-jobs.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"sum--posteriors probability matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSampleByComponentMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate sum-of-posteriors probability matrix — GenerateSampleByComponentMatrix","text":"copy-number event sample posterior probability belonging component computed. posterior event vectors summed resulting sum--posterior probabilities vector. sum--posterior vectors combined single patient--component sum--posterior probabilities matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CN-Signatures — GenerateSignatures","title":"Create CN-Signatures — GenerateSignatures","text":"Create copy-number signatures decomposing sample--component matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CN-Signatures — GenerateSignatures","text":"","code":"GenerateSignatures(   sample_by_component,   nsig,   seed = 77777,   nmfalg = \"brunet\",   nruns = 1000,   cores = 4 )"},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CN-Signatures — GenerateSignatures","text":"sample_by_component Matrix. Expects sum--posteriors probability matrix. nsig Integer. number signatures. Likely decided examining plot ChooseNumberSignatures(). seed Integer. (flexmix param) random seed use modelling. nmfalg Character string. (NMF param) specification NMF algorithm. cores Integer. (NMF param) number cores use running NMF.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create CN-Signatures — GenerateSignatures","text":"NMFfit object. Contains two matrices post decomposition.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GenerateSignatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create CN-Signatures — GenerateSignatures","text":"Given sample--component sum--posteriors matrix matrix rank, decompose two distinct matrices. One matrix sample--signature matrix signature--component matrix. package, refer signature--component matrix set 'copy-number signatures'.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"Function classify quality relative copy number profile calls QDNAseq WiseCondorX","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"","code":"GetSampleQualityDecision(x, metric = \"quantile\", cutoff = 0.95)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"x QDNASeq object containing relative copy number calls well segmented relative copy number calls","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"dataframe sample quality decisions (\"Low\" \"High\" quality sample)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSampleQualityDecision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and make a quality call for relative copy number profiles — GetSampleQualityDecision","text":"Expects input QDNAseq object containing relative copy-number calls (QDNASeq WiseCondorX).  Classifies relative copy number profiles \"High\" \"Low\" quality.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate segment sizes — GetSegCounts","title":"Calculate segment sizes — GetSegCounts","text":"Calculate segment sizes","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate segment sizes — GetSegCounts","text":"","code":"GetSegCounts(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/GetSegCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate segment sizes — GetSegCounts","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number new_segment (indicator variable segment copy_number call belongs )","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"MakeSummaryTable takes QDNAseq CN-object returns tables containing agglomerated RCN gain/loss information across provided samples.  Prior summarizing gains/losses, function applies log2 transformation center data 0.  Optionally also writes TSV table containing summary.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"","code":"MakeSummaryTable(   CNobj,   lowT,   highT,   pL = 0.1,   pG = 0.1,   prop = 0.5,   find_peaks = FALSE,   snames = FALSE,   ref_genome = \"hg19\",   save_path = FALSE )"},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"CNobj S4 object type QDNAseqCopyNumbers. object must contain slots :  copynumber, segmented (standard CN slots)  probgain, probdloss, probamp, probnorm, calls, probloss (running CGHcall) lowT Numeric (negative). Ignore gains/losses value 0. ex. -0.1  parameter helps filter noise. highT Numeric (positive). Ignore gains/losses value 0. ex. 0.1  parameter helps filter noise. pL (optional) Numeric. probability threshold (0 1). Mask loss events probability rise threshold. pG (optional) Numeric. probability threshold (0 1). Mask gain events probability rise threshold. prop (optional) Numeric. proportion threshold (0 1). Exclude gain/loss events occur less proportion samples. find_peaks (optional) Logical. TRUE, returns table peaks found summarized data. snames (optional) Character vector. vector sample IDs interest. ref_genome (optional) String. reference genome used alignment.  Options: 'hg19', 'hg38', 'mm10' save_path (optional) String. path (directory) segment tables saved. ex. '~/Documents/test_project'.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MakeSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes Relative Copy-Number Gain/Loss Summary Tables — MakeSummaryTable","text":"list data frames. Always summary_table, optionally peaks data frame.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate median segment-level variance per sample — MedSegVar","title":"Calculate median segment-level variance per sample — MedSegVar","text":"Calculate median segment-level variances per sample (median absolute deviance)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate median segment-level variance per sample — MedSegVar","text":"","code":"MedSegVar(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/MedSegVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate median segment-level variance per sample — MedSegVar","text":"x Dataframe containing following columns: chromosome, start, stop, segmented, copy_number new_segment (indicator variable segment copy_number call belongs )","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Mixture Model Components by Signature — MixtureModelPlots","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"function (MixtureModelPlots), indicated CN-Signature (S), returns list six ggplots. plot visualizes mixture models used feature. mixture components plotted, elevated S shaded.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"","code":"MixtureModelPlots(signatures, components, sig_of_interest = 1)"},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"signatures dataframe components along y-axis signatures along x. components list S4 objects belonging class 'flexmix'. sig_of_interest (optional) single integer corresponding signature make plots.  absence value passed parameter, plots just first signature returned.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/MixtureModelPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Mixture Model Components by Signature — MixtureModelPlots","text":"list ggplots.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Mixture of Poissons — PoissonsMixturePlot","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"function plots mixture models component composed poisson distributions. mixture components plotted, elevated specified signature shaded.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"","code":"PoissonsMixturePlot(   signatures,   components,   sig_of_interest = 1,   component = \"bp10MB\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"signatures dataframe components along y-axis signatures along x. components list S4 objects belonging class 'flexmix'. sig_of_interest (optional) single integer vector integers corresponding signatures make plots.  absence value passed parameter, plots just first signature returned. component (optional) component draw poisson 'curves' . (options: bp10MB, osCN, bpchrarm)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/PoissonsMixturePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Mixture of Poissons — PoissonsMixturePlot","text":"ggplot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample quality according to a specified metric. — QualityPlot","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"Plot sample quality according specified metric.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"","code":"QualityPlot(sample_quality_df, metric = \"quantile\")"},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"sample_quality_df sample quality data-frame returned GetSampleQualityDecision(). metric quality metric passed GetSampleQualityDecision(). One quanitle, DecisionTree.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QualityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample quality according to a specified metric. — QualityPlot","text":"ggplot object quality plot.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantify Signature Exposures — QuantifySignatures","title":"Quantify Signature Exposures — QuantifySignatures","text":"Given set signatures posteriors extracted CN-feature across samples set component models  calculates signature exposures. Said concretely, given sample--component matrix component--signature matrix, finds linear combination decomposition (LCD). See YAPSA::LCD function details.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantify Signature Exposures — QuantifySignatures","text":"","code":"QuantifySignatures(sample_by_component, component_by_signature = NULL)"},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantify Signature Exposures — QuantifySignatures","text":"sample_by_component Matrix. Provide matrix posteriors sample component model used. component_by_signature String object type NMFfitX1. string, function expects path CN-Signatures (NMFfitX1 object) stored rds.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/QuantifySignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantify Signature Exposures — QuantifySignatures","text":"matrix exposures sample signature.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot relative CN diversity heatmap — RCNDiversityPlot","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Function plot copy number profile relative copy numbers","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"","code":"RCNDiversityPlot(   qdnaseq_obj,   order_by = NULL,   cluster = TRUE,   subset = NULL,   Xchr = FALSE,   limits = c(-1.5, 1.5),   breaks = c(2.5, 1, 0.5, 0, -0.5, -1, -2.5) )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"order_by optional character vector containing order samples heatmap cluster optional logical want row-wise sort  heatmap (sort samples) subset optional character vector subset samples like plot. limits vector containing limits colour gradient. Passed scale_fill_gradientn breaks vector containing limits colour gradient. Passed scale_fill_gradientn x dataframe containing copy number segments long format: columns start, sample id (named sample) segmented","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Heatmap relative copy number calls","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RCNDiversityPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot relative CN diversity heatmap — RCNDiversityPlot","text":"Visualizing relative copy number calls WiseCondorX QDNASeq heatmaps","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeCNSegmentsPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Relative Copy Numbers — RelativeCNSegmentsPlot","title":"Plot Relative Copy Numbers — RelativeCNSegmentsPlot","text":"Just updated version QDNAseq package's plot() method. version just allows relative copy number calls WiseCondorX . else remains . See <QDNAseq plotting> method details.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeCNSegmentsPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Relative Copy Numbers — RelativeCNSegmentsPlot","text":"","code":"RelativeCNSegmentsPlot(   x,   main = NULL,   includeReadCounts = TRUE,   logTransform = TRUE,   scale = TRUE,   sdFUN = \"sdDiffTrim\",   delcol = getOption(\"QDNAseq::delcol\", \"darkred\"),   losscol = getOption(\"QDNAseq::losscol\", \"red\"),   gaincol = getOption(\"QDNAseq::gaincol\", \"blue\"),   ampcol = getOption(\"QDNAseq::ampcol\", \"darkblue\"),   pointcol = getOption(\"QDNAseq::pointcol\", \"black\"),   segcol = getOption(\"QDNAseq::segcol\", \"chocolate\"),   misscol = getOption(\"QDNAseq::misscol\", NA),   pointpch = getOption(\"QDNAseq::pointpch\", 1L),   pointcex = getOption(\"QDNAseq::pointcex\", 0.1),   xlab = NULL,   ylab = NULL,   ylim = NULL,   xaxt = \"s\",   yaxp = NULL,   showDataPoints = TRUE,   showSD = TRUE,   doSegments = TRUE,   doCalls = TRUE,   ...,   verbose = getOption(\"QDNAseq::verbose\", TRUE) )"},{"path":"https://huntsmanlab.github.io/utanos/reference/RelativeCNSegmentsPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Relative Copy Numbers — RelativeCNSegmentsPlot","text":"Supply QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"SEAlluvialPlot builds ggplot using easyalluvial R package. two sets exposures set samples visualizes maximum exposure one set signatures related .","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"","code":"SEAlluvialPlot(exposA, exposB, orderA = NULL, orderB = NULL)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"exposA matrix signature exposures. Signatures rows, samples columns. Likely output CallSignatureExposures(). exposB matrix signature exposures. Signatures rows, samples columns. orderA (Optional) character vector signature names enforce order.  Signature set assigned names S.A1 -> S.#, B S.B1 -> S.B#  ex. c('S.B2', 'S.B5', 'S.B3', 'S.B4', 'S.B1', 'S.B6') orderB (Optional) character vector signature names enforce order.  Signature set assigned names S.A1 -> S.#, B S.B1 -> S.B#  ex. c('S.B2', 'S.B5', 'S.B3', 'S.B4', 'S.B1', 'S.B6') Must set set samples provided exposA. Likely output CallSignatureExposures().","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SEAlluvialPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an Alluvial Plot based on maximum signature exposure — SEAlluvialPlot","text":"list. ggplot corresponding data matrix.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SampleGrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract sample grouping — SampleGrouping","title":"Extract sample grouping — SampleGrouping","text":"Extract sample grouping","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SampleGrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract sample grouping — SampleGrouping","text":"","code":"SampleGrouping(x)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SampleGrouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract sample grouping — SampleGrouping","text":"x param_dat containing following columns: sample sample quality parameters","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"SegmentsToCopyNumber() transforms segment tables per-bin copy-number tables. expansion calls per-bin style, bin size user defined. inverse CopyNumberSegments function.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"","code":"SegmentsToCopyNumber(segs, bin_size, genome = \"hg19\", Xincluded = FALSE)"},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"segs list dataframes, dataframe dataframe segmented copy-numbers. bin_size natural number. binsize used copy number object, ex. 30 -> 30kb, 100 -> 100kb. genome string. Refers reference genome, common reference genomes : 'hg19', 'mm10', 'hg38'. Xincluded boolean. Sex chromosomes Boolean (e.g. FALSE included).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SegmentsToCopyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms segment tables into per-bin copy-number tables. — SegmentsToCopyNumber","text":"dataframe per-bin copy numbers (bounded sample).","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"Converts signature-per-sample data heatmap, optionally saves png, returns ggplot. Samples sorted display based maximum signature exposure. Heatmap plotted viridis colour-scheme.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"","code":"SignatureExposuresPlot(   signatures,   order = FALSE,   transpose = FALSE,   save_path = FALSE,   obj_name = \"sig_exposures_obj\" )"},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"signatures Dataframe. Expects dataframe signature exposures (rows) samples (columns). order (optional) Character vector. Defines order samples plotted.  particularly useful plotting 1 heatmap next one another.  Allows samples line-horizontally.  Example: c(\"CC-CHM-1341\", \"CC-CHM-1347\", \"CC-CHM-1355\", CC-CHM-1361\", \"CC-HAM-0369\", \"CC-HAM-0374\", \"CC-HAM-0379\", \"CC-HAM-0383\", \"CC-HAM-0385\") transpose (optional) Logical. set TRUE function returns order samples plotted. save_path (optional) String. Expects path directory plot saved. (png) obj_name (optional) String. Adds tag end filename saving image.  used save_path parameter also set.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SignatureExposuresPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Heatmap of Signature Exposures — SignatureExposuresPlot","text":"list ggplot2 object vector ordered sample names.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"function copied modified another package (CGHbase). original code can found github: https://github.com/tgac-vumc/CGHbase bioconductor page: https://bioconductor.org/packages/release/bioc/html/CGHbase.html function creates summary plot copy-number changes samples provided QDNAseq object.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"","code":"SummaryCNPlot(   x,   main = \"Relative Copy-Number Summary Plot\",   summarytype = \"probability\",   maskprob = 0.2,   maskaberr = 0.1,   gaincol = \"blue\",   losscol = \"red\",   misscol = NA,   build = \"GRCh37\",   ... )"},{"path":"https://huntsmanlab.github.io/utanos/reference/SummaryCNPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Copy-Number Aberrations Plot — SummaryCNPlot","text":"x S4 object type QDNAseqCopyNumbers containing multiple samples. main (optional) String. Plot Title. summarytype (optional) String. One either 'probability' 'frequency'.  'probability' - vertical bars represent average probability positions along chromosome cover gained (blue bars) lost (red bars) across samples.  'frequency' - vertical bars represent frequency positions along chromosome cover gained (blue bars) lost (red bars) across samples. maskprob (optional) Numeric. Gain loss probabilities fall number masked. Used exclude noise. maskaberr (optional) Numeric. Copy-Number gains losses fall number masked. Used exclude noise.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TwoFeatureScatterPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a two-way scatterplot of two CN-features — TwoFeatureScatterPlot","title":"Make a two-way scatterplot of two CN-features — TwoFeatureScatterPlot","text":"function makes two-way scatterplot two CN-features. draws contour lines density.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/TwoFeatureScatterPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a two-way scatterplot of two CN-features — TwoFeatureScatterPlot","text":"","code":"TwoFeatureScatterPlot(featA, featB)"},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"function calculates builds heatmap component-wise wasserstein distances two mixture models.  Also known calculating 'Earth Mover's Distance'. CN-feature indicated user using \"component\" parameter function. mixture models feature set component models pulled compared. short, component mixture model indicated, distance calculated.","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"","code":"WassDistancePlot(cm_a, cm_b, component)"},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"cm_a list S4 objects class 'flexmix'. Likely output FitMixtureModels function. cm_b list S4 objects class 'flexmix'. Likely output FitMixtureModels function. component CN-feature models compare one another. (options: segsize, copynumber, bp10MB, osCN, bpchrarm)","code":""},{"path":"https://huntsmanlab.github.io/utanos/reference/WassDistancePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Heatmap of Component-wise Wasserstein Distances — WassDistancePlot","text":"list. One ggplot corresponding matrix.","code":""}]
