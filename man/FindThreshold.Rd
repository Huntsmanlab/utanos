% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shrd_find_threshold.R
\name{FindThreshold}
\alias{FindThreshold}
\title{Determines threshold for ratio_median difference via KDE.}
\usage{
FindThreshold(
  granges_obj,
  segments,
  num_simulations = 100000,
  second_round,
  seed
)
}
\arguments{
\item{granges_obj}{A GRanges object: genomic data to obtain for reference.}

\item{segments}{A data frame: segment data. For the first round, these segments have been gathered by ratio_median.
For the second round, the segments have already been re-inserted with small ones, and LGAs have already been called.}

\item{num_simulations}{An integer: the number of simulations to run to estimate the critical points.}

\item{second_round}{A boolean: which route to take for the algorithm.}

\item{seed}{A seed to use for random number generation. Ensures reproducibility between runs.}
}
\description{
The procedure is mostly similar for both rounds, except for a few changes. Cleaning/transformation leading
up to the first round is vastly different than second round. In second round we pretty much just use the data frame
we've worked up to Graph 5, whereas first round has to take different steps.

Estimating the threshold goes like:
\enumerate{
\item Prep the segment data, depending on \code{second_round}. First round works with only the large segments. Second round works
with all (large + small) segments initially, then only with large in step 4.
\item Get the differences between ratio_medians for all pairs of segments.
\item Run the simulations: more description found in RunThresholdSimulations docs, but essentially samples a batch of the differences, and
finds the local minima/maxima of this batch, via Kernel Density Estimation (KDE). Repeat \code{num_simulations} times, and in the end
we get a list of a bunch of local minima. The threshold is the average of these values.
\item If \code{second_round} == TRUE, then few extra steps (estimates threshold but only with large segments).
\item For QC purposes, the final threshold is = min(max(0.025, thr), 0.045).
}
}
